// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/UpsightLoggingSettings.proto

package POGOProtos.Settings;

public final class UpsightLoggingSettingsOuterClass {
  private UpsightLoggingSettingsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_POGOProtos_Settings_UpsightLoggingSettings_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_POGOProtos_Settings_UpsightLoggingSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0POGOProtos/Settings/UpsightLoggingSett" +
      "ings.proto\022\023POGOProtos.Settings\"j\n\026Upsig" +
      "htLoggingSettings\022\033\n\023use_verbose_logging" +
      "\030\001 \001(\010\022\032\n\022logging_percentage\030\002 \001(\005\022\027\n\017di" +
      "sable_logging\030\003 \001(\010B\002P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_POGOProtos_Settings_UpsightLoggingSettings_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_POGOProtos_Settings_UpsightLoggingSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_POGOProtos_Settings_UpsightLoggingSettings_descriptor,
        new java.lang.String[] { "UseVerboseLogging", "LoggingPercentage", "DisableLogging", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
