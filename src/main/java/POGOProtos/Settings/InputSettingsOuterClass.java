// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/InputSettings.proto

package POGOProtos.Settings;

public final class InputSettingsOuterClass {
  private InputSettingsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_POGOProtos_Settings_InputSettings_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_POGOProtos_Settings_InputSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'POGOProtos/Settings/InputSettings.prot" +
      "o\022\023POGOProtos.Settings\"\200\001\n\rInputSettings" +
      "\022%\n\035enable_frame_independent_spin\030\001 \001(\010\022" +
      ")\n!milliseconds_processed_spin_force\030\002 \001" +
      "(\005\022\035\n\025spin_speed_multiplier\030\003 \001(\002B\002P\001b\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_POGOProtos_Settings_InputSettings_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_POGOProtos_Settings_InputSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_POGOProtos_Settings_InputSettings_descriptor,
        new java.lang.String[] { "EnableFrameIndependentSpin", "MillisecondsProcessedSpinForce", "SpinSpeedMultiplier", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
