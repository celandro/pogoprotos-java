// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/PokemonUpgradeSettings.proto

package POGOProtos.Settings.Master;

public interface PokemonUpgradeSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Settings.Master.PokemonUpgradeSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int32 upgrades_per_level = 1;</code>
   * @return The upgradesPerLevel.
   */
  int getUpgradesPerLevel();

  /**
   * <code>int32 allowed_levels_above_player = 2;</code>
   * @return The allowedLevelsAbovePlayer.
   */
  int getAllowedLevelsAbovePlayer();

  /**
   * <code>repeated int32 candy_cost = 3;</code>
   * @return A list containing the candyCost.
   */
  java.util.List<java.lang.Integer> getCandyCostList();
  /**
   * <code>repeated int32 candy_cost = 3;</code>
   * @return The count of candyCost.
   */
  int getCandyCostCount();
  /**
   * <code>repeated int32 candy_cost = 3;</code>
   * @param index The index of the element to return.
   * @return The candyCost at the given index.
   */
  int getCandyCost(int index);

  /**
   * <code>repeated int32 stardust_cost = 4;</code>
   * @return A list containing the stardustCost.
   */
  java.util.List<java.lang.Integer> getStardustCostList();
  /**
   * <code>repeated int32 stardust_cost = 4;</code>
   * @return The count of stardustCost.
   */
  int getStardustCostCount();
  /**
   * <code>repeated int32 stardust_cost = 4;</code>
   * @param index The index of the element to return.
   * @return The stardustCost at the given index.
   */
  int getStardustCost(int index);

  /**
   * <code>float shadow_stardust_multiplier = 5;</code>
   * @return The shadowStardustMultiplier.
   */
  float getShadowStardustMultiplier();

  /**
   * <code>float shadow_candy_multiplier = 6;</code>
   * @return The shadowCandyMultiplier.
   */
  float getShadowCandyMultiplier();

  /**
   * <code>float purified_stardust_multiplier = 7;</code>
   * @return The purifiedStardustMultiplier.
   */
  float getPurifiedStardustMultiplier();

  /**
   * <code>float purified_candy_multiplier = 8;</code>
   * @return The purifiedCandyMultiplier.
   */
  float getPurifiedCandyMultiplier();

  /**
   * <code>int32 max_normal_upgrade_level = 9;</code>
   * @return The maxNormalUpgradeLevel.
   */
  int getMaxNormalUpgradeLevel();

  /**
   * <code>int32 default_cp_boost_additional_level = 10;</code>
   * @return The defaultCpBoostAdditionalLevel.
   */
  int getDefaultCpBoostAdditionalLevel();
}
