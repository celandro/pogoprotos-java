// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/CameraSettings.proto

package POGOProtos.Settings.Master;

/**
 * Protobuf type {@code POGOProtos.Settings.Master.CameraSettings}
 */
public  final class CameraSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:POGOProtos.Settings.Master.CameraSettings)
    CameraSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CameraSettings.newBuilder() to construct.
  private CameraSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CameraSettings() {
    nextCamera_ = "";
    interpolation_ = java.util.Collections.emptyList();
    targetType_ = java.util.Collections.emptyList();
    easeInSpeed_ = emptyFloatList();
    easeOutSpeed_ = emptyFloatList();
    durationSeconds_ = emptyFloatList();
    waitSeconds_ = emptyFloatList();
    transitionSeconds_ = emptyFloatList();
    angleDegree_ = emptyFloatList();
    angleOffsetDegree_ = emptyFloatList();
    pitchDegree_ = emptyFloatList();
    pitchOffsetDegree_ = emptyFloatList();
    rollDegree_ = emptyFloatList();
    distanceMeters_ = emptyFloatList();
    heightPercent_ = emptyFloatList();
    vertCtrRatio_ = emptyFloatList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CameraSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CameraSettings(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            nextCamera_ = s;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              interpolation_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            interpolation_.add(rawValue);
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                interpolation_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              interpolation_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              targetType_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000002;
            }
            targetType_.add(rawValue);
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                targetType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              targetType_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 37: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              easeInSpeed_ = newFloatList();
              mutable_bitField0_ |= 0x00000004;
            }
            easeInSpeed_.addFloat(input.readFloat());
            break;
          }
          case 34: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
              easeInSpeed_ = newFloatList();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              easeInSpeed_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 45: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              easeOutSpeed_ = newFloatList();
              mutable_bitField0_ |= 0x00000008;
            }
            easeOutSpeed_.addFloat(input.readFloat());
            break;
          }
          case 42: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
              easeOutSpeed_ = newFloatList();
              mutable_bitField0_ |= 0x00000008;
            }
            while (input.getBytesUntilLimit() > 0) {
              easeOutSpeed_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 53: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              durationSeconds_ = newFloatList();
              mutable_bitField0_ |= 0x00000010;
            }
            durationSeconds_.addFloat(input.readFloat());
            break;
          }
          case 50: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
              durationSeconds_ = newFloatList();
              mutable_bitField0_ |= 0x00000010;
            }
            while (input.getBytesUntilLimit() > 0) {
              durationSeconds_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 61: {
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              waitSeconds_ = newFloatList();
              mutable_bitField0_ |= 0x00000020;
            }
            waitSeconds_.addFloat(input.readFloat());
            break;
          }
          case 58: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
              waitSeconds_ = newFloatList();
              mutable_bitField0_ |= 0x00000020;
            }
            while (input.getBytesUntilLimit() > 0) {
              waitSeconds_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 69: {
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              transitionSeconds_ = newFloatList();
              mutable_bitField0_ |= 0x00000040;
            }
            transitionSeconds_.addFloat(input.readFloat());
            break;
          }
          case 66: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
              transitionSeconds_ = newFloatList();
              mutable_bitField0_ |= 0x00000040;
            }
            while (input.getBytesUntilLimit() > 0) {
              transitionSeconds_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 77: {
            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
              angleDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000080;
            }
            angleDegree_.addFloat(input.readFloat());
            break;
          }
          case 74: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
              angleDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              angleDegree_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 85: {
            if (!((mutable_bitField0_ & 0x00000100) != 0)) {
              angleOffsetDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000100;
            }
            angleOffsetDegree_.addFloat(input.readFloat());
            break;
          }
          case 82: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000100) != 0) && input.getBytesUntilLimit() > 0) {
              angleOffsetDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000100;
            }
            while (input.getBytesUntilLimit() > 0) {
              angleOffsetDegree_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 93: {
            if (!((mutable_bitField0_ & 0x00000200) != 0)) {
              pitchDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000200;
            }
            pitchDegree_.addFloat(input.readFloat());
            break;
          }
          case 90: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
              pitchDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000200;
            }
            while (input.getBytesUntilLimit() > 0) {
              pitchDegree_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 101: {
            if (!((mutable_bitField0_ & 0x00000400) != 0)) {
              pitchOffsetDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000400;
            }
            pitchOffsetDegree_.addFloat(input.readFloat());
            break;
          }
          case 98: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000400) != 0) && input.getBytesUntilLimit() > 0) {
              pitchOffsetDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000400;
            }
            while (input.getBytesUntilLimit() > 0) {
              pitchOffsetDegree_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 109: {
            if (!((mutable_bitField0_ & 0x00000800) != 0)) {
              rollDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000800;
            }
            rollDegree_.addFloat(input.readFloat());
            break;
          }
          case 106: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000800) != 0) && input.getBytesUntilLimit() > 0) {
              rollDegree_ = newFloatList();
              mutable_bitField0_ |= 0x00000800;
            }
            while (input.getBytesUntilLimit() > 0) {
              rollDegree_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 117: {
            if (!((mutable_bitField0_ & 0x00001000) != 0)) {
              distanceMeters_ = newFloatList();
              mutable_bitField0_ |= 0x00001000;
            }
            distanceMeters_.addFloat(input.readFloat());
            break;
          }
          case 114: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00001000) != 0) && input.getBytesUntilLimit() > 0) {
              distanceMeters_ = newFloatList();
              mutable_bitField0_ |= 0x00001000;
            }
            while (input.getBytesUntilLimit() > 0) {
              distanceMeters_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 125: {
            if (!((mutable_bitField0_ & 0x00002000) != 0)) {
              heightPercent_ = newFloatList();
              mutable_bitField0_ |= 0x00002000;
            }
            heightPercent_.addFloat(input.readFloat());
            break;
          }
          case 122: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00002000) != 0) && input.getBytesUntilLimit() > 0) {
              heightPercent_ = newFloatList();
              mutable_bitField0_ |= 0x00002000;
            }
            while (input.getBytesUntilLimit() > 0) {
              heightPercent_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 133: {
            if (!((mutable_bitField0_ & 0x00004000) != 0)) {
              vertCtrRatio_ = newFloatList();
              mutable_bitField0_ |= 0x00004000;
            }
            vertCtrRatio_.addFloat(input.readFloat());
            break;
          }
          case 130: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00004000) != 0) && input.getBytesUntilLimit() > 0) {
              vertCtrRatio_ = newFloatList();
              mutable_bitField0_ |= 0x00004000;
            }
            while (input.getBytesUntilLimit() > 0) {
              vertCtrRatio_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        interpolation_ = java.util.Collections.unmodifiableList(interpolation_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        targetType_ = java.util.Collections.unmodifiableList(targetType_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        easeInSpeed_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        easeOutSpeed_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        durationSeconds_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        waitSeconds_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000040) != 0)) {
        transitionSeconds_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000080) != 0)) {
        angleDegree_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000100) != 0)) {
        angleOffsetDegree_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000200) != 0)) {
        pitchDegree_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000400) != 0)) {
        pitchOffsetDegree_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000800) != 0)) {
        rollDegree_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00001000) != 0)) {
        distanceMeters_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00002000) != 0)) {
        heightPercent_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00004000) != 0)) {
        vertCtrRatio_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return POGOProtos.Settings.Master.CameraSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CameraSettings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return POGOProtos.Settings.Master.CameraSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CameraSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            POGOProtos.Settings.Master.CameraSettings.class, POGOProtos.Settings.Master.CameraSettings.Builder.class);
  }

  public static final int NEXT_CAMERA_FIELD_NUMBER = 1;
  private volatile java.lang.Object nextCamera_;
  /**
   * <code>string next_camera = 1;</code>
   * @return The nextCamera.
   */
  public java.lang.String getNextCamera() {
    java.lang.Object ref = nextCamera_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      nextCamera_ = s;
      return s;
    }
  }
  /**
   * <code>string next_camera = 1;</code>
   * @return The bytes for nextCamera.
   */
  public com.google.protobuf.ByteString
      getNextCameraBytes() {
    java.lang.Object ref = nextCamera_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      nextCamera_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int INTERPOLATION_FIELD_NUMBER = 2;
  private java.util.List<java.lang.Integer> interpolation_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, POGOProtos.Enums.CameraInterpolation> interpolation_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, POGOProtos.Enums.CameraInterpolation>() {
            public POGOProtos.Enums.CameraInterpolation convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              POGOProtos.Enums.CameraInterpolation result = POGOProtos.Enums.CameraInterpolation.valueOf(from);
              return result == null ? POGOProtos.Enums.CameraInterpolation.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @return A list containing the interpolation.
   */
  public java.util.List<POGOProtos.Enums.CameraInterpolation> getInterpolationList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, POGOProtos.Enums.CameraInterpolation>(interpolation_, interpolation_converter_);
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @return The count of interpolation.
   */
  public int getInterpolationCount() {
    return interpolation_.size();
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @param index The index of the element to return.
   * @return The interpolation at the given index.
   */
  public POGOProtos.Enums.CameraInterpolation getInterpolation(int index) {
    return interpolation_converter_.convert(interpolation_.get(index));
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @return A list containing the enum numeric values on the wire for interpolation.
   */
  public java.util.List<java.lang.Integer>
  getInterpolationValueList() {
    return interpolation_;
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of interpolation at the given index.
   */
  public int getInterpolationValue(int index) {
    return interpolation_.get(index);
  }
  private int interpolationMemoizedSerializedSize;

  public static final int TARGET_TYPE_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Integer> targetType_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, POGOProtos.Enums.CameraTarget> targetType_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, POGOProtos.Enums.CameraTarget>() {
            public POGOProtos.Enums.CameraTarget convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              POGOProtos.Enums.CameraTarget result = POGOProtos.Enums.CameraTarget.valueOf(from);
              return result == null ? POGOProtos.Enums.CameraTarget.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @return A list containing the targetType.
   */
  public java.util.List<POGOProtos.Enums.CameraTarget> getTargetTypeList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, POGOProtos.Enums.CameraTarget>(targetType_, targetType_converter_);
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @return The count of targetType.
   */
  public int getTargetTypeCount() {
    return targetType_.size();
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @param index The index of the element to return.
   * @return The targetType at the given index.
   */
  public POGOProtos.Enums.CameraTarget getTargetType(int index) {
    return targetType_converter_.convert(targetType_.get(index));
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @return A list containing the enum numeric values on the wire for targetType.
   */
  public java.util.List<java.lang.Integer>
  getTargetTypeValueList() {
    return targetType_;
  }
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of targetType at the given index.
   */
  public int getTargetTypeValue(int index) {
    return targetType_.get(index);
  }
  private int targetTypeMemoizedSerializedSize;

  public static final int EASE_IN_SPEED_FIELD_NUMBER = 4;
  private com.google.protobuf.Internal.FloatList easeInSpeed_;
  /**
   * <code>repeated float ease_in_speed = 4;</code>
   * @return A list containing the easeInSpeed.
   */
  public java.util.List<java.lang.Float>
      getEaseInSpeedList() {
    return easeInSpeed_;
  }
  /**
   * <code>repeated float ease_in_speed = 4;</code>
   * @return The count of easeInSpeed.
   */
  public int getEaseInSpeedCount() {
    return easeInSpeed_.size();
  }
  /**
   * <code>repeated float ease_in_speed = 4;</code>
   * @param index The index of the element to return.
   * @return The easeInSpeed at the given index.
   */
  public float getEaseInSpeed(int index) {
    return easeInSpeed_.getFloat(index);
  }
  private int easeInSpeedMemoizedSerializedSize = -1;

  public static final int EASE_OUT_SPEED_FIELD_NUMBER = 5;
  private com.google.protobuf.Internal.FloatList easeOutSpeed_;
  /**
   * <code>repeated float ease_out_speed = 5;</code>
   * @return A list containing the easeOutSpeed.
   */
  public java.util.List<java.lang.Float>
      getEaseOutSpeedList() {
    return easeOutSpeed_;
  }
  /**
   * <code>repeated float ease_out_speed = 5;</code>
   * @return The count of easeOutSpeed.
   */
  public int getEaseOutSpeedCount() {
    return easeOutSpeed_.size();
  }
  /**
   * <code>repeated float ease_out_speed = 5;</code>
   * @param index The index of the element to return.
   * @return The easeOutSpeed at the given index.
   */
  public float getEaseOutSpeed(int index) {
    return easeOutSpeed_.getFloat(index);
  }
  private int easeOutSpeedMemoizedSerializedSize = -1;

  public static final int DURATION_SECONDS_FIELD_NUMBER = 6;
  private com.google.protobuf.Internal.FloatList durationSeconds_;
  /**
   * <code>repeated float duration_seconds = 6;</code>
   * @return A list containing the durationSeconds.
   */
  public java.util.List<java.lang.Float>
      getDurationSecondsList() {
    return durationSeconds_;
  }
  /**
   * <code>repeated float duration_seconds = 6;</code>
   * @return The count of durationSeconds.
   */
  public int getDurationSecondsCount() {
    return durationSeconds_.size();
  }
  /**
   * <code>repeated float duration_seconds = 6;</code>
   * @param index The index of the element to return.
   * @return The durationSeconds at the given index.
   */
  public float getDurationSeconds(int index) {
    return durationSeconds_.getFloat(index);
  }
  private int durationSecondsMemoizedSerializedSize = -1;

  public static final int WAIT_SECONDS_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.FloatList waitSeconds_;
  /**
   * <code>repeated float wait_seconds = 7;</code>
   * @return A list containing the waitSeconds.
   */
  public java.util.List<java.lang.Float>
      getWaitSecondsList() {
    return waitSeconds_;
  }
  /**
   * <code>repeated float wait_seconds = 7;</code>
   * @return The count of waitSeconds.
   */
  public int getWaitSecondsCount() {
    return waitSeconds_.size();
  }
  /**
   * <code>repeated float wait_seconds = 7;</code>
   * @param index The index of the element to return.
   * @return The waitSeconds at the given index.
   */
  public float getWaitSeconds(int index) {
    return waitSeconds_.getFloat(index);
  }
  private int waitSecondsMemoizedSerializedSize = -1;

  public static final int TRANSITION_SECONDS_FIELD_NUMBER = 8;
  private com.google.protobuf.Internal.FloatList transitionSeconds_;
  /**
   * <code>repeated float transition_seconds = 8;</code>
   * @return A list containing the transitionSeconds.
   */
  public java.util.List<java.lang.Float>
      getTransitionSecondsList() {
    return transitionSeconds_;
  }
  /**
   * <code>repeated float transition_seconds = 8;</code>
   * @return The count of transitionSeconds.
   */
  public int getTransitionSecondsCount() {
    return transitionSeconds_.size();
  }
  /**
   * <code>repeated float transition_seconds = 8;</code>
   * @param index The index of the element to return.
   * @return The transitionSeconds at the given index.
   */
  public float getTransitionSeconds(int index) {
    return transitionSeconds_.getFloat(index);
  }
  private int transitionSecondsMemoizedSerializedSize = -1;

  public static final int ANGLE_DEGREE_FIELD_NUMBER = 9;
  private com.google.protobuf.Internal.FloatList angleDegree_;
  /**
   * <code>repeated float angle_degree = 9;</code>
   * @return A list containing the angleDegree.
   */
  public java.util.List<java.lang.Float>
      getAngleDegreeList() {
    return angleDegree_;
  }
  /**
   * <code>repeated float angle_degree = 9;</code>
   * @return The count of angleDegree.
   */
  public int getAngleDegreeCount() {
    return angleDegree_.size();
  }
  /**
   * <code>repeated float angle_degree = 9;</code>
   * @param index The index of the element to return.
   * @return The angleDegree at the given index.
   */
  public float getAngleDegree(int index) {
    return angleDegree_.getFloat(index);
  }
  private int angleDegreeMemoizedSerializedSize = -1;

  public static final int ANGLE_OFFSET_DEGREE_FIELD_NUMBER = 10;
  private com.google.protobuf.Internal.FloatList angleOffsetDegree_;
  /**
   * <code>repeated float angle_offset_degree = 10;</code>
   * @return A list containing the angleOffsetDegree.
   */
  public java.util.List<java.lang.Float>
      getAngleOffsetDegreeList() {
    return angleOffsetDegree_;
  }
  /**
   * <code>repeated float angle_offset_degree = 10;</code>
   * @return The count of angleOffsetDegree.
   */
  public int getAngleOffsetDegreeCount() {
    return angleOffsetDegree_.size();
  }
  /**
   * <code>repeated float angle_offset_degree = 10;</code>
   * @param index The index of the element to return.
   * @return The angleOffsetDegree at the given index.
   */
  public float getAngleOffsetDegree(int index) {
    return angleOffsetDegree_.getFloat(index);
  }
  private int angleOffsetDegreeMemoizedSerializedSize = -1;

  public static final int PITCH_DEGREE_FIELD_NUMBER = 11;
  private com.google.protobuf.Internal.FloatList pitchDegree_;
  /**
   * <code>repeated float pitch_degree = 11;</code>
   * @return A list containing the pitchDegree.
   */
  public java.util.List<java.lang.Float>
      getPitchDegreeList() {
    return pitchDegree_;
  }
  /**
   * <code>repeated float pitch_degree = 11;</code>
   * @return The count of pitchDegree.
   */
  public int getPitchDegreeCount() {
    return pitchDegree_.size();
  }
  /**
   * <code>repeated float pitch_degree = 11;</code>
   * @param index The index of the element to return.
   * @return The pitchDegree at the given index.
   */
  public float getPitchDegree(int index) {
    return pitchDegree_.getFloat(index);
  }
  private int pitchDegreeMemoizedSerializedSize = -1;

  public static final int PITCH_OFFSET_DEGREE_FIELD_NUMBER = 12;
  private com.google.protobuf.Internal.FloatList pitchOffsetDegree_;
  /**
   * <code>repeated float pitch_offset_degree = 12;</code>
   * @return A list containing the pitchOffsetDegree.
   */
  public java.util.List<java.lang.Float>
      getPitchOffsetDegreeList() {
    return pitchOffsetDegree_;
  }
  /**
   * <code>repeated float pitch_offset_degree = 12;</code>
   * @return The count of pitchOffsetDegree.
   */
  public int getPitchOffsetDegreeCount() {
    return pitchOffsetDegree_.size();
  }
  /**
   * <code>repeated float pitch_offset_degree = 12;</code>
   * @param index The index of the element to return.
   * @return The pitchOffsetDegree at the given index.
   */
  public float getPitchOffsetDegree(int index) {
    return pitchOffsetDegree_.getFloat(index);
  }
  private int pitchOffsetDegreeMemoizedSerializedSize = -1;

  public static final int ROLL_DEGREE_FIELD_NUMBER = 13;
  private com.google.protobuf.Internal.FloatList rollDegree_;
  /**
   * <code>repeated float roll_degree = 13;</code>
   * @return A list containing the rollDegree.
   */
  public java.util.List<java.lang.Float>
      getRollDegreeList() {
    return rollDegree_;
  }
  /**
   * <code>repeated float roll_degree = 13;</code>
   * @return The count of rollDegree.
   */
  public int getRollDegreeCount() {
    return rollDegree_.size();
  }
  /**
   * <code>repeated float roll_degree = 13;</code>
   * @param index The index of the element to return.
   * @return The rollDegree at the given index.
   */
  public float getRollDegree(int index) {
    return rollDegree_.getFloat(index);
  }
  private int rollDegreeMemoizedSerializedSize = -1;

  public static final int DISTANCE_METERS_FIELD_NUMBER = 14;
  private com.google.protobuf.Internal.FloatList distanceMeters_;
  /**
   * <code>repeated float distance_meters = 14;</code>
   * @return A list containing the distanceMeters.
   */
  public java.util.List<java.lang.Float>
      getDistanceMetersList() {
    return distanceMeters_;
  }
  /**
   * <code>repeated float distance_meters = 14;</code>
   * @return The count of distanceMeters.
   */
  public int getDistanceMetersCount() {
    return distanceMeters_.size();
  }
  /**
   * <code>repeated float distance_meters = 14;</code>
   * @param index The index of the element to return.
   * @return The distanceMeters at the given index.
   */
  public float getDistanceMeters(int index) {
    return distanceMeters_.getFloat(index);
  }
  private int distanceMetersMemoizedSerializedSize = -1;

  public static final int HEIGHT_PERCENT_FIELD_NUMBER = 15;
  private com.google.protobuf.Internal.FloatList heightPercent_;
  /**
   * <code>repeated float height_percent = 15;</code>
   * @return A list containing the heightPercent.
   */
  public java.util.List<java.lang.Float>
      getHeightPercentList() {
    return heightPercent_;
  }
  /**
   * <code>repeated float height_percent = 15;</code>
   * @return The count of heightPercent.
   */
  public int getHeightPercentCount() {
    return heightPercent_.size();
  }
  /**
   * <code>repeated float height_percent = 15;</code>
   * @param index The index of the element to return.
   * @return The heightPercent at the given index.
   */
  public float getHeightPercent(int index) {
    return heightPercent_.getFloat(index);
  }
  private int heightPercentMemoizedSerializedSize = -1;

  public static final int VERT_CTR_RATIO_FIELD_NUMBER = 16;
  private com.google.protobuf.Internal.FloatList vertCtrRatio_;
  /**
   * <code>repeated float vert_ctr_ratio = 16;</code>
   * @return A list containing the vertCtrRatio.
   */
  public java.util.List<java.lang.Float>
      getVertCtrRatioList() {
    return vertCtrRatio_;
  }
  /**
   * <code>repeated float vert_ctr_ratio = 16;</code>
   * @return The count of vertCtrRatio.
   */
  public int getVertCtrRatioCount() {
    return vertCtrRatio_.size();
  }
  /**
   * <code>repeated float vert_ctr_ratio = 16;</code>
   * @param index The index of the element to return.
   * @return The vertCtrRatio at the given index.
   */
  public float getVertCtrRatio(int index) {
    return vertCtrRatio_.getFloat(index);
  }
  private int vertCtrRatioMemoizedSerializedSize = -1;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!getNextCameraBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, nextCamera_);
    }
    if (getInterpolationList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(interpolationMemoizedSerializedSize);
    }
    for (int i = 0; i < interpolation_.size(); i++) {
      output.writeEnumNoTag(interpolation_.get(i));
    }
    if (getTargetTypeList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(targetTypeMemoizedSerializedSize);
    }
    for (int i = 0; i < targetType_.size(); i++) {
      output.writeEnumNoTag(targetType_.get(i));
    }
    if (getEaseInSpeedList().size() > 0) {
      output.writeUInt32NoTag(34);
      output.writeUInt32NoTag(easeInSpeedMemoizedSerializedSize);
    }
    for (int i = 0; i < easeInSpeed_.size(); i++) {
      output.writeFloatNoTag(easeInSpeed_.getFloat(i));
    }
    if (getEaseOutSpeedList().size() > 0) {
      output.writeUInt32NoTag(42);
      output.writeUInt32NoTag(easeOutSpeedMemoizedSerializedSize);
    }
    for (int i = 0; i < easeOutSpeed_.size(); i++) {
      output.writeFloatNoTag(easeOutSpeed_.getFloat(i));
    }
    if (getDurationSecondsList().size() > 0) {
      output.writeUInt32NoTag(50);
      output.writeUInt32NoTag(durationSecondsMemoizedSerializedSize);
    }
    for (int i = 0; i < durationSeconds_.size(); i++) {
      output.writeFloatNoTag(durationSeconds_.getFloat(i));
    }
    if (getWaitSecondsList().size() > 0) {
      output.writeUInt32NoTag(58);
      output.writeUInt32NoTag(waitSecondsMemoizedSerializedSize);
    }
    for (int i = 0; i < waitSeconds_.size(); i++) {
      output.writeFloatNoTag(waitSeconds_.getFloat(i));
    }
    if (getTransitionSecondsList().size() > 0) {
      output.writeUInt32NoTag(66);
      output.writeUInt32NoTag(transitionSecondsMemoizedSerializedSize);
    }
    for (int i = 0; i < transitionSeconds_.size(); i++) {
      output.writeFloatNoTag(transitionSeconds_.getFloat(i));
    }
    if (getAngleDegreeList().size() > 0) {
      output.writeUInt32NoTag(74);
      output.writeUInt32NoTag(angleDegreeMemoizedSerializedSize);
    }
    for (int i = 0; i < angleDegree_.size(); i++) {
      output.writeFloatNoTag(angleDegree_.getFloat(i));
    }
    if (getAngleOffsetDegreeList().size() > 0) {
      output.writeUInt32NoTag(82);
      output.writeUInt32NoTag(angleOffsetDegreeMemoizedSerializedSize);
    }
    for (int i = 0; i < angleOffsetDegree_.size(); i++) {
      output.writeFloatNoTag(angleOffsetDegree_.getFloat(i));
    }
    if (getPitchDegreeList().size() > 0) {
      output.writeUInt32NoTag(90);
      output.writeUInt32NoTag(pitchDegreeMemoizedSerializedSize);
    }
    for (int i = 0; i < pitchDegree_.size(); i++) {
      output.writeFloatNoTag(pitchDegree_.getFloat(i));
    }
    if (getPitchOffsetDegreeList().size() > 0) {
      output.writeUInt32NoTag(98);
      output.writeUInt32NoTag(pitchOffsetDegreeMemoizedSerializedSize);
    }
    for (int i = 0; i < pitchOffsetDegree_.size(); i++) {
      output.writeFloatNoTag(pitchOffsetDegree_.getFloat(i));
    }
    if (getRollDegreeList().size() > 0) {
      output.writeUInt32NoTag(106);
      output.writeUInt32NoTag(rollDegreeMemoizedSerializedSize);
    }
    for (int i = 0; i < rollDegree_.size(); i++) {
      output.writeFloatNoTag(rollDegree_.getFloat(i));
    }
    if (getDistanceMetersList().size() > 0) {
      output.writeUInt32NoTag(114);
      output.writeUInt32NoTag(distanceMetersMemoizedSerializedSize);
    }
    for (int i = 0; i < distanceMeters_.size(); i++) {
      output.writeFloatNoTag(distanceMeters_.getFloat(i));
    }
    if (getHeightPercentList().size() > 0) {
      output.writeUInt32NoTag(122);
      output.writeUInt32NoTag(heightPercentMemoizedSerializedSize);
    }
    for (int i = 0; i < heightPercent_.size(); i++) {
      output.writeFloatNoTag(heightPercent_.getFloat(i));
    }
    if (getVertCtrRatioList().size() > 0) {
      output.writeUInt32NoTag(130);
      output.writeUInt32NoTag(vertCtrRatioMemoizedSerializedSize);
    }
    for (int i = 0; i < vertCtrRatio_.size(); i++) {
      output.writeFloatNoTag(vertCtrRatio_.getFloat(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNextCameraBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, nextCamera_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < interpolation_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(interpolation_.get(i));
      }
      size += dataSize;
      if (!getInterpolationList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }interpolationMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < targetType_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(targetType_.get(i));
      }
      size += dataSize;
      if (!getTargetTypeList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }targetTypeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getEaseInSpeedList().size();
      size += dataSize;
      if (!getEaseInSpeedList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      easeInSpeedMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getEaseOutSpeedList().size();
      size += dataSize;
      if (!getEaseOutSpeedList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      easeOutSpeedMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getDurationSecondsList().size();
      size += dataSize;
      if (!getDurationSecondsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      durationSecondsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getWaitSecondsList().size();
      size += dataSize;
      if (!getWaitSecondsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      waitSecondsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getTransitionSecondsList().size();
      size += dataSize;
      if (!getTransitionSecondsList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      transitionSecondsMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getAngleDegreeList().size();
      size += dataSize;
      if (!getAngleDegreeList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      angleDegreeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getAngleOffsetDegreeList().size();
      size += dataSize;
      if (!getAngleOffsetDegreeList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      angleOffsetDegreeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getPitchDegreeList().size();
      size += dataSize;
      if (!getPitchDegreeList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      pitchDegreeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getPitchOffsetDegreeList().size();
      size += dataSize;
      if (!getPitchOffsetDegreeList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      pitchOffsetDegreeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getRollDegreeList().size();
      size += dataSize;
      if (!getRollDegreeList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      rollDegreeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getDistanceMetersList().size();
      size += dataSize;
      if (!getDistanceMetersList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      distanceMetersMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getHeightPercentList().size();
      size += dataSize;
      if (!getHeightPercentList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      heightPercentMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getVertCtrRatioList().size();
      size += dataSize;
      if (!getVertCtrRatioList().isEmpty()) {
        size += 2;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      vertCtrRatioMemoizedSerializedSize = dataSize;
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof POGOProtos.Settings.Master.CameraSettings)) {
      return super.equals(obj);
    }
    POGOProtos.Settings.Master.CameraSettings other = (POGOProtos.Settings.Master.CameraSettings) obj;

    if (!getNextCamera()
        .equals(other.getNextCamera())) return false;
    if (!interpolation_.equals(other.interpolation_)) return false;
    if (!targetType_.equals(other.targetType_)) return false;
    if (!getEaseInSpeedList()
        .equals(other.getEaseInSpeedList())) return false;
    if (!getEaseOutSpeedList()
        .equals(other.getEaseOutSpeedList())) return false;
    if (!getDurationSecondsList()
        .equals(other.getDurationSecondsList())) return false;
    if (!getWaitSecondsList()
        .equals(other.getWaitSecondsList())) return false;
    if (!getTransitionSecondsList()
        .equals(other.getTransitionSecondsList())) return false;
    if (!getAngleDegreeList()
        .equals(other.getAngleDegreeList())) return false;
    if (!getAngleOffsetDegreeList()
        .equals(other.getAngleOffsetDegreeList())) return false;
    if (!getPitchDegreeList()
        .equals(other.getPitchDegreeList())) return false;
    if (!getPitchOffsetDegreeList()
        .equals(other.getPitchOffsetDegreeList())) return false;
    if (!getRollDegreeList()
        .equals(other.getRollDegreeList())) return false;
    if (!getDistanceMetersList()
        .equals(other.getDistanceMetersList())) return false;
    if (!getHeightPercentList()
        .equals(other.getHeightPercentList())) return false;
    if (!getVertCtrRatioList()
        .equals(other.getVertCtrRatioList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NEXT_CAMERA_FIELD_NUMBER;
    hash = (53 * hash) + getNextCamera().hashCode();
    if (getInterpolationCount() > 0) {
      hash = (37 * hash) + INTERPOLATION_FIELD_NUMBER;
      hash = (53 * hash) + interpolation_.hashCode();
    }
    if (getTargetTypeCount() > 0) {
      hash = (37 * hash) + TARGET_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + targetType_.hashCode();
    }
    if (getEaseInSpeedCount() > 0) {
      hash = (37 * hash) + EASE_IN_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getEaseInSpeedList().hashCode();
    }
    if (getEaseOutSpeedCount() > 0) {
      hash = (37 * hash) + EASE_OUT_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getEaseOutSpeedList().hashCode();
    }
    if (getDurationSecondsCount() > 0) {
      hash = (37 * hash) + DURATION_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + getDurationSecondsList().hashCode();
    }
    if (getWaitSecondsCount() > 0) {
      hash = (37 * hash) + WAIT_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + getWaitSecondsList().hashCode();
    }
    if (getTransitionSecondsCount() > 0) {
      hash = (37 * hash) + TRANSITION_SECONDS_FIELD_NUMBER;
      hash = (53 * hash) + getTransitionSecondsList().hashCode();
    }
    if (getAngleDegreeCount() > 0) {
      hash = (37 * hash) + ANGLE_DEGREE_FIELD_NUMBER;
      hash = (53 * hash) + getAngleDegreeList().hashCode();
    }
    if (getAngleOffsetDegreeCount() > 0) {
      hash = (37 * hash) + ANGLE_OFFSET_DEGREE_FIELD_NUMBER;
      hash = (53 * hash) + getAngleOffsetDegreeList().hashCode();
    }
    if (getPitchDegreeCount() > 0) {
      hash = (37 * hash) + PITCH_DEGREE_FIELD_NUMBER;
      hash = (53 * hash) + getPitchDegreeList().hashCode();
    }
    if (getPitchOffsetDegreeCount() > 0) {
      hash = (37 * hash) + PITCH_OFFSET_DEGREE_FIELD_NUMBER;
      hash = (53 * hash) + getPitchOffsetDegreeList().hashCode();
    }
    if (getRollDegreeCount() > 0) {
      hash = (37 * hash) + ROLL_DEGREE_FIELD_NUMBER;
      hash = (53 * hash) + getRollDegreeList().hashCode();
    }
    if (getDistanceMetersCount() > 0) {
      hash = (37 * hash) + DISTANCE_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getDistanceMetersList().hashCode();
    }
    if (getHeightPercentCount() > 0) {
      hash = (37 * hash) + HEIGHT_PERCENT_FIELD_NUMBER;
      hash = (53 * hash) + getHeightPercentList().hashCode();
    }
    if (getVertCtrRatioCount() > 0) {
      hash = (37 * hash) + VERT_CTR_RATIO_FIELD_NUMBER;
      hash = (53 * hash) + getVertCtrRatioList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.CameraSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(POGOProtos.Settings.Master.CameraSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code POGOProtos.Settings.Master.CameraSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:POGOProtos.Settings.Master.CameraSettings)
      POGOProtos.Settings.Master.CameraSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Settings.Master.CameraSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CameraSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Settings.Master.CameraSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CameraSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Settings.Master.CameraSettings.class, POGOProtos.Settings.Master.CameraSettings.Builder.class);
    }

    // Construct using POGOProtos.Settings.Master.CameraSettings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      nextCamera_ = "";

      interpolation_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      targetType_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      easeInSpeed_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000004);
      easeOutSpeed_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000008);
      durationSeconds_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000010);
      waitSeconds_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000020);
      transitionSeconds_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000040);
      angleDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000080);
      angleOffsetDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000100);
      pitchDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000200);
      pitchOffsetDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000400);
      rollDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000800);
      distanceMeters_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00001000);
      heightPercent_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00002000);
      vertCtrRatio_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00004000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return POGOProtos.Settings.Master.CameraSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CameraSettings_descriptor;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CameraSettings getDefaultInstanceForType() {
      return POGOProtos.Settings.Master.CameraSettings.getDefaultInstance();
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CameraSettings build() {
      POGOProtos.Settings.Master.CameraSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CameraSettings buildPartial() {
      POGOProtos.Settings.Master.CameraSettings result = new POGOProtos.Settings.Master.CameraSettings(this);
      int from_bitField0_ = bitField0_;
      result.nextCamera_ = nextCamera_;
      if (((bitField0_ & 0x00000001) != 0)) {
        interpolation_ = java.util.Collections.unmodifiableList(interpolation_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.interpolation_ = interpolation_;
      if (((bitField0_ & 0x00000002) != 0)) {
        targetType_ = java.util.Collections.unmodifiableList(targetType_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.targetType_ = targetType_;
      if (((bitField0_ & 0x00000004) != 0)) {
        easeInSpeed_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.easeInSpeed_ = easeInSpeed_;
      if (((bitField0_ & 0x00000008) != 0)) {
        easeOutSpeed_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.easeOutSpeed_ = easeOutSpeed_;
      if (((bitField0_ & 0x00000010) != 0)) {
        durationSeconds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000010);
      }
      result.durationSeconds_ = durationSeconds_;
      if (((bitField0_ & 0x00000020) != 0)) {
        waitSeconds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.waitSeconds_ = waitSeconds_;
      if (((bitField0_ & 0x00000040) != 0)) {
        transitionSeconds_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.transitionSeconds_ = transitionSeconds_;
      if (((bitField0_ & 0x00000080) != 0)) {
        angleDegree_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.angleDegree_ = angleDegree_;
      if (((bitField0_ & 0x00000100) != 0)) {
        angleOffsetDegree_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000100);
      }
      result.angleOffsetDegree_ = angleOffsetDegree_;
      if (((bitField0_ & 0x00000200) != 0)) {
        pitchDegree_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000200);
      }
      result.pitchDegree_ = pitchDegree_;
      if (((bitField0_ & 0x00000400) != 0)) {
        pitchOffsetDegree_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000400);
      }
      result.pitchOffsetDegree_ = pitchOffsetDegree_;
      if (((bitField0_ & 0x00000800) != 0)) {
        rollDegree_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000800);
      }
      result.rollDegree_ = rollDegree_;
      if (((bitField0_ & 0x00001000) != 0)) {
        distanceMeters_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00001000);
      }
      result.distanceMeters_ = distanceMeters_;
      if (((bitField0_ & 0x00002000) != 0)) {
        heightPercent_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00002000);
      }
      result.heightPercent_ = heightPercent_;
      if (((bitField0_ & 0x00004000) != 0)) {
        vertCtrRatio_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00004000);
      }
      result.vertCtrRatio_ = vertCtrRatio_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof POGOProtos.Settings.Master.CameraSettings) {
        return mergeFrom((POGOProtos.Settings.Master.CameraSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(POGOProtos.Settings.Master.CameraSettings other) {
      if (other == POGOProtos.Settings.Master.CameraSettings.getDefaultInstance()) return this;
      if (!other.getNextCamera().isEmpty()) {
        nextCamera_ = other.nextCamera_;
        onChanged();
      }
      if (!other.interpolation_.isEmpty()) {
        if (interpolation_.isEmpty()) {
          interpolation_ = other.interpolation_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureInterpolationIsMutable();
          interpolation_.addAll(other.interpolation_);
        }
        onChanged();
      }
      if (!other.targetType_.isEmpty()) {
        if (targetType_.isEmpty()) {
          targetType_ = other.targetType_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureTargetTypeIsMutable();
          targetType_.addAll(other.targetType_);
        }
        onChanged();
      }
      if (!other.easeInSpeed_.isEmpty()) {
        if (easeInSpeed_.isEmpty()) {
          easeInSpeed_ = other.easeInSpeed_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureEaseInSpeedIsMutable();
          easeInSpeed_.addAll(other.easeInSpeed_);
        }
        onChanged();
      }
      if (!other.easeOutSpeed_.isEmpty()) {
        if (easeOutSpeed_.isEmpty()) {
          easeOutSpeed_ = other.easeOutSpeed_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureEaseOutSpeedIsMutable();
          easeOutSpeed_.addAll(other.easeOutSpeed_);
        }
        onChanged();
      }
      if (!other.durationSeconds_.isEmpty()) {
        if (durationSeconds_.isEmpty()) {
          durationSeconds_ = other.durationSeconds_;
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          ensureDurationSecondsIsMutable();
          durationSeconds_.addAll(other.durationSeconds_);
        }
        onChanged();
      }
      if (!other.waitSeconds_.isEmpty()) {
        if (waitSeconds_.isEmpty()) {
          waitSeconds_ = other.waitSeconds_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureWaitSecondsIsMutable();
          waitSeconds_.addAll(other.waitSeconds_);
        }
        onChanged();
      }
      if (!other.transitionSeconds_.isEmpty()) {
        if (transitionSeconds_.isEmpty()) {
          transitionSeconds_ = other.transitionSeconds_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureTransitionSecondsIsMutable();
          transitionSeconds_.addAll(other.transitionSeconds_);
        }
        onChanged();
      }
      if (!other.angleDegree_.isEmpty()) {
        if (angleDegree_.isEmpty()) {
          angleDegree_ = other.angleDegree_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensureAngleDegreeIsMutable();
          angleDegree_.addAll(other.angleDegree_);
        }
        onChanged();
      }
      if (!other.angleOffsetDegree_.isEmpty()) {
        if (angleOffsetDegree_.isEmpty()) {
          angleOffsetDegree_ = other.angleOffsetDegree_;
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          ensureAngleOffsetDegreeIsMutable();
          angleOffsetDegree_.addAll(other.angleOffsetDegree_);
        }
        onChanged();
      }
      if (!other.pitchDegree_.isEmpty()) {
        if (pitchDegree_.isEmpty()) {
          pitchDegree_ = other.pitchDegree_;
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          ensurePitchDegreeIsMutable();
          pitchDegree_.addAll(other.pitchDegree_);
        }
        onChanged();
      }
      if (!other.pitchOffsetDegree_.isEmpty()) {
        if (pitchOffsetDegree_.isEmpty()) {
          pitchOffsetDegree_ = other.pitchOffsetDegree_;
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          ensurePitchOffsetDegreeIsMutable();
          pitchOffsetDegree_.addAll(other.pitchOffsetDegree_);
        }
        onChanged();
      }
      if (!other.rollDegree_.isEmpty()) {
        if (rollDegree_.isEmpty()) {
          rollDegree_ = other.rollDegree_;
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          ensureRollDegreeIsMutable();
          rollDegree_.addAll(other.rollDegree_);
        }
        onChanged();
      }
      if (!other.distanceMeters_.isEmpty()) {
        if (distanceMeters_.isEmpty()) {
          distanceMeters_ = other.distanceMeters_;
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          ensureDistanceMetersIsMutable();
          distanceMeters_.addAll(other.distanceMeters_);
        }
        onChanged();
      }
      if (!other.heightPercent_.isEmpty()) {
        if (heightPercent_.isEmpty()) {
          heightPercent_ = other.heightPercent_;
          bitField0_ = (bitField0_ & ~0x00002000);
        } else {
          ensureHeightPercentIsMutable();
          heightPercent_.addAll(other.heightPercent_);
        }
        onChanged();
      }
      if (!other.vertCtrRatio_.isEmpty()) {
        if (vertCtrRatio_.isEmpty()) {
          vertCtrRatio_ = other.vertCtrRatio_;
          bitField0_ = (bitField0_ & ~0x00004000);
        } else {
          ensureVertCtrRatioIsMutable();
          vertCtrRatio_.addAll(other.vertCtrRatio_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      POGOProtos.Settings.Master.CameraSettings parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (POGOProtos.Settings.Master.CameraSettings) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object nextCamera_ = "";
    /**
     * <code>string next_camera = 1;</code>
     * @return The nextCamera.
     */
    public java.lang.String getNextCamera() {
      java.lang.Object ref = nextCamera_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        nextCamera_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string next_camera = 1;</code>
     * @return The bytes for nextCamera.
     */
    public com.google.protobuf.ByteString
        getNextCameraBytes() {
      java.lang.Object ref = nextCamera_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextCamera_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string next_camera = 1;</code>
     * @param value The nextCamera to set.
     * @return This builder for chaining.
     */
    public Builder setNextCamera(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      nextCamera_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string next_camera = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearNextCamera() {
      
      nextCamera_ = getDefaultInstance().getNextCamera();
      onChanged();
      return this;
    }
    /**
     * <code>string next_camera = 1;</code>
     * @param value The bytes for nextCamera to set.
     * @return This builder for chaining.
     */
    public Builder setNextCameraBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      nextCamera_ = value;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> interpolation_ =
      java.util.Collections.emptyList();
    private void ensureInterpolationIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        interpolation_ = new java.util.ArrayList<java.lang.Integer>(interpolation_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @return A list containing the interpolation.
     */
    public java.util.List<POGOProtos.Enums.CameraInterpolation> getInterpolationList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, POGOProtos.Enums.CameraInterpolation>(interpolation_, interpolation_converter_);
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @return The count of interpolation.
     */
    public int getInterpolationCount() {
      return interpolation_.size();
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param index The index of the element to return.
     * @return The interpolation at the given index.
     */
    public POGOProtos.Enums.CameraInterpolation getInterpolation(int index) {
      return interpolation_converter_.convert(interpolation_.get(index));
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param index The index to set the value at.
     * @param value The interpolation to set.
     * @return This builder for chaining.
     */
    public Builder setInterpolation(
        int index, POGOProtos.Enums.CameraInterpolation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInterpolationIsMutable();
      interpolation_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param value The interpolation to add.
     * @return This builder for chaining.
     */
    public Builder addInterpolation(POGOProtos.Enums.CameraInterpolation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInterpolationIsMutable();
      interpolation_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param values The interpolation to add.
     * @return This builder for chaining.
     */
    public Builder addAllInterpolation(
        java.lang.Iterable<? extends POGOProtos.Enums.CameraInterpolation> values) {
      ensureInterpolationIsMutable();
      for (POGOProtos.Enums.CameraInterpolation value : values) {
        interpolation_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearInterpolation() {
      interpolation_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @return A list containing the enum numeric values on the wire for interpolation.
     */
    public java.util.List<java.lang.Integer>
    getInterpolationValueList() {
      return java.util.Collections.unmodifiableList(interpolation_);
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of interpolation at the given index.
     */
    public int getInterpolationValue(int index) {
      return interpolation_.get(index);
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of interpolation at the given index.
     * @return This builder for chaining.
     */
    public Builder setInterpolationValue(
        int index, int value) {
      ensureInterpolationIsMutable();
      interpolation_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param value The enum numeric value on the wire for interpolation to add.
     * @return This builder for chaining.
     */
    public Builder addInterpolationValue(int value) {
      ensureInterpolationIsMutable();
      interpolation_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
     * @param values The enum numeric values on the wire for interpolation to add.
     * @return This builder for chaining.
     */
    public Builder addAllInterpolationValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureInterpolationIsMutable();
      for (int value : values) {
        interpolation_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> targetType_ =
      java.util.Collections.emptyList();
    private void ensureTargetTypeIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        targetType_ = new java.util.ArrayList<java.lang.Integer>(targetType_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @return A list containing the targetType.
     */
    public java.util.List<POGOProtos.Enums.CameraTarget> getTargetTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, POGOProtos.Enums.CameraTarget>(targetType_, targetType_converter_);
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @return The count of targetType.
     */
    public int getTargetTypeCount() {
      return targetType_.size();
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param index The index of the element to return.
     * @return The targetType at the given index.
     */
    public POGOProtos.Enums.CameraTarget getTargetType(int index) {
      return targetType_converter_.convert(targetType_.get(index));
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param index The index to set the value at.
     * @param value The targetType to set.
     * @return This builder for chaining.
     */
    public Builder setTargetType(
        int index, POGOProtos.Enums.CameraTarget value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTargetTypeIsMutable();
      targetType_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param value The targetType to add.
     * @return This builder for chaining.
     */
    public Builder addTargetType(POGOProtos.Enums.CameraTarget value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureTargetTypeIsMutable();
      targetType_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param values The targetType to add.
     * @return This builder for chaining.
     */
    public Builder addAllTargetType(
        java.lang.Iterable<? extends POGOProtos.Enums.CameraTarget> values) {
      ensureTargetTypeIsMutable();
      for (POGOProtos.Enums.CameraTarget value : values) {
        targetType_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearTargetType() {
      targetType_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @return A list containing the enum numeric values on the wire for targetType.
     */
    public java.util.List<java.lang.Integer>
    getTargetTypeValueList() {
      return java.util.Collections.unmodifiableList(targetType_);
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of targetType at the given index.
     */
    public int getTargetTypeValue(int index) {
      return targetType_.get(index);
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of targetType at the given index.
     * @return This builder for chaining.
     */
    public Builder setTargetTypeValue(
        int index, int value) {
      ensureTargetTypeIsMutable();
      targetType_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param value The enum numeric value on the wire for targetType to add.
     * @return This builder for chaining.
     */
    public Builder addTargetTypeValue(int value) {
      ensureTargetTypeIsMutable();
      targetType_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
     * @param values The enum numeric values on the wire for targetType to add.
     * @return This builder for chaining.
     */
    public Builder addAllTargetTypeValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureTargetTypeIsMutable();
      for (int value : values) {
        targetType_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList easeInSpeed_ = emptyFloatList();
    private void ensureEaseInSpeedIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        easeInSpeed_ = mutableCopy(easeInSpeed_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated float ease_in_speed = 4;</code>
     * @return A list containing the easeInSpeed.
     */
    public java.util.List<java.lang.Float>
        getEaseInSpeedList() {
      return ((bitField0_ & 0x00000004) != 0) ?
               java.util.Collections.unmodifiableList(easeInSpeed_) : easeInSpeed_;
    }
    /**
     * <code>repeated float ease_in_speed = 4;</code>
     * @return The count of easeInSpeed.
     */
    public int getEaseInSpeedCount() {
      return easeInSpeed_.size();
    }
    /**
     * <code>repeated float ease_in_speed = 4;</code>
     * @param index The index of the element to return.
     * @return The easeInSpeed at the given index.
     */
    public float getEaseInSpeed(int index) {
      return easeInSpeed_.getFloat(index);
    }
    /**
     * <code>repeated float ease_in_speed = 4;</code>
     * @param index The index to set the value at.
     * @param value The easeInSpeed to set.
     * @return This builder for chaining.
     */
    public Builder setEaseInSpeed(
        int index, float value) {
      ensureEaseInSpeedIsMutable();
      easeInSpeed_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float ease_in_speed = 4;</code>
     * @param value The easeInSpeed to add.
     * @return This builder for chaining.
     */
    public Builder addEaseInSpeed(float value) {
      ensureEaseInSpeedIsMutable();
      easeInSpeed_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float ease_in_speed = 4;</code>
     * @param values The easeInSpeed to add.
     * @return This builder for chaining.
     */
    public Builder addAllEaseInSpeed(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureEaseInSpeedIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, easeInSpeed_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float ease_in_speed = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearEaseInSpeed() {
      easeInSpeed_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList easeOutSpeed_ = emptyFloatList();
    private void ensureEaseOutSpeedIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        easeOutSpeed_ = mutableCopy(easeOutSpeed_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <code>repeated float ease_out_speed = 5;</code>
     * @return A list containing the easeOutSpeed.
     */
    public java.util.List<java.lang.Float>
        getEaseOutSpeedList() {
      return ((bitField0_ & 0x00000008) != 0) ?
               java.util.Collections.unmodifiableList(easeOutSpeed_) : easeOutSpeed_;
    }
    /**
     * <code>repeated float ease_out_speed = 5;</code>
     * @return The count of easeOutSpeed.
     */
    public int getEaseOutSpeedCount() {
      return easeOutSpeed_.size();
    }
    /**
     * <code>repeated float ease_out_speed = 5;</code>
     * @param index The index of the element to return.
     * @return The easeOutSpeed at the given index.
     */
    public float getEaseOutSpeed(int index) {
      return easeOutSpeed_.getFloat(index);
    }
    /**
     * <code>repeated float ease_out_speed = 5;</code>
     * @param index The index to set the value at.
     * @param value The easeOutSpeed to set.
     * @return This builder for chaining.
     */
    public Builder setEaseOutSpeed(
        int index, float value) {
      ensureEaseOutSpeedIsMutable();
      easeOutSpeed_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float ease_out_speed = 5;</code>
     * @param value The easeOutSpeed to add.
     * @return This builder for chaining.
     */
    public Builder addEaseOutSpeed(float value) {
      ensureEaseOutSpeedIsMutable();
      easeOutSpeed_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float ease_out_speed = 5;</code>
     * @param values The easeOutSpeed to add.
     * @return This builder for chaining.
     */
    public Builder addAllEaseOutSpeed(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureEaseOutSpeedIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, easeOutSpeed_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float ease_out_speed = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearEaseOutSpeed() {
      easeOutSpeed_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList durationSeconds_ = emptyFloatList();
    private void ensureDurationSecondsIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        durationSeconds_ = mutableCopy(durationSeconds_);
        bitField0_ |= 0x00000010;
       }
    }
    /**
     * <code>repeated float duration_seconds = 6;</code>
     * @return A list containing the durationSeconds.
     */
    public java.util.List<java.lang.Float>
        getDurationSecondsList() {
      return ((bitField0_ & 0x00000010) != 0) ?
               java.util.Collections.unmodifiableList(durationSeconds_) : durationSeconds_;
    }
    /**
     * <code>repeated float duration_seconds = 6;</code>
     * @return The count of durationSeconds.
     */
    public int getDurationSecondsCount() {
      return durationSeconds_.size();
    }
    /**
     * <code>repeated float duration_seconds = 6;</code>
     * @param index The index of the element to return.
     * @return The durationSeconds at the given index.
     */
    public float getDurationSeconds(int index) {
      return durationSeconds_.getFloat(index);
    }
    /**
     * <code>repeated float duration_seconds = 6;</code>
     * @param index The index to set the value at.
     * @param value The durationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setDurationSeconds(
        int index, float value) {
      ensureDurationSecondsIsMutable();
      durationSeconds_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float duration_seconds = 6;</code>
     * @param value The durationSeconds to add.
     * @return This builder for chaining.
     */
    public Builder addDurationSeconds(float value) {
      ensureDurationSecondsIsMutable();
      durationSeconds_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float duration_seconds = 6;</code>
     * @param values The durationSeconds to add.
     * @return This builder for chaining.
     */
    public Builder addAllDurationSeconds(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureDurationSecondsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, durationSeconds_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float duration_seconds = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDurationSeconds() {
      durationSeconds_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList waitSeconds_ = emptyFloatList();
    private void ensureWaitSecondsIsMutable() {
      if (!((bitField0_ & 0x00000020) != 0)) {
        waitSeconds_ = mutableCopy(waitSeconds_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated float wait_seconds = 7;</code>
     * @return A list containing the waitSeconds.
     */
    public java.util.List<java.lang.Float>
        getWaitSecondsList() {
      return ((bitField0_ & 0x00000020) != 0) ?
               java.util.Collections.unmodifiableList(waitSeconds_) : waitSeconds_;
    }
    /**
     * <code>repeated float wait_seconds = 7;</code>
     * @return The count of waitSeconds.
     */
    public int getWaitSecondsCount() {
      return waitSeconds_.size();
    }
    /**
     * <code>repeated float wait_seconds = 7;</code>
     * @param index The index of the element to return.
     * @return The waitSeconds at the given index.
     */
    public float getWaitSeconds(int index) {
      return waitSeconds_.getFloat(index);
    }
    /**
     * <code>repeated float wait_seconds = 7;</code>
     * @param index The index to set the value at.
     * @param value The waitSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setWaitSeconds(
        int index, float value) {
      ensureWaitSecondsIsMutable();
      waitSeconds_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float wait_seconds = 7;</code>
     * @param value The waitSeconds to add.
     * @return This builder for chaining.
     */
    public Builder addWaitSeconds(float value) {
      ensureWaitSecondsIsMutable();
      waitSeconds_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float wait_seconds = 7;</code>
     * @param values The waitSeconds to add.
     * @return This builder for chaining.
     */
    public Builder addAllWaitSeconds(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureWaitSecondsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, waitSeconds_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float wait_seconds = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearWaitSeconds() {
      waitSeconds_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList transitionSeconds_ = emptyFloatList();
    private void ensureTransitionSecondsIsMutable() {
      if (!((bitField0_ & 0x00000040) != 0)) {
        transitionSeconds_ = mutableCopy(transitionSeconds_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <code>repeated float transition_seconds = 8;</code>
     * @return A list containing the transitionSeconds.
     */
    public java.util.List<java.lang.Float>
        getTransitionSecondsList() {
      return ((bitField0_ & 0x00000040) != 0) ?
               java.util.Collections.unmodifiableList(transitionSeconds_) : transitionSeconds_;
    }
    /**
     * <code>repeated float transition_seconds = 8;</code>
     * @return The count of transitionSeconds.
     */
    public int getTransitionSecondsCount() {
      return transitionSeconds_.size();
    }
    /**
     * <code>repeated float transition_seconds = 8;</code>
     * @param index The index of the element to return.
     * @return The transitionSeconds at the given index.
     */
    public float getTransitionSeconds(int index) {
      return transitionSeconds_.getFloat(index);
    }
    /**
     * <code>repeated float transition_seconds = 8;</code>
     * @param index The index to set the value at.
     * @param value The transitionSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setTransitionSeconds(
        int index, float value) {
      ensureTransitionSecondsIsMutable();
      transitionSeconds_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float transition_seconds = 8;</code>
     * @param value The transitionSeconds to add.
     * @return This builder for chaining.
     */
    public Builder addTransitionSeconds(float value) {
      ensureTransitionSecondsIsMutable();
      transitionSeconds_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float transition_seconds = 8;</code>
     * @param values The transitionSeconds to add.
     * @return This builder for chaining.
     */
    public Builder addAllTransitionSeconds(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureTransitionSecondsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, transitionSeconds_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float transition_seconds = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearTransitionSeconds() {
      transitionSeconds_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList angleDegree_ = emptyFloatList();
    private void ensureAngleDegreeIsMutable() {
      if (!((bitField0_ & 0x00000080) != 0)) {
        angleDegree_ = mutableCopy(angleDegree_);
        bitField0_ |= 0x00000080;
       }
    }
    /**
     * <code>repeated float angle_degree = 9;</code>
     * @return A list containing the angleDegree.
     */
    public java.util.List<java.lang.Float>
        getAngleDegreeList() {
      return ((bitField0_ & 0x00000080) != 0) ?
               java.util.Collections.unmodifiableList(angleDegree_) : angleDegree_;
    }
    /**
     * <code>repeated float angle_degree = 9;</code>
     * @return The count of angleDegree.
     */
    public int getAngleDegreeCount() {
      return angleDegree_.size();
    }
    /**
     * <code>repeated float angle_degree = 9;</code>
     * @param index The index of the element to return.
     * @return The angleDegree at the given index.
     */
    public float getAngleDegree(int index) {
      return angleDegree_.getFloat(index);
    }
    /**
     * <code>repeated float angle_degree = 9;</code>
     * @param index The index to set the value at.
     * @param value The angleDegree to set.
     * @return This builder for chaining.
     */
    public Builder setAngleDegree(
        int index, float value) {
      ensureAngleDegreeIsMutable();
      angleDegree_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float angle_degree = 9;</code>
     * @param value The angleDegree to add.
     * @return This builder for chaining.
     */
    public Builder addAngleDegree(float value) {
      ensureAngleDegreeIsMutable();
      angleDegree_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float angle_degree = 9;</code>
     * @param values The angleDegree to add.
     * @return This builder for chaining.
     */
    public Builder addAllAngleDegree(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureAngleDegreeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, angleDegree_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float angle_degree = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearAngleDegree() {
      angleDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList angleOffsetDegree_ = emptyFloatList();
    private void ensureAngleOffsetDegreeIsMutable() {
      if (!((bitField0_ & 0x00000100) != 0)) {
        angleOffsetDegree_ = mutableCopy(angleOffsetDegree_);
        bitField0_ |= 0x00000100;
       }
    }
    /**
     * <code>repeated float angle_offset_degree = 10;</code>
     * @return A list containing the angleOffsetDegree.
     */
    public java.util.List<java.lang.Float>
        getAngleOffsetDegreeList() {
      return ((bitField0_ & 0x00000100) != 0) ?
               java.util.Collections.unmodifiableList(angleOffsetDegree_) : angleOffsetDegree_;
    }
    /**
     * <code>repeated float angle_offset_degree = 10;</code>
     * @return The count of angleOffsetDegree.
     */
    public int getAngleOffsetDegreeCount() {
      return angleOffsetDegree_.size();
    }
    /**
     * <code>repeated float angle_offset_degree = 10;</code>
     * @param index The index of the element to return.
     * @return The angleOffsetDegree at the given index.
     */
    public float getAngleOffsetDegree(int index) {
      return angleOffsetDegree_.getFloat(index);
    }
    /**
     * <code>repeated float angle_offset_degree = 10;</code>
     * @param index The index to set the value at.
     * @param value The angleOffsetDegree to set.
     * @return This builder for chaining.
     */
    public Builder setAngleOffsetDegree(
        int index, float value) {
      ensureAngleOffsetDegreeIsMutable();
      angleOffsetDegree_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float angle_offset_degree = 10;</code>
     * @param value The angleOffsetDegree to add.
     * @return This builder for chaining.
     */
    public Builder addAngleOffsetDegree(float value) {
      ensureAngleOffsetDegreeIsMutable();
      angleOffsetDegree_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float angle_offset_degree = 10;</code>
     * @param values The angleOffsetDegree to add.
     * @return This builder for chaining.
     */
    public Builder addAllAngleOffsetDegree(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureAngleOffsetDegreeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, angleOffsetDegree_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float angle_offset_degree = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearAngleOffsetDegree() {
      angleOffsetDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList pitchDegree_ = emptyFloatList();
    private void ensurePitchDegreeIsMutable() {
      if (!((bitField0_ & 0x00000200) != 0)) {
        pitchDegree_ = mutableCopy(pitchDegree_);
        bitField0_ |= 0x00000200;
       }
    }
    /**
     * <code>repeated float pitch_degree = 11;</code>
     * @return A list containing the pitchDegree.
     */
    public java.util.List<java.lang.Float>
        getPitchDegreeList() {
      return ((bitField0_ & 0x00000200) != 0) ?
               java.util.Collections.unmodifiableList(pitchDegree_) : pitchDegree_;
    }
    /**
     * <code>repeated float pitch_degree = 11;</code>
     * @return The count of pitchDegree.
     */
    public int getPitchDegreeCount() {
      return pitchDegree_.size();
    }
    /**
     * <code>repeated float pitch_degree = 11;</code>
     * @param index The index of the element to return.
     * @return The pitchDegree at the given index.
     */
    public float getPitchDegree(int index) {
      return pitchDegree_.getFloat(index);
    }
    /**
     * <code>repeated float pitch_degree = 11;</code>
     * @param index The index to set the value at.
     * @param value The pitchDegree to set.
     * @return This builder for chaining.
     */
    public Builder setPitchDegree(
        int index, float value) {
      ensurePitchDegreeIsMutable();
      pitchDegree_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float pitch_degree = 11;</code>
     * @param value The pitchDegree to add.
     * @return This builder for chaining.
     */
    public Builder addPitchDegree(float value) {
      ensurePitchDegreeIsMutable();
      pitchDegree_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float pitch_degree = 11;</code>
     * @param values The pitchDegree to add.
     * @return This builder for chaining.
     */
    public Builder addAllPitchDegree(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensurePitchDegreeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pitchDegree_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float pitch_degree = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearPitchDegree() {
      pitchDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList pitchOffsetDegree_ = emptyFloatList();
    private void ensurePitchOffsetDegreeIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        pitchOffsetDegree_ = mutableCopy(pitchOffsetDegree_);
        bitField0_ |= 0x00000400;
       }
    }
    /**
     * <code>repeated float pitch_offset_degree = 12;</code>
     * @return A list containing the pitchOffsetDegree.
     */
    public java.util.List<java.lang.Float>
        getPitchOffsetDegreeList() {
      return ((bitField0_ & 0x00000400) != 0) ?
               java.util.Collections.unmodifiableList(pitchOffsetDegree_) : pitchOffsetDegree_;
    }
    /**
     * <code>repeated float pitch_offset_degree = 12;</code>
     * @return The count of pitchOffsetDegree.
     */
    public int getPitchOffsetDegreeCount() {
      return pitchOffsetDegree_.size();
    }
    /**
     * <code>repeated float pitch_offset_degree = 12;</code>
     * @param index The index of the element to return.
     * @return The pitchOffsetDegree at the given index.
     */
    public float getPitchOffsetDegree(int index) {
      return pitchOffsetDegree_.getFloat(index);
    }
    /**
     * <code>repeated float pitch_offset_degree = 12;</code>
     * @param index The index to set the value at.
     * @param value The pitchOffsetDegree to set.
     * @return This builder for chaining.
     */
    public Builder setPitchOffsetDegree(
        int index, float value) {
      ensurePitchOffsetDegreeIsMutable();
      pitchOffsetDegree_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float pitch_offset_degree = 12;</code>
     * @param value The pitchOffsetDegree to add.
     * @return This builder for chaining.
     */
    public Builder addPitchOffsetDegree(float value) {
      ensurePitchOffsetDegreeIsMutable();
      pitchOffsetDegree_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float pitch_offset_degree = 12;</code>
     * @param values The pitchOffsetDegree to add.
     * @return This builder for chaining.
     */
    public Builder addAllPitchOffsetDegree(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensurePitchOffsetDegreeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, pitchOffsetDegree_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float pitch_offset_degree = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearPitchOffsetDegree() {
      pitchOffsetDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList rollDegree_ = emptyFloatList();
    private void ensureRollDegreeIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        rollDegree_ = mutableCopy(rollDegree_);
        bitField0_ |= 0x00000800;
       }
    }
    /**
     * <code>repeated float roll_degree = 13;</code>
     * @return A list containing the rollDegree.
     */
    public java.util.List<java.lang.Float>
        getRollDegreeList() {
      return ((bitField0_ & 0x00000800) != 0) ?
               java.util.Collections.unmodifiableList(rollDegree_) : rollDegree_;
    }
    /**
     * <code>repeated float roll_degree = 13;</code>
     * @return The count of rollDegree.
     */
    public int getRollDegreeCount() {
      return rollDegree_.size();
    }
    /**
     * <code>repeated float roll_degree = 13;</code>
     * @param index The index of the element to return.
     * @return The rollDegree at the given index.
     */
    public float getRollDegree(int index) {
      return rollDegree_.getFloat(index);
    }
    /**
     * <code>repeated float roll_degree = 13;</code>
     * @param index The index to set the value at.
     * @param value The rollDegree to set.
     * @return This builder for chaining.
     */
    public Builder setRollDegree(
        int index, float value) {
      ensureRollDegreeIsMutable();
      rollDegree_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float roll_degree = 13;</code>
     * @param value The rollDegree to add.
     * @return This builder for chaining.
     */
    public Builder addRollDegree(float value) {
      ensureRollDegreeIsMutable();
      rollDegree_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float roll_degree = 13;</code>
     * @param values The rollDegree to add.
     * @return This builder for chaining.
     */
    public Builder addAllRollDegree(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureRollDegreeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, rollDegree_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float roll_degree = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearRollDegree() {
      rollDegree_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList distanceMeters_ = emptyFloatList();
    private void ensureDistanceMetersIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        distanceMeters_ = mutableCopy(distanceMeters_);
        bitField0_ |= 0x00001000;
       }
    }
    /**
     * <code>repeated float distance_meters = 14;</code>
     * @return A list containing the distanceMeters.
     */
    public java.util.List<java.lang.Float>
        getDistanceMetersList() {
      return ((bitField0_ & 0x00001000) != 0) ?
               java.util.Collections.unmodifiableList(distanceMeters_) : distanceMeters_;
    }
    /**
     * <code>repeated float distance_meters = 14;</code>
     * @return The count of distanceMeters.
     */
    public int getDistanceMetersCount() {
      return distanceMeters_.size();
    }
    /**
     * <code>repeated float distance_meters = 14;</code>
     * @param index The index of the element to return.
     * @return The distanceMeters at the given index.
     */
    public float getDistanceMeters(int index) {
      return distanceMeters_.getFloat(index);
    }
    /**
     * <code>repeated float distance_meters = 14;</code>
     * @param index The index to set the value at.
     * @param value The distanceMeters to set.
     * @return This builder for chaining.
     */
    public Builder setDistanceMeters(
        int index, float value) {
      ensureDistanceMetersIsMutable();
      distanceMeters_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float distance_meters = 14;</code>
     * @param value The distanceMeters to add.
     * @return This builder for chaining.
     */
    public Builder addDistanceMeters(float value) {
      ensureDistanceMetersIsMutable();
      distanceMeters_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float distance_meters = 14;</code>
     * @param values The distanceMeters to add.
     * @return This builder for chaining.
     */
    public Builder addAllDistanceMeters(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureDistanceMetersIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, distanceMeters_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float distance_meters = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearDistanceMeters() {
      distanceMeters_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00001000);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList heightPercent_ = emptyFloatList();
    private void ensureHeightPercentIsMutable() {
      if (!((bitField0_ & 0x00002000) != 0)) {
        heightPercent_ = mutableCopy(heightPercent_);
        bitField0_ |= 0x00002000;
       }
    }
    /**
     * <code>repeated float height_percent = 15;</code>
     * @return A list containing the heightPercent.
     */
    public java.util.List<java.lang.Float>
        getHeightPercentList() {
      return ((bitField0_ & 0x00002000) != 0) ?
               java.util.Collections.unmodifiableList(heightPercent_) : heightPercent_;
    }
    /**
     * <code>repeated float height_percent = 15;</code>
     * @return The count of heightPercent.
     */
    public int getHeightPercentCount() {
      return heightPercent_.size();
    }
    /**
     * <code>repeated float height_percent = 15;</code>
     * @param index The index of the element to return.
     * @return The heightPercent at the given index.
     */
    public float getHeightPercent(int index) {
      return heightPercent_.getFloat(index);
    }
    /**
     * <code>repeated float height_percent = 15;</code>
     * @param index The index to set the value at.
     * @param value The heightPercent to set.
     * @return This builder for chaining.
     */
    public Builder setHeightPercent(
        int index, float value) {
      ensureHeightPercentIsMutable();
      heightPercent_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float height_percent = 15;</code>
     * @param value The heightPercent to add.
     * @return This builder for chaining.
     */
    public Builder addHeightPercent(float value) {
      ensureHeightPercentIsMutable();
      heightPercent_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float height_percent = 15;</code>
     * @param values The heightPercent to add.
     * @return This builder for chaining.
     */
    public Builder addAllHeightPercent(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureHeightPercentIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, heightPercent_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float height_percent = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearHeightPercent() {
      heightPercent_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00002000);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList vertCtrRatio_ = emptyFloatList();
    private void ensureVertCtrRatioIsMutable() {
      if (!((bitField0_ & 0x00004000) != 0)) {
        vertCtrRatio_ = mutableCopy(vertCtrRatio_);
        bitField0_ |= 0x00004000;
       }
    }
    /**
     * <code>repeated float vert_ctr_ratio = 16;</code>
     * @return A list containing the vertCtrRatio.
     */
    public java.util.List<java.lang.Float>
        getVertCtrRatioList() {
      return ((bitField0_ & 0x00004000) != 0) ?
               java.util.Collections.unmodifiableList(vertCtrRatio_) : vertCtrRatio_;
    }
    /**
     * <code>repeated float vert_ctr_ratio = 16;</code>
     * @return The count of vertCtrRatio.
     */
    public int getVertCtrRatioCount() {
      return vertCtrRatio_.size();
    }
    /**
     * <code>repeated float vert_ctr_ratio = 16;</code>
     * @param index The index of the element to return.
     * @return The vertCtrRatio at the given index.
     */
    public float getVertCtrRatio(int index) {
      return vertCtrRatio_.getFloat(index);
    }
    /**
     * <code>repeated float vert_ctr_ratio = 16;</code>
     * @param index The index to set the value at.
     * @param value The vertCtrRatio to set.
     * @return This builder for chaining.
     */
    public Builder setVertCtrRatio(
        int index, float value) {
      ensureVertCtrRatioIsMutable();
      vertCtrRatio_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float vert_ctr_ratio = 16;</code>
     * @param value The vertCtrRatio to add.
     * @return This builder for chaining.
     */
    public Builder addVertCtrRatio(float value) {
      ensureVertCtrRatioIsMutable();
      vertCtrRatio_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float vert_ctr_ratio = 16;</code>
     * @param values The vertCtrRatio to add.
     * @return This builder for chaining.
     */
    public Builder addAllVertCtrRatio(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureVertCtrRatioIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, vertCtrRatio_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float vert_ctr_ratio = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearVertCtrRatio() {
      vertCtrRatio_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00004000);
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:POGOProtos.Settings.Master.CameraSettings)
  }

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.CameraSettings)
  private static final POGOProtos.Settings.Master.CameraSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new POGOProtos.Settings.Master.CameraSettings();
  }

  public static POGOProtos.Settings.Master.CameraSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CameraSettings>
      PARSER = new com.google.protobuf.AbstractParser<CameraSettings>() {
    @java.lang.Override
    public CameraSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CameraSettings(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CameraSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CameraSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public POGOProtos.Settings.Master.CameraSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

