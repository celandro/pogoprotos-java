// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/EncounterSettings.proto

package POGOProtos.Settings.Master;

public final class EncounterSettingsOuterClass {
  private EncounterSettingsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_POGOProtos_Settings_Master_EncounterSettings_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_POGOProtos_Settings_Master_EncounterSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n2POGOProtos/Settings/Master/EncounterSe" +
      "ttings.proto\022\032POGOProtos.Settings.Master" +
      "\"\323\005\n\021EncounterSettings\022\034\n\024spin_bonus_thr" +
      "eshold\030\001 \001(\002\022!\n\031excellent_throw_threshol" +
      "d\030\002 \001(\002\022\035\n\025great_throw_threshold\030\003 \001(\002\022\034" +
      "\n\024nice_throw_threshold\030\004 \001(\002\022\033\n\023mileston" +
      "e_threshold\030\005 \001(\005\022\034\n\024ar_plus_mode_enable" +
      "d\030\006 \001(\010\022$\n\034ar_close_proximity_threshold\030" +
      "\007 \001(\002\022\"\n\032ar_low_awareness_threshold\030\010 \001(" +
      "\002\022%\n\035ar_close_proximity_multiplier\030\t \001(\002" +
      "\022&\n\036ar_awareness_penalty_threshold\030\n \001(\002" +
      "\022\'\n\037ar_low_awareness_max_multiplier\030\013 \001(" +
      "\002\0220\n(ar_high_awareness_min_penalty_multi" +
      "plier\030\014 \001(\002\022\'\n\037ar_plus_attempts_until_fl" +
      "ee_max\030\r \001(\005\022,\n$ar_plus_attempts_until_f" +
      "lee_infinite\030\016 \001(\005\022$\n\034escaped_bonus_mult" +
      "iplier_max\030\017 \001(\002\0223\n+escaped_bonus_multip" +
      "lier_by_excellent_throw\030\020 \001(\002\022/\n\'escaped" +
      "_bonus_multiplier_by_great_throw\030\021 \001(\002\022." +
      "\n&escaped_bonus_multiplier_by_nice_throw" +
      "\030\022 \001(\002B\002P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_POGOProtos_Settings_Master_EncounterSettings_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_POGOProtos_Settings_Master_EncounterSettings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_POGOProtos_Settings_Master_EncounterSettings_descriptor,
        new java.lang.String[] { "SpinBonusThreshold", "ExcellentThrowThreshold", "GreatThrowThreshold", "NiceThrowThreshold", "MilestoneThreshold", "ArPlusModeEnabled", "ArCloseProximityThreshold", "ArLowAwarenessThreshold", "ArCloseProximityMultiplier", "ArAwarenessPenaltyThreshold", "ArLowAwarenessMaxMultiplier", "ArHighAwarenessMinPenaltyMultiplier", "ArPlusAttemptsUntilFleeMax", "ArPlusAttemptsUntilFleeInfinite", "EscapedBonusMultiplierMax", "EscapedBonusMultiplierByExcellentThrow", "EscapedBonusMultiplierByGreatThrow", "EscapedBonusMultiplierByNiceThrow", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
