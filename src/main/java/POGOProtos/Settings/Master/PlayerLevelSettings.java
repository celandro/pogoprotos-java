// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/PlayerLevelSettings.proto

package POGOProtos.Settings.Master;

/**
 * Protobuf type {@code POGOProtos.Settings.Master.PlayerLevelSettings}
 */
public final class PlayerLevelSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:POGOProtos.Settings.Master.PlayerLevelSettings)
    PlayerLevelSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PlayerLevelSettings.newBuilder() to construct.
  private PlayerLevelSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PlayerLevelSettings() {
    rankNum_ = emptyIntList();
    requiredExperience_ = emptyIntList();
    cpMultiplier_ = emptyFloatList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new PlayerLevelSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PlayerLevelSettings(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              rankNum_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            rankNum_.addInt(input.readInt32());
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
              rankNum_ = newIntList();
              mutable_bitField0_ |= 0x00000001;
            }
            while (input.getBytesUntilLimit() > 0) {
              rankNum_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 16: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              requiredExperience_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            requiredExperience_.addInt(input.readInt32());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              requiredExperience_ = newIntList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              requiredExperience_.addInt(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 29: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              cpMultiplier_ = newFloatList();
              mutable_bitField0_ |= 0x00000004;
            }
            cpMultiplier_.addFloat(input.readFloat());
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
              cpMultiplier_ = newFloatList();
              mutable_bitField0_ |= 0x00000004;
            }
            while (input.getBytesUntilLimit() > 0) {
              cpMultiplier_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 32: {

            maxEggPlayerLevel_ = input.readInt32();
            break;
          }
          case 40: {

            maxEncounterPlayerLevel_ = input.readInt32();
            break;
          }
          case 48: {

            maxRaidEncounterPlayerLevel_ = input.readInt32();
            break;
          }
          case 56: {

            maxQuestEncounterPlayerLevel_ = input.readInt32();
            break;
          }
          case 64: {

            maxVsSeekerEncounterPlayerLevel_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        rankNum_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        requiredExperience_.makeImmutable(); // C
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        cpMultiplier_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return POGOProtos.Settings.Master.PlayerLevelSettingsOuterClass.internal_static_POGOProtos_Settings_Master_PlayerLevelSettings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return POGOProtos.Settings.Master.PlayerLevelSettingsOuterClass.internal_static_POGOProtos_Settings_Master_PlayerLevelSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            POGOProtos.Settings.Master.PlayerLevelSettings.class, POGOProtos.Settings.Master.PlayerLevelSettings.Builder.class);
  }

  public static final int RANK_NUM_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.IntList rankNum_;
  /**
   * <code>repeated int32 rank_num = 1;</code>
   * @return A list containing the rankNum.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getRankNumList() {
    return rankNum_;
  }
  /**
   * <code>repeated int32 rank_num = 1;</code>
   * @return The count of rankNum.
   */
  public int getRankNumCount() {
    return rankNum_.size();
  }
  /**
   * <code>repeated int32 rank_num = 1;</code>
   * @param index The index of the element to return.
   * @return The rankNum at the given index.
   */
  public int getRankNum(int index) {
    return rankNum_.getInt(index);
  }
  private int rankNumMemoizedSerializedSize = -1;

  public static final int REQUIRED_EXPERIENCE_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.IntList requiredExperience_;
  /**
   * <code>repeated int32 required_experience = 2;</code>
   * @return A list containing the requiredExperience.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
      getRequiredExperienceList() {
    return requiredExperience_;
  }
  /**
   * <code>repeated int32 required_experience = 2;</code>
   * @return The count of requiredExperience.
   */
  public int getRequiredExperienceCount() {
    return requiredExperience_.size();
  }
  /**
   * <code>repeated int32 required_experience = 2;</code>
   * @param index The index of the element to return.
   * @return The requiredExperience at the given index.
   */
  public int getRequiredExperience(int index) {
    return requiredExperience_.getInt(index);
  }
  private int requiredExperienceMemoizedSerializedSize = -1;

  public static final int CP_MULTIPLIER_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.FloatList cpMultiplier_;
  /**
   * <code>repeated float cp_multiplier = 3;</code>
   * @return A list containing the cpMultiplier.
   */
  @java.lang.Override
  public java.util.List<java.lang.Float>
      getCpMultiplierList() {
    return cpMultiplier_;
  }
  /**
   * <code>repeated float cp_multiplier = 3;</code>
   * @return The count of cpMultiplier.
   */
  public int getCpMultiplierCount() {
    return cpMultiplier_.size();
  }
  /**
   * <code>repeated float cp_multiplier = 3;</code>
   * @param index The index of the element to return.
   * @return The cpMultiplier at the given index.
   */
  public float getCpMultiplier(int index) {
    return cpMultiplier_.getFloat(index);
  }
  private int cpMultiplierMemoizedSerializedSize = -1;

  public static final int MAX_EGG_PLAYER_LEVEL_FIELD_NUMBER = 4;
  private int maxEggPlayerLevel_;
  /**
   * <code>int32 max_egg_player_level = 4;</code>
   * @return The maxEggPlayerLevel.
   */
  @java.lang.Override
  public int getMaxEggPlayerLevel() {
    return maxEggPlayerLevel_;
  }

  public static final int MAX_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER = 5;
  private int maxEncounterPlayerLevel_;
  /**
   * <code>int32 max_encounter_player_level = 5;</code>
   * @return The maxEncounterPlayerLevel.
   */
  @java.lang.Override
  public int getMaxEncounterPlayerLevel() {
    return maxEncounterPlayerLevel_;
  }

  public static final int MAX_RAID_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER = 6;
  private int maxRaidEncounterPlayerLevel_;
  /**
   * <code>int32 max_raid_encounter_player_level = 6;</code>
   * @return The maxRaidEncounterPlayerLevel.
   */
  @java.lang.Override
  public int getMaxRaidEncounterPlayerLevel() {
    return maxRaidEncounterPlayerLevel_;
  }

  public static final int MAX_QUEST_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER = 7;
  private int maxQuestEncounterPlayerLevel_;
  /**
   * <code>int32 max_quest_encounter_player_level = 7;</code>
   * @return The maxQuestEncounterPlayerLevel.
   */
  @java.lang.Override
  public int getMaxQuestEncounterPlayerLevel() {
    return maxQuestEncounterPlayerLevel_;
  }

  public static final int MAX_VS_SEEKER_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER = 8;
  private int maxVsSeekerEncounterPlayerLevel_;
  /**
   * <code>int32 max_vs_seeker_encounter_player_level = 8;</code>
   * @return The maxVsSeekerEncounterPlayerLevel.
   */
  @java.lang.Override
  public int getMaxVsSeekerEncounterPlayerLevel() {
    return maxVsSeekerEncounterPlayerLevel_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getRankNumList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(rankNumMemoizedSerializedSize);
    }
    for (int i = 0; i < rankNum_.size(); i++) {
      output.writeInt32NoTag(rankNum_.getInt(i));
    }
    if (getRequiredExperienceList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(requiredExperienceMemoizedSerializedSize);
    }
    for (int i = 0; i < requiredExperience_.size(); i++) {
      output.writeInt32NoTag(requiredExperience_.getInt(i));
    }
    if (getCpMultiplierList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(cpMultiplierMemoizedSerializedSize);
    }
    for (int i = 0; i < cpMultiplier_.size(); i++) {
      output.writeFloatNoTag(cpMultiplier_.getFloat(i));
    }
    if (maxEggPlayerLevel_ != 0) {
      output.writeInt32(4, maxEggPlayerLevel_);
    }
    if (maxEncounterPlayerLevel_ != 0) {
      output.writeInt32(5, maxEncounterPlayerLevel_);
    }
    if (maxRaidEncounterPlayerLevel_ != 0) {
      output.writeInt32(6, maxRaidEncounterPlayerLevel_);
    }
    if (maxQuestEncounterPlayerLevel_ != 0) {
      output.writeInt32(7, maxQuestEncounterPlayerLevel_);
    }
    if (maxVsSeekerEncounterPlayerLevel_ != 0) {
      output.writeInt32(8, maxVsSeekerEncounterPlayerLevel_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < rankNum_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(rankNum_.getInt(i));
      }
      size += dataSize;
      if (!getRankNumList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      rankNumMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < requiredExperience_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(requiredExperience_.getInt(i));
      }
      size += dataSize;
      if (!getRequiredExperienceList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      requiredExperienceMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getCpMultiplierList().size();
      size += dataSize;
      if (!getCpMultiplierList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      cpMultiplierMemoizedSerializedSize = dataSize;
    }
    if (maxEggPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, maxEggPlayerLevel_);
    }
    if (maxEncounterPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, maxEncounterPlayerLevel_);
    }
    if (maxRaidEncounterPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, maxRaidEncounterPlayerLevel_);
    }
    if (maxQuestEncounterPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, maxQuestEncounterPlayerLevel_);
    }
    if (maxVsSeekerEncounterPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, maxVsSeekerEncounterPlayerLevel_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof POGOProtos.Settings.Master.PlayerLevelSettings)) {
      return super.equals(obj);
    }
    POGOProtos.Settings.Master.PlayerLevelSettings other = (POGOProtos.Settings.Master.PlayerLevelSettings) obj;

    if (!getRankNumList()
        .equals(other.getRankNumList())) return false;
    if (!getRequiredExperienceList()
        .equals(other.getRequiredExperienceList())) return false;
    if (!getCpMultiplierList()
        .equals(other.getCpMultiplierList())) return false;
    if (getMaxEggPlayerLevel()
        != other.getMaxEggPlayerLevel()) return false;
    if (getMaxEncounterPlayerLevel()
        != other.getMaxEncounterPlayerLevel()) return false;
    if (getMaxRaidEncounterPlayerLevel()
        != other.getMaxRaidEncounterPlayerLevel()) return false;
    if (getMaxQuestEncounterPlayerLevel()
        != other.getMaxQuestEncounterPlayerLevel()) return false;
    if (getMaxVsSeekerEncounterPlayerLevel()
        != other.getMaxVsSeekerEncounterPlayerLevel()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getRankNumCount() > 0) {
      hash = (37 * hash) + RANK_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getRankNumList().hashCode();
    }
    if (getRequiredExperienceCount() > 0) {
      hash = (37 * hash) + REQUIRED_EXPERIENCE_FIELD_NUMBER;
      hash = (53 * hash) + getRequiredExperienceList().hashCode();
    }
    if (getCpMultiplierCount() > 0) {
      hash = (37 * hash) + CP_MULTIPLIER_FIELD_NUMBER;
      hash = (53 * hash) + getCpMultiplierList().hashCode();
    }
    hash = (37 * hash) + MAX_EGG_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMaxEggPlayerLevel();
    hash = (37 * hash) + MAX_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMaxEncounterPlayerLevel();
    hash = (37 * hash) + MAX_RAID_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMaxRaidEncounterPlayerLevel();
    hash = (37 * hash) + MAX_QUEST_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMaxQuestEncounterPlayerLevel();
    hash = (37 * hash) + MAX_VS_SEEKER_ENCOUNTER_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMaxVsSeekerEncounterPlayerLevel();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.PlayerLevelSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(POGOProtos.Settings.Master.PlayerLevelSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code POGOProtos.Settings.Master.PlayerLevelSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:POGOProtos.Settings.Master.PlayerLevelSettings)
      POGOProtos.Settings.Master.PlayerLevelSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Settings.Master.PlayerLevelSettingsOuterClass.internal_static_POGOProtos_Settings_Master_PlayerLevelSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Settings.Master.PlayerLevelSettingsOuterClass.internal_static_POGOProtos_Settings_Master_PlayerLevelSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Settings.Master.PlayerLevelSettings.class, POGOProtos.Settings.Master.PlayerLevelSettings.Builder.class);
    }

    // Construct using POGOProtos.Settings.Master.PlayerLevelSettings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      rankNum_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      requiredExperience_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      cpMultiplier_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000004);
      maxEggPlayerLevel_ = 0;

      maxEncounterPlayerLevel_ = 0;

      maxRaidEncounterPlayerLevel_ = 0;

      maxQuestEncounterPlayerLevel_ = 0;

      maxVsSeekerEncounterPlayerLevel_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return POGOProtos.Settings.Master.PlayerLevelSettingsOuterClass.internal_static_POGOProtos_Settings_Master_PlayerLevelSettings_descriptor;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.PlayerLevelSettings getDefaultInstanceForType() {
      return POGOProtos.Settings.Master.PlayerLevelSettings.getDefaultInstance();
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.PlayerLevelSettings build() {
      POGOProtos.Settings.Master.PlayerLevelSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.PlayerLevelSettings buildPartial() {
      POGOProtos.Settings.Master.PlayerLevelSettings result = new POGOProtos.Settings.Master.PlayerLevelSettings(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) != 0)) {
        rankNum_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.rankNum_ = rankNum_;
      if (((bitField0_ & 0x00000002) != 0)) {
        requiredExperience_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.requiredExperience_ = requiredExperience_;
      if (((bitField0_ & 0x00000004) != 0)) {
        cpMultiplier_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.cpMultiplier_ = cpMultiplier_;
      result.maxEggPlayerLevel_ = maxEggPlayerLevel_;
      result.maxEncounterPlayerLevel_ = maxEncounterPlayerLevel_;
      result.maxRaidEncounterPlayerLevel_ = maxRaidEncounterPlayerLevel_;
      result.maxQuestEncounterPlayerLevel_ = maxQuestEncounterPlayerLevel_;
      result.maxVsSeekerEncounterPlayerLevel_ = maxVsSeekerEncounterPlayerLevel_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof POGOProtos.Settings.Master.PlayerLevelSettings) {
        return mergeFrom((POGOProtos.Settings.Master.PlayerLevelSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(POGOProtos.Settings.Master.PlayerLevelSettings other) {
      if (other == POGOProtos.Settings.Master.PlayerLevelSettings.getDefaultInstance()) return this;
      if (!other.rankNum_.isEmpty()) {
        if (rankNum_.isEmpty()) {
          rankNum_ = other.rankNum_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureRankNumIsMutable();
          rankNum_.addAll(other.rankNum_);
        }
        onChanged();
      }
      if (!other.requiredExperience_.isEmpty()) {
        if (requiredExperience_.isEmpty()) {
          requiredExperience_ = other.requiredExperience_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureRequiredExperienceIsMutable();
          requiredExperience_.addAll(other.requiredExperience_);
        }
        onChanged();
      }
      if (!other.cpMultiplier_.isEmpty()) {
        if (cpMultiplier_.isEmpty()) {
          cpMultiplier_ = other.cpMultiplier_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureCpMultiplierIsMutable();
          cpMultiplier_.addAll(other.cpMultiplier_);
        }
        onChanged();
      }
      if (other.getMaxEggPlayerLevel() != 0) {
        setMaxEggPlayerLevel(other.getMaxEggPlayerLevel());
      }
      if (other.getMaxEncounterPlayerLevel() != 0) {
        setMaxEncounterPlayerLevel(other.getMaxEncounterPlayerLevel());
      }
      if (other.getMaxRaidEncounterPlayerLevel() != 0) {
        setMaxRaidEncounterPlayerLevel(other.getMaxRaidEncounterPlayerLevel());
      }
      if (other.getMaxQuestEncounterPlayerLevel() != 0) {
        setMaxQuestEncounterPlayerLevel(other.getMaxQuestEncounterPlayerLevel());
      }
      if (other.getMaxVsSeekerEncounterPlayerLevel() != 0) {
        setMaxVsSeekerEncounterPlayerLevel(other.getMaxVsSeekerEncounterPlayerLevel());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      POGOProtos.Settings.Master.PlayerLevelSettings parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (POGOProtos.Settings.Master.PlayerLevelSettings) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.Internal.IntList rankNum_ = emptyIntList();
    private void ensureRankNumIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        rankNum_ = mutableCopy(rankNum_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <code>repeated int32 rank_num = 1;</code>
     * @return A list containing the rankNum.
     */
    public java.util.List<java.lang.Integer>
        getRankNumList() {
      return ((bitField0_ & 0x00000001) != 0) ?
               java.util.Collections.unmodifiableList(rankNum_) : rankNum_;
    }
    /**
     * <code>repeated int32 rank_num = 1;</code>
     * @return The count of rankNum.
     */
    public int getRankNumCount() {
      return rankNum_.size();
    }
    /**
     * <code>repeated int32 rank_num = 1;</code>
     * @param index The index of the element to return.
     * @return The rankNum at the given index.
     */
    public int getRankNum(int index) {
      return rankNum_.getInt(index);
    }
    /**
     * <code>repeated int32 rank_num = 1;</code>
     * @param index The index to set the value at.
     * @param value The rankNum to set.
     * @return This builder for chaining.
     */
    public Builder setRankNum(
        int index, int value) {
      ensureRankNumIsMutable();
      rankNum_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 rank_num = 1;</code>
     * @param value The rankNum to add.
     * @return This builder for chaining.
     */
    public Builder addRankNum(int value) {
      ensureRankNumIsMutable();
      rankNum_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 rank_num = 1;</code>
     * @param values The rankNum to add.
     * @return This builder for chaining.
     */
    public Builder addAllRankNum(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRankNumIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, rankNum_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 rank_num = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearRankNum() {
      rankNum_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.IntList requiredExperience_ = emptyIntList();
    private void ensureRequiredExperienceIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        requiredExperience_ = mutableCopy(requiredExperience_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated int32 required_experience = 2;</code>
     * @return A list containing the requiredExperience.
     */
    public java.util.List<java.lang.Integer>
        getRequiredExperienceList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(requiredExperience_) : requiredExperience_;
    }
    /**
     * <code>repeated int32 required_experience = 2;</code>
     * @return The count of requiredExperience.
     */
    public int getRequiredExperienceCount() {
      return requiredExperience_.size();
    }
    /**
     * <code>repeated int32 required_experience = 2;</code>
     * @param index The index of the element to return.
     * @return The requiredExperience at the given index.
     */
    public int getRequiredExperience(int index) {
      return requiredExperience_.getInt(index);
    }
    /**
     * <code>repeated int32 required_experience = 2;</code>
     * @param index The index to set the value at.
     * @param value The requiredExperience to set.
     * @return This builder for chaining.
     */
    public Builder setRequiredExperience(
        int index, int value) {
      ensureRequiredExperienceIsMutable();
      requiredExperience_.setInt(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 required_experience = 2;</code>
     * @param value The requiredExperience to add.
     * @return This builder for chaining.
     */
    public Builder addRequiredExperience(int value) {
      ensureRequiredExperienceIsMutable();
      requiredExperience_.addInt(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 required_experience = 2;</code>
     * @param values The requiredExperience to add.
     * @return This builder for chaining.
     */
    public Builder addAllRequiredExperience(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRequiredExperienceIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, requiredExperience_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated int32 required_experience = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequiredExperience() {
      requiredExperience_ = emptyIntList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList cpMultiplier_ = emptyFloatList();
    private void ensureCpMultiplierIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        cpMultiplier_ = mutableCopy(cpMultiplier_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <code>repeated float cp_multiplier = 3;</code>
     * @return A list containing the cpMultiplier.
     */
    public java.util.List<java.lang.Float>
        getCpMultiplierList() {
      return ((bitField0_ & 0x00000004) != 0) ?
               java.util.Collections.unmodifiableList(cpMultiplier_) : cpMultiplier_;
    }
    /**
     * <code>repeated float cp_multiplier = 3;</code>
     * @return The count of cpMultiplier.
     */
    public int getCpMultiplierCount() {
      return cpMultiplier_.size();
    }
    /**
     * <code>repeated float cp_multiplier = 3;</code>
     * @param index The index of the element to return.
     * @return The cpMultiplier at the given index.
     */
    public float getCpMultiplier(int index) {
      return cpMultiplier_.getFloat(index);
    }
    /**
     * <code>repeated float cp_multiplier = 3;</code>
     * @param index The index to set the value at.
     * @param value The cpMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setCpMultiplier(
        int index, float value) {
      ensureCpMultiplierIsMutable();
      cpMultiplier_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float cp_multiplier = 3;</code>
     * @param value The cpMultiplier to add.
     * @return This builder for chaining.
     */
    public Builder addCpMultiplier(float value) {
      ensureCpMultiplierIsMutable();
      cpMultiplier_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float cp_multiplier = 3;</code>
     * @param values The cpMultiplier to add.
     * @return This builder for chaining.
     */
    public Builder addAllCpMultiplier(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureCpMultiplierIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, cpMultiplier_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float cp_multiplier = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpMultiplier() {
      cpMultiplier_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }

    private int maxEggPlayerLevel_ ;
    /**
     * <code>int32 max_egg_player_level = 4;</code>
     * @return The maxEggPlayerLevel.
     */
    @java.lang.Override
    public int getMaxEggPlayerLevel() {
      return maxEggPlayerLevel_;
    }
    /**
     * <code>int32 max_egg_player_level = 4;</code>
     * @param value The maxEggPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMaxEggPlayerLevel(int value) {
      
      maxEggPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_egg_player_level = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxEggPlayerLevel() {
      
      maxEggPlayerLevel_ = 0;
      onChanged();
      return this;
    }

    private int maxEncounterPlayerLevel_ ;
    /**
     * <code>int32 max_encounter_player_level = 5;</code>
     * @return The maxEncounterPlayerLevel.
     */
    @java.lang.Override
    public int getMaxEncounterPlayerLevel() {
      return maxEncounterPlayerLevel_;
    }
    /**
     * <code>int32 max_encounter_player_level = 5;</code>
     * @param value The maxEncounterPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMaxEncounterPlayerLevel(int value) {
      
      maxEncounterPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_encounter_player_level = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxEncounterPlayerLevel() {
      
      maxEncounterPlayerLevel_ = 0;
      onChanged();
      return this;
    }

    private int maxRaidEncounterPlayerLevel_ ;
    /**
     * <code>int32 max_raid_encounter_player_level = 6;</code>
     * @return The maxRaidEncounterPlayerLevel.
     */
    @java.lang.Override
    public int getMaxRaidEncounterPlayerLevel() {
      return maxRaidEncounterPlayerLevel_;
    }
    /**
     * <code>int32 max_raid_encounter_player_level = 6;</code>
     * @param value The maxRaidEncounterPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMaxRaidEncounterPlayerLevel(int value) {
      
      maxRaidEncounterPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_raid_encounter_player_level = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxRaidEncounterPlayerLevel() {
      
      maxRaidEncounterPlayerLevel_ = 0;
      onChanged();
      return this;
    }

    private int maxQuestEncounterPlayerLevel_ ;
    /**
     * <code>int32 max_quest_encounter_player_level = 7;</code>
     * @return The maxQuestEncounterPlayerLevel.
     */
    @java.lang.Override
    public int getMaxQuestEncounterPlayerLevel() {
      return maxQuestEncounterPlayerLevel_;
    }
    /**
     * <code>int32 max_quest_encounter_player_level = 7;</code>
     * @param value The maxQuestEncounterPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMaxQuestEncounterPlayerLevel(int value) {
      
      maxQuestEncounterPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_quest_encounter_player_level = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxQuestEncounterPlayerLevel() {
      
      maxQuestEncounterPlayerLevel_ = 0;
      onChanged();
      return this;
    }

    private int maxVsSeekerEncounterPlayerLevel_ ;
    /**
     * <code>int32 max_vs_seeker_encounter_player_level = 8;</code>
     * @return The maxVsSeekerEncounterPlayerLevel.
     */
    @java.lang.Override
    public int getMaxVsSeekerEncounterPlayerLevel() {
      return maxVsSeekerEncounterPlayerLevel_;
    }
    /**
     * <code>int32 max_vs_seeker_encounter_player_level = 8;</code>
     * @param value The maxVsSeekerEncounterPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMaxVsSeekerEncounterPlayerLevel(int value) {
      
      maxVsSeekerEncounterPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_vs_seeker_encounter_player_level = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxVsSeekerEncounterPlayerLevel() {
      
      maxVsSeekerEncounterPlayerLevel_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:POGOProtos.Settings.Master.PlayerLevelSettings)
  }

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.PlayerLevelSettings)
  private static final POGOProtos.Settings.Master.PlayerLevelSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new POGOProtos.Settings.Master.PlayerLevelSettings();
  }

  public static POGOProtos.Settings.Master.PlayerLevelSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PlayerLevelSettings>
      PARSER = new com.google.protobuf.AbstractParser<PlayerLevelSettings>() {
    @java.lang.Override
    public PlayerLevelSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PlayerLevelSettings(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PlayerLevelSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PlayerLevelSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public POGOProtos.Settings.Master.PlayerLevelSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

