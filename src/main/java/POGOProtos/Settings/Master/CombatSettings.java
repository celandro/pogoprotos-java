// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/CombatSettings.proto

package POGOProtos.Settings.Master;

/**
 * Protobuf type {@code POGOProtos.Settings.Master.CombatSettings}
 */
public final class CombatSettings extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:POGOProtos.Settings.Master.CombatSettings)
    CombatSettingsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CombatSettings.newBuilder() to construct.
  private CombatSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CombatSettings() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CombatSettings();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CombatSettings(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 13: {

            roundDurationSeconds_ = input.readFloat();
            break;
          }
          case 21: {

            turnDurationSeconds_ = input.readFloat();
            break;
          }
          case 29: {

            minigameDurationSeconds_ = input.readFloat();
            break;
          }
          case 37: {

            sameTypeAttackBonusMultiplier_ = input.readFloat();
            break;
          }
          case 45: {

            fastAttackBonusMultiplier_ = input.readFloat();
            break;
          }
          case 53: {

            chargeAttackBonusMultiplier_ = input.readFloat();
            break;
          }
          case 61: {

            defenseBonusMultiplier_ = input.readFloat();
            break;
          }
          case 69: {

            minigameBonusBaseMultiplier_ = input.readFloat();
            break;
          }
          case 77: {

            minigameBonusVariableMultiplier_ = input.readFloat();
            break;
          }
          case 80: {

            maxEnergy_ = input.readInt32();
            break;
          }
          case 93: {

            defenderMinigameMultiplier_ = input.readFloat();
            break;
          }
          case 101: {

            changePokemonDurationSeconds_ = input.readFloat();
            break;
          }
          case 109: {

            minigameSubmitScoreDurationSeconds_ = input.readFloat();
            break;
          }
          case 117: {

            quickSwapCombatStartAvailableSeconds_ = input.readFloat();
            break;
          }
          case 125: {

            quickSwapCooldownDurationSeconds_ = input.readFloat();
            break;
          }
          case 130: {
            POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder subBuilder = null;
            if (offensiveInputChallengeSettings_ != null) {
              subBuilder = offensiveInputChallengeSettings_.toBuilder();
            }
            offensiveInputChallengeSettings_ = input.readMessage(POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(offensiveInputChallengeSettings_);
              offensiveInputChallengeSettings_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder subBuilder = null;
            if (defensiveInputChallengeSettings_ != null) {
              subBuilder = defensiveInputChallengeSettings_.toBuilder();
            }
            defensiveInputChallengeSettings_ = input.readMessage(POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(defensiveInputChallengeSettings_);
              defensiveInputChallengeSettings_ = subBuilder.buildPartial();
            }

            break;
          }
          case 149: {

            chargeScoreBase_ = input.readFloat();
            break;
          }
          case 157: {

            chargeScoreNice_ = input.readFloat();
            break;
          }
          case 165: {

            chargeScoreGreat_ = input.readFloat();
            break;
          }
          case 173: {

            chargeScoreExcellent_ = input.readFloat();
            break;
          }
          case 176: {

            swapAnimationDurationTurns_ = input.readInt32();
            break;
          }
          case 184: {

            superEffectiveFlyoutDurationTurns_ = input.readInt32();
            break;
          }
          case 192: {

            notVeryEffectiveFlyoutDurationTurns_ = input.readInt32();
            break;
          }
          case 200: {

            blockedFlyoutDurationTurns_ = input.readInt32();
            break;
          }
          case 208: {

            normalEffectiveFlyoutDurationTurns_ = input.readInt32();
            break;
          }
          case 216: {

            faintAnimationDurationTurns_ = input.readInt32();
            break;
          }
          case 224: {

            npcSwapDelayTurns_ = input.readInt32();
            break;
          }
          case 232: {

            npcChargedAttackDelayTurns_ = input.readInt32();
            break;
          }
          case 245: {

            shadowPokemonAttackBonusMultiplier_ = input.readFloat();
            break;
          }
          case 253: {

            shadowPokemonDefenseBonusMultiplier_ = input.readFloat();
            break;
          }
          case 261: {

            purifiedPokemonAttackMultiplierVsShadow_ = input.readFloat();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            POGOProtos.Settings.Master.CombatSettings.class, POGOProtos.Settings.Master.CombatSettings.Builder.class);
  }

  public interface CombatOffensiveInputChallengeSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float score_per_tap = 1;</code>
     * @return The scorePerTap.
     */
    float getScorePerTap();

    /**
     * <code>float score_decay_per_second = 2;</code>
     * @return The scoreDecayPerSecond.
     */
    float getScoreDecayPerSecond();

    /**
     * <code>float max_score = 3;</code>
     * @return The maxScore.
     */
    float getMaxScore();

    /**
     * <code>float high_score_additional_decay_per_second = 4;</code>
     * @return The highScoreAdditionalDecayPerSecond.
     */
    float getHighScoreAdditionalDecayPerSecond();

    /**
     * <code>float max_time_additional_decay_per_second = 5;</code>
     * @return The maxTimeAdditionalDecayPerSecond.
     */
    float getMaxTimeAdditionalDecayPerSecond();
  }
  /**
   * Protobuf type {@code POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings}
   */
  public static final class CombatOffensiveInputChallengeSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings)
      CombatOffensiveInputChallengeSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CombatOffensiveInputChallengeSettings.newBuilder() to construct.
    private CombatOffensiveInputChallengeSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CombatOffensiveInputChallengeSettings() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CombatOffensiveInputChallengeSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CombatOffensiveInputChallengeSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              scorePerTap_ = input.readFloat();
              break;
            }
            case 21: {

              scoreDecayPerSecond_ = input.readFloat();
              break;
            }
            case 29: {

              maxScore_ = input.readFloat();
              break;
            }
            case 37: {

              highScoreAdditionalDecayPerSecond_ = input.readFloat();
              break;
            }
            case 45: {

              maxTimeAdditionalDecayPerSecond_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatOffensiveInputChallengeSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatOffensiveInputChallengeSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.class, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder.class);
    }

    public static final int SCORE_PER_TAP_FIELD_NUMBER = 1;
    private float scorePerTap_;
    /**
     * <code>float score_per_tap = 1;</code>
     * @return The scorePerTap.
     */
    @java.lang.Override
    public float getScorePerTap() {
      return scorePerTap_;
    }

    public static final int SCORE_DECAY_PER_SECOND_FIELD_NUMBER = 2;
    private float scoreDecayPerSecond_;
    /**
     * <code>float score_decay_per_second = 2;</code>
     * @return The scoreDecayPerSecond.
     */
    @java.lang.Override
    public float getScoreDecayPerSecond() {
      return scoreDecayPerSecond_;
    }

    public static final int MAX_SCORE_FIELD_NUMBER = 3;
    private float maxScore_;
    /**
     * <code>float max_score = 3;</code>
     * @return The maxScore.
     */
    @java.lang.Override
    public float getMaxScore() {
      return maxScore_;
    }

    public static final int HIGH_SCORE_ADDITIONAL_DECAY_PER_SECOND_FIELD_NUMBER = 4;
    private float highScoreAdditionalDecayPerSecond_;
    /**
     * <code>float high_score_additional_decay_per_second = 4;</code>
     * @return The highScoreAdditionalDecayPerSecond.
     */
    @java.lang.Override
    public float getHighScoreAdditionalDecayPerSecond() {
      return highScoreAdditionalDecayPerSecond_;
    }

    public static final int MAX_TIME_ADDITIONAL_DECAY_PER_SECOND_FIELD_NUMBER = 5;
    private float maxTimeAdditionalDecayPerSecond_;
    /**
     * <code>float max_time_additional_decay_per_second = 5;</code>
     * @return The maxTimeAdditionalDecayPerSecond.
     */
    @java.lang.Override
    public float getMaxTimeAdditionalDecayPerSecond() {
      return maxTimeAdditionalDecayPerSecond_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (scorePerTap_ != 0F) {
        output.writeFloat(1, scorePerTap_);
      }
      if (scoreDecayPerSecond_ != 0F) {
        output.writeFloat(2, scoreDecayPerSecond_);
      }
      if (maxScore_ != 0F) {
        output.writeFloat(3, maxScore_);
      }
      if (highScoreAdditionalDecayPerSecond_ != 0F) {
        output.writeFloat(4, highScoreAdditionalDecayPerSecond_);
      }
      if (maxTimeAdditionalDecayPerSecond_ != 0F) {
        output.writeFloat(5, maxTimeAdditionalDecayPerSecond_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (scorePerTap_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, scorePerTap_);
      }
      if (scoreDecayPerSecond_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, scoreDecayPerSecond_);
      }
      if (maxScore_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, maxScore_);
      }
      if (highScoreAdditionalDecayPerSecond_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, highScoreAdditionalDecayPerSecond_);
      }
      if (maxTimeAdditionalDecayPerSecond_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, maxTimeAdditionalDecayPerSecond_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings)) {
        return super.equals(obj);
      }
      POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings other = (POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings) obj;

      if (java.lang.Float.floatToIntBits(getScorePerTap())
          != java.lang.Float.floatToIntBits(
              other.getScorePerTap())) return false;
      if (java.lang.Float.floatToIntBits(getScoreDecayPerSecond())
          != java.lang.Float.floatToIntBits(
              other.getScoreDecayPerSecond())) return false;
      if (java.lang.Float.floatToIntBits(getMaxScore())
          != java.lang.Float.floatToIntBits(
              other.getMaxScore())) return false;
      if (java.lang.Float.floatToIntBits(getHighScoreAdditionalDecayPerSecond())
          != java.lang.Float.floatToIntBits(
              other.getHighScoreAdditionalDecayPerSecond())) return false;
      if (java.lang.Float.floatToIntBits(getMaxTimeAdditionalDecayPerSecond())
          != java.lang.Float.floatToIntBits(
              other.getMaxTimeAdditionalDecayPerSecond())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SCORE_PER_TAP_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScorePerTap());
      hash = (37 * hash) + SCORE_DECAY_PER_SECOND_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScoreDecayPerSecond());
      hash = (37 * hash) + MAX_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxScore());
      hash = (37 * hash) + HIGH_SCORE_ADDITIONAL_DECAY_PER_SECOND_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getHighScoreAdditionalDecayPerSecond());
      hash = (37 * hash) + MAX_TIME_ADDITIONAL_DECAY_PER_SECOND_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxTimeAdditionalDecayPerSecond());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings)
        POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatOffensiveInputChallengeSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatOffensiveInputChallengeSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.class, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder.class);
      }

      // Construct using POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        scorePerTap_ = 0F;

        scoreDecayPerSecond_ = 0F;

        maxScore_ = 0F;

        highScoreAdditionalDecayPerSecond_ = 0F;

        maxTimeAdditionalDecayPerSecond_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatOffensiveInputChallengeSettings_descriptor;
      }

      @java.lang.Override
      public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings getDefaultInstanceForType() {
        return POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.getDefaultInstance();
      }

      @java.lang.Override
      public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings build() {
        POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings buildPartial() {
        POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings result = new POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings(this);
        result.scorePerTap_ = scorePerTap_;
        result.scoreDecayPerSecond_ = scoreDecayPerSecond_;
        result.maxScore_ = maxScore_;
        result.highScoreAdditionalDecayPerSecond_ = highScoreAdditionalDecayPerSecond_;
        result.maxTimeAdditionalDecayPerSecond_ = maxTimeAdditionalDecayPerSecond_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings) {
          return mergeFrom((POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings other) {
        if (other == POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.getDefaultInstance()) return this;
        if (other.getScorePerTap() != 0F) {
          setScorePerTap(other.getScorePerTap());
        }
        if (other.getScoreDecayPerSecond() != 0F) {
          setScoreDecayPerSecond(other.getScoreDecayPerSecond());
        }
        if (other.getMaxScore() != 0F) {
          setMaxScore(other.getMaxScore());
        }
        if (other.getHighScoreAdditionalDecayPerSecond() != 0F) {
          setHighScoreAdditionalDecayPerSecond(other.getHighScoreAdditionalDecayPerSecond());
        }
        if (other.getMaxTimeAdditionalDecayPerSecond() != 0F) {
          setMaxTimeAdditionalDecayPerSecond(other.getMaxTimeAdditionalDecayPerSecond());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float scorePerTap_ ;
      /**
       * <code>float score_per_tap = 1;</code>
       * @return The scorePerTap.
       */
      @java.lang.Override
      public float getScorePerTap() {
        return scorePerTap_;
      }
      /**
       * <code>float score_per_tap = 1;</code>
       * @param value The scorePerTap to set.
       * @return This builder for chaining.
       */
      public Builder setScorePerTap(float value) {
        
        scorePerTap_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float score_per_tap = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearScorePerTap() {
        
        scorePerTap_ = 0F;
        onChanged();
        return this;
      }

      private float scoreDecayPerSecond_ ;
      /**
       * <code>float score_decay_per_second = 2;</code>
       * @return The scoreDecayPerSecond.
       */
      @java.lang.Override
      public float getScoreDecayPerSecond() {
        return scoreDecayPerSecond_;
      }
      /**
       * <code>float score_decay_per_second = 2;</code>
       * @param value The scoreDecayPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setScoreDecayPerSecond(float value) {
        
        scoreDecayPerSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float score_decay_per_second = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearScoreDecayPerSecond() {
        
        scoreDecayPerSecond_ = 0F;
        onChanged();
        return this;
      }

      private float maxScore_ ;
      /**
       * <code>float max_score = 3;</code>
       * @return The maxScore.
       */
      @java.lang.Override
      public float getMaxScore() {
        return maxScore_;
      }
      /**
       * <code>float max_score = 3;</code>
       * @param value The maxScore to set.
       * @return This builder for chaining.
       */
      public Builder setMaxScore(float value) {
        
        maxScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float max_score = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxScore() {
        
        maxScore_ = 0F;
        onChanged();
        return this;
      }

      private float highScoreAdditionalDecayPerSecond_ ;
      /**
       * <code>float high_score_additional_decay_per_second = 4;</code>
       * @return The highScoreAdditionalDecayPerSecond.
       */
      @java.lang.Override
      public float getHighScoreAdditionalDecayPerSecond() {
        return highScoreAdditionalDecayPerSecond_;
      }
      /**
       * <code>float high_score_additional_decay_per_second = 4;</code>
       * @param value The highScoreAdditionalDecayPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setHighScoreAdditionalDecayPerSecond(float value) {
        
        highScoreAdditionalDecayPerSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float high_score_additional_decay_per_second = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearHighScoreAdditionalDecayPerSecond() {
        
        highScoreAdditionalDecayPerSecond_ = 0F;
        onChanged();
        return this;
      }

      private float maxTimeAdditionalDecayPerSecond_ ;
      /**
       * <code>float max_time_additional_decay_per_second = 5;</code>
       * @return The maxTimeAdditionalDecayPerSecond.
       */
      @java.lang.Override
      public float getMaxTimeAdditionalDecayPerSecond() {
        return maxTimeAdditionalDecayPerSecond_;
      }
      /**
       * <code>float max_time_additional_decay_per_second = 5;</code>
       * @param value The maxTimeAdditionalDecayPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setMaxTimeAdditionalDecayPerSecond(float value) {
        
        maxTimeAdditionalDecayPerSecond_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float max_time_additional_decay_per_second = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxTimeAdditionalDecayPerSecond() {
        
        maxTimeAdditionalDecayPerSecond_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings)
    }

    // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings)
    private static final POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings();
    }

    public static POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CombatOffensiveInputChallengeSettings>
        PARSER = new com.google.protobuf.AbstractParser<CombatOffensiveInputChallengeSettings>() {
      @java.lang.Override
      public CombatOffensiveInputChallengeSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CombatOffensiveInputChallengeSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CombatOffensiveInputChallengeSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CombatOffensiveInputChallengeSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CombatDefensiveInputChallengeSettingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float full_rotations_for_max_score = 1;</code>
     * @return The fullRotationsForMaxScore.
     */
    float getFullRotationsForMaxScore();
  }
  /**
   * Protobuf type {@code POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings}
   */
  public static final class CombatDefensiveInputChallengeSettings extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings)
      CombatDefensiveInputChallengeSettingsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CombatDefensiveInputChallengeSettings.newBuilder() to construct.
    private CombatDefensiveInputChallengeSettings(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CombatDefensiveInputChallengeSettings() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CombatDefensiveInputChallengeSettings();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CombatDefensiveInputChallengeSettings(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 13: {

              fullRotationsForMaxScore_ = input.readFloat();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatDefensiveInputChallengeSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatDefensiveInputChallengeSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.class, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder.class);
    }

    public static final int FULL_ROTATIONS_FOR_MAX_SCORE_FIELD_NUMBER = 1;
    private float fullRotationsForMaxScore_;
    /**
     * <code>float full_rotations_for_max_score = 1;</code>
     * @return The fullRotationsForMaxScore.
     */
    @java.lang.Override
    public float getFullRotationsForMaxScore() {
      return fullRotationsForMaxScore_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fullRotationsForMaxScore_ != 0F) {
        output.writeFloat(1, fullRotationsForMaxScore_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fullRotationsForMaxScore_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, fullRotationsForMaxScore_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings)) {
        return super.equals(obj);
      }
      POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings other = (POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings) obj;

      if (java.lang.Float.floatToIntBits(getFullRotationsForMaxScore())
          != java.lang.Float.floatToIntBits(
              other.getFullRotationsForMaxScore())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FULL_ROTATIONS_FOR_MAX_SCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getFullRotationsForMaxScore());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings)
        POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatDefensiveInputChallengeSettings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatDefensiveInputChallengeSettings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.class, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder.class);
      }

      // Construct using POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fullRotationsForMaxScore_ = 0F;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_CombatDefensiveInputChallengeSettings_descriptor;
      }

      @java.lang.Override
      public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings getDefaultInstanceForType() {
        return POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.getDefaultInstance();
      }

      @java.lang.Override
      public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings build() {
        POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings buildPartial() {
        POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings result = new POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings(this);
        result.fullRotationsForMaxScore_ = fullRotationsForMaxScore_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings) {
          return mergeFrom((POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings other) {
        if (other == POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.getDefaultInstance()) return this;
        if (other.getFullRotationsForMaxScore() != 0F) {
          setFullRotationsForMaxScore(other.getFullRotationsForMaxScore());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float fullRotationsForMaxScore_ ;
      /**
       * <code>float full_rotations_for_max_score = 1;</code>
       * @return The fullRotationsForMaxScore.
       */
      @java.lang.Override
      public float getFullRotationsForMaxScore() {
        return fullRotationsForMaxScore_;
      }
      /**
       * <code>float full_rotations_for_max_score = 1;</code>
       * @param value The fullRotationsForMaxScore to set.
       * @return This builder for chaining.
       */
      public Builder setFullRotationsForMaxScore(float value) {
        
        fullRotationsForMaxScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float full_rotations_for_max_score = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFullRotationsForMaxScore() {
        
        fullRotationsForMaxScore_ = 0F;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings)
    }

    // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings)
    private static final POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings();
    }

    public static POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CombatDefensiveInputChallengeSettings>
        PARSER = new com.google.protobuf.AbstractParser<CombatDefensiveInputChallengeSettings>() {
      @java.lang.Override
      public CombatDefensiveInputChallengeSettings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CombatDefensiveInputChallengeSettings(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CombatDefensiveInputChallengeSettings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CombatDefensiveInputChallengeSettings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int ROUND_DURATION_SECONDS_FIELD_NUMBER = 1;
  private float roundDurationSeconds_;
  /**
   * <code>float round_duration_seconds = 1;</code>
   * @return The roundDurationSeconds.
   */
  @java.lang.Override
  public float getRoundDurationSeconds() {
    return roundDurationSeconds_;
  }

  public static final int TURN_DURATION_SECONDS_FIELD_NUMBER = 2;
  private float turnDurationSeconds_;
  /**
   * <code>float turn_duration_seconds = 2;</code>
   * @return The turnDurationSeconds.
   */
  @java.lang.Override
  public float getTurnDurationSeconds() {
    return turnDurationSeconds_;
  }

  public static final int MINIGAME_DURATION_SECONDS_FIELD_NUMBER = 3;
  private float minigameDurationSeconds_;
  /**
   * <code>float minigame_duration_seconds = 3;</code>
   * @return The minigameDurationSeconds.
   */
  @java.lang.Override
  public float getMinigameDurationSeconds() {
    return minigameDurationSeconds_;
  }

  public static final int SAME_TYPE_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER = 4;
  private float sameTypeAttackBonusMultiplier_;
  /**
   * <code>float same_type_attack_bonus_multiplier = 4;</code>
   * @return The sameTypeAttackBonusMultiplier.
   */
  @java.lang.Override
  public float getSameTypeAttackBonusMultiplier() {
    return sameTypeAttackBonusMultiplier_;
  }

  public static final int FAST_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER = 5;
  private float fastAttackBonusMultiplier_;
  /**
   * <code>float fast_attack_bonus_multiplier = 5;</code>
   * @return The fastAttackBonusMultiplier.
   */
  @java.lang.Override
  public float getFastAttackBonusMultiplier() {
    return fastAttackBonusMultiplier_;
  }

  public static final int CHARGE_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER = 6;
  private float chargeAttackBonusMultiplier_;
  /**
   * <code>float charge_attack_bonus_multiplier = 6;</code>
   * @return The chargeAttackBonusMultiplier.
   */
  @java.lang.Override
  public float getChargeAttackBonusMultiplier() {
    return chargeAttackBonusMultiplier_;
  }

  public static final int DEFENSE_BONUS_MULTIPLIER_FIELD_NUMBER = 7;
  private float defenseBonusMultiplier_;
  /**
   * <code>float defense_bonus_multiplier = 7;</code>
   * @return The defenseBonusMultiplier.
   */
  @java.lang.Override
  public float getDefenseBonusMultiplier() {
    return defenseBonusMultiplier_;
  }

  public static final int MINIGAME_BONUS_BASE_MULTIPLIER_FIELD_NUMBER = 8;
  private float minigameBonusBaseMultiplier_;
  /**
   * <code>float minigame_bonus_base_multiplier = 8;</code>
   * @return The minigameBonusBaseMultiplier.
   */
  @java.lang.Override
  public float getMinigameBonusBaseMultiplier() {
    return minigameBonusBaseMultiplier_;
  }

  public static final int MINIGAME_BONUS_VARIABLE_MULTIPLIER_FIELD_NUMBER = 9;
  private float minigameBonusVariableMultiplier_;
  /**
   * <code>float minigame_bonus_variable_multiplier = 9;</code>
   * @return The minigameBonusVariableMultiplier.
   */
  @java.lang.Override
  public float getMinigameBonusVariableMultiplier() {
    return minigameBonusVariableMultiplier_;
  }

  public static final int MAX_ENERGY_FIELD_NUMBER = 10;
  private int maxEnergy_;
  /**
   * <code>int32 max_energy = 10;</code>
   * @return The maxEnergy.
   */
  @java.lang.Override
  public int getMaxEnergy() {
    return maxEnergy_;
  }

  public static final int DEFENDER_MINIGAME_MULTIPLIER_FIELD_NUMBER = 11;
  private float defenderMinigameMultiplier_;
  /**
   * <code>float defender_minigame_multiplier = 11;</code>
   * @return The defenderMinigameMultiplier.
   */
  @java.lang.Override
  public float getDefenderMinigameMultiplier() {
    return defenderMinigameMultiplier_;
  }

  public static final int CHANGE_POKEMON_DURATION_SECONDS_FIELD_NUMBER = 12;
  private float changePokemonDurationSeconds_;
  /**
   * <code>float change_pokemon_duration_seconds = 12;</code>
   * @return The changePokemonDurationSeconds.
   */
  @java.lang.Override
  public float getChangePokemonDurationSeconds() {
    return changePokemonDurationSeconds_;
  }

  public static final int MINIGAME_SUBMIT_SCORE_DURATION_SECONDS_FIELD_NUMBER = 13;
  private float minigameSubmitScoreDurationSeconds_;
  /**
   * <code>float minigame_submit_score_duration_seconds = 13;</code>
   * @return The minigameSubmitScoreDurationSeconds.
   */
  @java.lang.Override
  public float getMinigameSubmitScoreDurationSeconds() {
    return minigameSubmitScoreDurationSeconds_;
  }

  public static final int QUICK_SWAP_COMBAT_START_AVAILABLE_SECONDS_FIELD_NUMBER = 14;
  private float quickSwapCombatStartAvailableSeconds_;
  /**
   * <code>float quick_swap_combat_start_available_seconds = 14;</code>
   * @return The quickSwapCombatStartAvailableSeconds.
   */
  @java.lang.Override
  public float getQuickSwapCombatStartAvailableSeconds() {
    return quickSwapCombatStartAvailableSeconds_;
  }

  public static final int QUICK_SWAP_COOLDOWN_DURATION_SECONDS_FIELD_NUMBER = 15;
  private float quickSwapCooldownDurationSeconds_;
  /**
   * <code>float quick_swap_cooldown_duration_seconds = 15;</code>
   * @return The quickSwapCooldownDurationSeconds.
   */
  @java.lang.Override
  public float getQuickSwapCooldownDurationSeconds() {
    return quickSwapCooldownDurationSeconds_;
  }

  public static final int OFFENSIVE_INPUT_CHALLENGE_SETTINGS_FIELD_NUMBER = 16;
  private POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensiveInputChallengeSettings_;
  /**
   * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
   * @return Whether the offensiveInputChallengeSettings field is set.
   */
  @java.lang.Override
  public boolean hasOffensiveInputChallengeSettings() {
    return offensiveInputChallengeSettings_ != null;
  }
  /**
   * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
   * @return The offensiveInputChallengeSettings.
   */
  @java.lang.Override
  public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings getOffensiveInputChallengeSettings() {
    return offensiveInputChallengeSettings_ == null ? POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.getDefaultInstance() : offensiveInputChallengeSettings_;
  }
  /**
   * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
   */
  @java.lang.Override
  public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettingsOrBuilder getOffensiveInputChallengeSettingsOrBuilder() {
    return getOffensiveInputChallengeSettings();
  }

  public static final int DEFENSIVE_INPUT_CHALLENGE_SETTINGS_FIELD_NUMBER = 17;
  private POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensiveInputChallengeSettings_;
  /**
   * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
   * @return Whether the defensiveInputChallengeSettings field is set.
   */
  @java.lang.Override
  public boolean hasDefensiveInputChallengeSettings() {
    return defensiveInputChallengeSettings_ != null;
  }
  /**
   * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
   * @return The defensiveInputChallengeSettings.
   */
  @java.lang.Override
  public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings getDefensiveInputChallengeSettings() {
    return defensiveInputChallengeSettings_ == null ? POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.getDefaultInstance() : defensiveInputChallengeSettings_;
  }
  /**
   * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
   */
  @java.lang.Override
  public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettingsOrBuilder getDefensiveInputChallengeSettingsOrBuilder() {
    return getDefensiveInputChallengeSettings();
  }

  public static final int CHARGE_SCORE_BASE_FIELD_NUMBER = 18;
  private float chargeScoreBase_;
  /**
   * <code>float charge_score_base = 18;</code>
   * @return The chargeScoreBase.
   */
  @java.lang.Override
  public float getChargeScoreBase() {
    return chargeScoreBase_;
  }

  public static final int CHARGE_SCORE_NICE_FIELD_NUMBER = 19;
  private float chargeScoreNice_;
  /**
   * <code>float charge_score_nice = 19;</code>
   * @return The chargeScoreNice.
   */
  @java.lang.Override
  public float getChargeScoreNice() {
    return chargeScoreNice_;
  }

  public static final int CHARGE_SCORE_GREAT_FIELD_NUMBER = 20;
  private float chargeScoreGreat_;
  /**
   * <code>float charge_score_great = 20;</code>
   * @return The chargeScoreGreat.
   */
  @java.lang.Override
  public float getChargeScoreGreat() {
    return chargeScoreGreat_;
  }

  public static final int CHARGE_SCORE_EXCELLENT_FIELD_NUMBER = 21;
  private float chargeScoreExcellent_;
  /**
   * <code>float charge_score_excellent = 21;</code>
   * @return The chargeScoreExcellent.
   */
  @java.lang.Override
  public float getChargeScoreExcellent() {
    return chargeScoreExcellent_;
  }

  public static final int SWAP_ANIMATION_DURATION_TURNS_FIELD_NUMBER = 22;
  private int swapAnimationDurationTurns_;
  /**
   * <code>int32 swap_animation_duration_turns = 22;</code>
   * @return The swapAnimationDurationTurns.
   */
  @java.lang.Override
  public int getSwapAnimationDurationTurns() {
    return swapAnimationDurationTurns_;
  }

  public static final int SUPER_EFFECTIVE_FLYOUT_DURATION_TURNS_FIELD_NUMBER = 23;
  private int superEffectiveFlyoutDurationTurns_;
  /**
   * <code>int32 super_effective_flyout_duration_turns = 23;</code>
   * @return The superEffectiveFlyoutDurationTurns.
   */
  @java.lang.Override
  public int getSuperEffectiveFlyoutDurationTurns() {
    return superEffectiveFlyoutDurationTurns_;
  }

  public static final int NOT_VERY_EFFECTIVE_FLYOUT_DURATION_TURNS_FIELD_NUMBER = 24;
  private int notVeryEffectiveFlyoutDurationTurns_;
  /**
   * <code>int32 not_very_effective_flyout_duration_turns = 24;</code>
   * @return The notVeryEffectiveFlyoutDurationTurns.
   */
  @java.lang.Override
  public int getNotVeryEffectiveFlyoutDurationTurns() {
    return notVeryEffectiveFlyoutDurationTurns_;
  }

  public static final int BLOCKED_FLYOUT_DURATION_TURNS_FIELD_NUMBER = 25;
  private int blockedFlyoutDurationTurns_;
  /**
   * <code>int32 blocked_flyout_duration_turns = 25;</code>
   * @return The blockedFlyoutDurationTurns.
   */
  @java.lang.Override
  public int getBlockedFlyoutDurationTurns() {
    return blockedFlyoutDurationTurns_;
  }

  public static final int NORMAL_EFFECTIVE_FLYOUT_DURATION_TURNS_FIELD_NUMBER = 26;
  private int normalEffectiveFlyoutDurationTurns_;
  /**
   * <code>int32 normal_effective_flyout_duration_turns = 26;</code>
   * @return The normalEffectiveFlyoutDurationTurns.
   */
  @java.lang.Override
  public int getNormalEffectiveFlyoutDurationTurns() {
    return normalEffectiveFlyoutDurationTurns_;
  }

  public static final int FAINT_ANIMATION_DURATION_TURNS_FIELD_NUMBER = 27;
  private int faintAnimationDurationTurns_;
  /**
   * <code>int32 faint_animation_duration_turns = 27;</code>
   * @return The faintAnimationDurationTurns.
   */
  @java.lang.Override
  public int getFaintAnimationDurationTurns() {
    return faintAnimationDurationTurns_;
  }

  public static final int NPC_SWAP_DELAY_TURNS_FIELD_NUMBER = 28;
  private int npcSwapDelayTurns_;
  /**
   * <code>int32 npc_swap_delay_turns = 28;</code>
   * @return The npcSwapDelayTurns.
   */
  @java.lang.Override
  public int getNpcSwapDelayTurns() {
    return npcSwapDelayTurns_;
  }

  public static final int NPC_CHARGED_ATTACK_DELAY_TURNS_FIELD_NUMBER = 29;
  private int npcChargedAttackDelayTurns_;
  /**
   * <code>int32 npc_charged_attack_delay_turns = 29;</code>
   * @return The npcChargedAttackDelayTurns.
   */
  @java.lang.Override
  public int getNpcChargedAttackDelayTurns() {
    return npcChargedAttackDelayTurns_;
  }

  public static final int SHADOW_POKEMON_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER = 30;
  private float shadowPokemonAttackBonusMultiplier_;
  /**
   * <code>float shadow_pokemon_attack_bonus_multiplier = 30;</code>
   * @return The shadowPokemonAttackBonusMultiplier.
   */
  @java.lang.Override
  public float getShadowPokemonAttackBonusMultiplier() {
    return shadowPokemonAttackBonusMultiplier_;
  }

  public static final int SHADOW_POKEMON_DEFENSE_BONUS_MULTIPLIER_FIELD_NUMBER = 31;
  private float shadowPokemonDefenseBonusMultiplier_;
  /**
   * <code>float shadow_pokemon_defense_bonus_multiplier = 31;</code>
   * @return The shadowPokemonDefenseBonusMultiplier.
   */
  @java.lang.Override
  public float getShadowPokemonDefenseBonusMultiplier() {
    return shadowPokemonDefenseBonusMultiplier_;
  }

  public static final int PURIFIED_POKEMON_ATTACK_MULTIPLIER_VS_SHADOW_FIELD_NUMBER = 32;
  private float purifiedPokemonAttackMultiplierVsShadow_;
  /**
   * <code>float purified_pokemon_attack_multiplier_vs_shadow = 32;</code>
   * @return The purifiedPokemonAttackMultiplierVsShadow.
   */
  @java.lang.Override
  public float getPurifiedPokemonAttackMultiplierVsShadow() {
    return purifiedPokemonAttackMultiplierVsShadow_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (roundDurationSeconds_ != 0F) {
      output.writeFloat(1, roundDurationSeconds_);
    }
    if (turnDurationSeconds_ != 0F) {
      output.writeFloat(2, turnDurationSeconds_);
    }
    if (minigameDurationSeconds_ != 0F) {
      output.writeFloat(3, minigameDurationSeconds_);
    }
    if (sameTypeAttackBonusMultiplier_ != 0F) {
      output.writeFloat(4, sameTypeAttackBonusMultiplier_);
    }
    if (fastAttackBonusMultiplier_ != 0F) {
      output.writeFloat(5, fastAttackBonusMultiplier_);
    }
    if (chargeAttackBonusMultiplier_ != 0F) {
      output.writeFloat(6, chargeAttackBonusMultiplier_);
    }
    if (defenseBonusMultiplier_ != 0F) {
      output.writeFloat(7, defenseBonusMultiplier_);
    }
    if (minigameBonusBaseMultiplier_ != 0F) {
      output.writeFloat(8, minigameBonusBaseMultiplier_);
    }
    if (minigameBonusVariableMultiplier_ != 0F) {
      output.writeFloat(9, minigameBonusVariableMultiplier_);
    }
    if (maxEnergy_ != 0) {
      output.writeInt32(10, maxEnergy_);
    }
    if (defenderMinigameMultiplier_ != 0F) {
      output.writeFloat(11, defenderMinigameMultiplier_);
    }
    if (changePokemonDurationSeconds_ != 0F) {
      output.writeFloat(12, changePokemonDurationSeconds_);
    }
    if (minigameSubmitScoreDurationSeconds_ != 0F) {
      output.writeFloat(13, minigameSubmitScoreDurationSeconds_);
    }
    if (quickSwapCombatStartAvailableSeconds_ != 0F) {
      output.writeFloat(14, quickSwapCombatStartAvailableSeconds_);
    }
    if (quickSwapCooldownDurationSeconds_ != 0F) {
      output.writeFloat(15, quickSwapCooldownDurationSeconds_);
    }
    if (offensiveInputChallengeSettings_ != null) {
      output.writeMessage(16, getOffensiveInputChallengeSettings());
    }
    if (defensiveInputChallengeSettings_ != null) {
      output.writeMessage(17, getDefensiveInputChallengeSettings());
    }
    if (chargeScoreBase_ != 0F) {
      output.writeFloat(18, chargeScoreBase_);
    }
    if (chargeScoreNice_ != 0F) {
      output.writeFloat(19, chargeScoreNice_);
    }
    if (chargeScoreGreat_ != 0F) {
      output.writeFloat(20, chargeScoreGreat_);
    }
    if (chargeScoreExcellent_ != 0F) {
      output.writeFloat(21, chargeScoreExcellent_);
    }
    if (swapAnimationDurationTurns_ != 0) {
      output.writeInt32(22, swapAnimationDurationTurns_);
    }
    if (superEffectiveFlyoutDurationTurns_ != 0) {
      output.writeInt32(23, superEffectiveFlyoutDurationTurns_);
    }
    if (notVeryEffectiveFlyoutDurationTurns_ != 0) {
      output.writeInt32(24, notVeryEffectiveFlyoutDurationTurns_);
    }
    if (blockedFlyoutDurationTurns_ != 0) {
      output.writeInt32(25, blockedFlyoutDurationTurns_);
    }
    if (normalEffectiveFlyoutDurationTurns_ != 0) {
      output.writeInt32(26, normalEffectiveFlyoutDurationTurns_);
    }
    if (faintAnimationDurationTurns_ != 0) {
      output.writeInt32(27, faintAnimationDurationTurns_);
    }
    if (npcSwapDelayTurns_ != 0) {
      output.writeInt32(28, npcSwapDelayTurns_);
    }
    if (npcChargedAttackDelayTurns_ != 0) {
      output.writeInt32(29, npcChargedAttackDelayTurns_);
    }
    if (shadowPokemonAttackBonusMultiplier_ != 0F) {
      output.writeFloat(30, shadowPokemonAttackBonusMultiplier_);
    }
    if (shadowPokemonDefenseBonusMultiplier_ != 0F) {
      output.writeFloat(31, shadowPokemonDefenseBonusMultiplier_);
    }
    if (purifiedPokemonAttackMultiplierVsShadow_ != 0F) {
      output.writeFloat(32, purifiedPokemonAttackMultiplierVsShadow_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (roundDurationSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, roundDurationSeconds_);
    }
    if (turnDurationSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, turnDurationSeconds_);
    }
    if (minigameDurationSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, minigameDurationSeconds_);
    }
    if (sameTypeAttackBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, sameTypeAttackBonusMultiplier_);
    }
    if (fastAttackBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, fastAttackBonusMultiplier_);
    }
    if (chargeAttackBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, chargeAttackBonusMultiplier_);
    }
    if (defenseBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, defenseBonusMultiplier_);
    }
    if (minigameBonusBaseMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(8, minigameBonusBaseMultiplier_);
    }
    if (minigameBonusVariableMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(9, minigameBonusVariableMultiplier_);
    }
    if (maxEnergy_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, maxEnergy_);
    }
    if (defenderMinigameMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(11, defenderMinigameMultiplier_);
    }
    if (changePokemonDurationSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(12, changePokemonDurationSeconds_);
    }
    if (minigameSubmitScoreDurationSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(13, minigameSubmitScoreDurationSeconds_);
    }
    if (quickSwapCombatStartAvailableSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(14, quickSwapCombatStartAvailableSeconds_);
    }
    if (quickSwapCooldownDurationSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(15, quickSwapCooldownDurationSeconds_);
    }
    if (offensiveInputChallengeSettings_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getOffensiveInputChallengeSettings());
    }
    if (defensiveInputChallengeSettings_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getDefensiveInputChallengeSettings());
    }
    if (chargeScoreBase_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(18, chargeScoreBase_);
    }
    if (chargeScoreNice_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(19, chargeScoreNice_);
    }
    if (chargeScoreGreat_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(20, chargeScoreGreat_);
    }
    if (chargeScoreExcellent_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(21, chargeScoreExcellent_);
    }
    if (swapAnimationDurationTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(22, swapAnimationDurationTurns_);
    }
    if (superEffectiveFlyoutDurationTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(23, superEffectiveFlyoutDurationTurns_);
    }
    if (notVeryEffectiveFlyoutDurationTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(24, notVeryEffectiveFlyoutDurationTurns_);
    }
    if (blockedFlyoutDurationTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(25, blockedFlyoutDurationTurns_);
    }
    if (normalEffectiveFlyoutDurationTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(26, normalEffectiveFlyoutDurationTurns_);
    }
    if (faintAnimationDurationTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(27, faintAnimationDurationTurns_);
    }
    if (npcSwapDelayTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(28, npcSwapDelayTurns_);
    }
    if (npcChargedAttackDelayTurns_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(29, npcChargedAttackDelayTurns_);
    }
    if (shadowPokemonAttackBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(30, shadowPokemonAttackBonusMultiplier_);
    }
    if (shadowPokemonDefenseBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(31, shadowPokemonDefenseBonusMultiplier_);
    }
    if (purifiedPokemonAttackMultiplierVsShadow_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(32, purifiedPokemonAttackMultiplierVsShadow_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof POGOProtos.Settings.Master.CombatSettings)) {
      return super.equals(obj);
    }
    POGOProtos.Settings.Master.CombatSettings other = (POGOProtos.Settings.Master.CombatSettings) obj;

    if (java.lang.Float.floatToIntBits(getRoundDurationSeconds())
        != java.lang.Float.floatToIntBits(
            other.getRoundDurationSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getTurnDurationSeconds())
        != java.lang.Float.floatToIntBits(
            other.getTurnDurationSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getMinigameDurationSeconds())
        != java.lang.Float.floatToIntBits(
            other.getMinigameDurationSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getSameTypeAttackBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getSameTypeAttackBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getFastAttackBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getFastAttackBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getChargeAttackBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getChargeAttackBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getDefenseBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getDefenseBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getMinigameBonusBaseMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getMinigameBonusBaseMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getMinigameBonusVariableMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getMinigameBonusVariableMultiplier())) return false;
    if (getMaxEnergy()
        != other.getMaxEnergy()) return false;
    if (java.lang.Float.floatToIntBits(getDefenderMinigameMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getDefenderMinigameMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getChangePokemonDurationSeconds())
        != java.lang.Float.floatToIntBits(
            other.getChangePokemonDurationSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getMinigameSubmitScoreDurationSeconds())
        != java.lang.Float.floatToIntBits(
            other.getMinigameSubmitScoreDurationSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getQuickSwapCombatStartAvailableSeconds())
        != java.lang.Float.floatToIntBits(
            other.getQuickSwapCombatStartAvailableSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getQuickSwapCooldownDurationSeconds())
        != java.lang.Float.floatToIntBits(
            other.getQuickSwapCooldownDurationSeconds())) return false;
    if (hasOffensiveInputChallengeSettings() != other.hasOffensiveInputChallengeSettings()) return false;
    if (hasOffensiveInputChallengeSettings()) {
      if (!getOffensiveInputChallengeSettings()
          .equals(other.getOffensiveInputChallengeSettings())) return false;
    }
    if (hasDefensiveInputChallengeSettings() != other.hasDefensiveInputChallengeSettings()) return false;
    if (hasDefensiveInputChallengeSettings()) {
      if (!getDefensiveInputChallengeSettings()
          .equals(other.getDefensiveInputChallengeSettings())) return false;
    }
    if (java.lang.Float.floatToIntBits(getChargeScoreBase())
        != java.lang.Float.floatToIntBits(
            other.getChargeScoreBase())) return false;
    if (java.lang.Float.floatToIntBits(getChargeScoreNice())
        != java.lang.Float.floatToIntBits(
            other.getChargeScoreNice())) return false;
    if (java.lang.Float.floatToIntBits(getChargeScoreGreat())
        != java.lang.Float.floatToIntBits(
            other.getChargeScoreGreat())) return false;
    if (java.lang.Float.floatToIntBits(getChargeScoreExcellent())
        != java.lang.Float.floatToIntBits(
            other.getChargeScoreExcellent())) return false;
    if (getSwapAnimationDurationTurns()
        != other.getSwapAnimationDurationTurns()) return false;
    if (getSuperEffectiveFlyoutDurationTurns()
        != other.getSuperEffectiveFlyoutDurationTurns()) return false;
    if (getNotVeryEffectiveFlyoutDurationTurns()
        != other.getNotVeryEffectiveFlyoutDurationTurns()) return false;
    if (getBlockedFlyoutDurationTurns()
        != other.getBlockedFlyoutDurationTurns()) return false;
    if (getNormalEffectiveFlyoutDurationTurns()
        != other.getNormalEffectiveFlyoutDurationTurns()) return false;
    if (getFaintAnimationDurationTurns()
        != other.getFaintAnimationDurationTurns()) return false;
    if (getNpcSwapDelayTurns()
        != other.getNpcSwapDelayTurns()) return false;
    if (getNpcChargedAttackDelayTurns()
        != other.getNpcChargedAttackDelayTurns()) return false;
    if (java.lang.Float.floatToIntBits(getShadowPokemonAttackBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getShadowPokemonAttackBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getShadowPokemonDefenseBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getShadowPokemonDefenseBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getPurifiedPokemonAttackMultiplierVsShadow())
        != java.lang.Float.floatToIntBits(
            other.getPurifiedPokemonAttackMultiplierVsShadow())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ROUND_DURATION_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getRoundDurationSeconds());
    hash = (37 * hash) + TURN_DURATION_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getTurnDurationSeconds());
    hash = (37 * hash) + MINIGAME_DURATION_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getMinigameDurationSeconds());
    hash = (37 * hash) + SAME_TYPE_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getSameTypeAttackBonusMultiplier());
    hash = (37 * hash) + FAST_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getFastAttackBonusMultiplier());
    hash = (37 * hash) + CHARGE_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getChargeAttackBonusMultiplier());
    hash = (37 * hash) + DEFENSE_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDefenseBonusMultiplier());
    hash = (37 * hash) + MINIGAME_BONUS_BASE_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getMinigameBonusBaseMultiplier());
    hash = (37 * hash) + MINIGAME_BONUS_VARIABLE_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getMinigameBonusVariableMultiplier());
    hash = (37 * hash) + MAX_ENERGY_FIELD_NUMBER;
    hash = (53 * hash) + getMaxEnergy();
    hash = (37 * hash) + DEFENDER_MINIGAME_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDefenderMinigameMultiplier());
    hash = (37 * hash) + CHANGE_POKEMON_DURATION_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getChangePokemonDurationSeconds());
    hash = (37 * hash) + MINIGAME_SUBMIT_SCORE_DURATION_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getMinigameSubmitScoreDurationSeconds());
    hash = (37 * hash) + QUICK_SWAP_COMBAT_START_AVAILABLE_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getQuickSwapCombatStartAvailableSeconds());
    hash = (37 * hash) + QUICK_SWAP_COOLDOWN_DURATION_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getQuickSwapCooldownDurationSeconds());
    if (hasOffensiveInputChallengeSettings()) {
      hash = (37 * hash) + OFFENSIVE_INPUT_CHALLENGE_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getOffensiveInputChallengeSettings().hashCode();
    }
    if (hasDefensiveInputChallengeSettings()) {
      hash = (37 * hash) + DEFENSIVE_INPUT_CHALLENGE_SETTINGS_FIELD_NUMBER;
      hash = (53 * hash) + getDefensiveInputChallengeSettings().hashCode();
    }
    hash = (37 * hash) + CHARGE_SCORE_BASE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getChargeScoreBase());
    hash = (37 * hash) + CHARGE_SCORE_NICE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getChargeScoreNice());
    hash = (37 * hash) + CHARGE_SCORE_GREAT_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getChargeScoreGreat());
    hash = (37 * hash) + CHARGE_SCORE_EXCELLENT_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getChargeScoreExcellent());
    hash = (37 * hash) + SWAP_ANIMATION_DURATION_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getSwapAnimationDurationTurns();
    hash = (37 * hash) + SUPER_EFFECTIVE_FLYOUT_DURATION_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getSuperEffectiveFlyoutDurationTurns();
    hash = (37 * hash) + NOT_VERY_EFFECTIVE_FLYOUT_DURATION_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getNotVeryEffectiveFlyoutDurationTurns();
    hash = (37 * hash) + BLOCKED_FLYOUT_DURATION_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getBlockedFlyoutDurationTurns();
    hash = (37 * hash) + NORMAL_EFFECTIVE_FLYOUT_DURATION_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getNormalEffectiveFlyoutDurationTurns();
    hash = (37 * hash) + FAINT_ANIMATION_DURATION_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getFaintAnimationDurationTurns();
    hash = (37 * hash) + NPC_SWAP_DELAY_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getNpcSwapDelayTurns();
    hash = (37 * hash) + NPC_CHARGED_ATTACK_DELAY_TURNS_FIELD_NUMBER;
    hash = (53 * hash) + getNpcChargedAttackDelayTurns();
    hash = (37 * hash) + SHADOW_POKEMON_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getShadowPokemonAttackBonusMultiplier());
    hash = (37 * hash) + SHADOW_POKEMON_DEFENSE_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getShadowPokemonDefenseBonusMultiplier());
    hash = (37 * hash) + PURIFIED_POKEMON_ATTACK_MULTIPLIER_VS_SHADOW_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getPurifiedPokemonAttackMultiplierVsShadow());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Settings.Master.CombatSettings parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(POGOProtos.Settings.Master.CombatSettings prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code POGOProtos.Settings.Master.CombatSettings}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:POGOProtos.Settings.Master.CombatSettings)
      POGOProtos.Settings.Master.CombatSettingsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Settings.Master.CombatSettings.class, POGOProtos.Settings.Master.CombatSettings.Builder.class);
    }

    // Construct using POGOProtos.Settings.Master.CombatSettings.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      roundDurationSeconds_ = 0F;

      turnDurationSeconds_ = 0F;

      minigameDurationSeconds_ = 0F;

      sameTypeAttackBonusMultiplier_ = 0F;

      fastAttackBonusMultiplier_ = 0F;

      chargeAttackBonusMultiplier_ = 0F;

      defenseBonusMultiplier_ = 0F;

      minigameBonusBaseMultiplier_ = 0F;

      minigameBonusVariableMultiplier_ = 0F;

      maxEnergy_ = 0;

      defenderMinigameMultiplier_ = 0F;

      changePokemonDurationSeconds_ = 0F;

      minigameSubmitScoreDurationSeconds_ = 0F;

      quickSwapCombatStartAvailableSeconds_ = 0F;

      quickSwapCooldownDurationSeconds_ = 0F;

      if (offensiveInputChallengeSettingsBuilder_ == null) {
        offensiveInputChallengeSettings_ = null;
      } else {
        offensiveInputChallengeSettings_ = null;
        offensiveInputChallengeSettingsBuilder_ = null;
      }
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        defensiveInputChallengeSettings_ = null;
      } else {
        defensiveInputChallengeSettings_ = null;
        defensiveInputChallengeSettingsBuilder_ = null;
      }
      chargeScoreBase_ = 0F;

      chargeScoreNice_ = 0F;

      chargeScoreGreat_ = 0F;

      chargeScoreExcellent_ = 0F;

      swapAnimationDurationTurns_ = 0;

      superEffectiveFlyoutDurationTurns_ = 0;

      notVeryEffectiveFlyoutDurationTurns_ = 0;

      blockedFlyoutDurationTurns_ = 0;

      normalEffectiveFlyoutDurationTurns_ = 0;

      faintAnimationDurationTurns_ = 0;

      npcSwapDelayTurns_ = 0;

      npcChargedAttackDelayTurns_ = 0;

      shadowPokemonAttackBonusMultiplier_ = 0F;

      shadowPokemonDefenseBonusMultiplier_ = 0F;

      purifiedPokemonAttackMultiplierVsShadow_ = 0F;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return POGOProtos.Settings.Master.CombatSettingsOuterClass.internal_static_POGOProtos_Settings_Master_CombatSettings_descriptor;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CombatSettings getDefaultInstanceForType() {
      return POGOProtos.Settings.Master.CombatSettings.getDefaultInstance();
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CombatSettings build() {
      POGOProtos.Settings.Master.CombatSettings result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public POGOProtos.Settings.Master.CombatSettings buildPartial() {
      POGOProtos.Settings.Master.CombatSettings result = new POGOProtos.Settings.Master.CombatSettings(this);
      result.roundDurationSeconds_ = roundDurationSeconds_;
      result.turnDurationSeconds_ = turnDurationSeconds_;
      result.minigameDurationSeconds_ = minigameDurationSeconds_;
      result.sameTypeAttackBonusMultiplier_ = sameTypeAttackBonusMultiplier_;
      result.fastAttackBonusMultiplier_ = fastAttackBonusMultiplier_;
      result.chargeAttackBonusMultiplier_ = chargeAttackBonusMultiplier_;
      result.defenseBonusMultiplier_ = defenseBonusMultiplier_;
      result.minigameBonusBaseMultiplier_ = minigameBonusBaseMultiplier_;
      result.minigameBonusVariableMultiplier_ = minigameBonusVariableMultiplier_;
      result.maxEnergy_ = maxEnergy_;
      result.defenderMinigameMultiplier_ = defenderMinigameMultiplier_;
      result.changePokemonDurationSeconds_ = changePokemonDurationSeconds_;
      result.minigameSubmitScoreDurationSeconds_ = minigameSubmitScoreDurationSeconds_;
      result.quickSwapCombatStartAvailableSeconds_ = quickSwapCombatStartAvailableSeconds_;
      result.quickSwapCooldownDurationSeconds_ = quickSwapCooldownDurationSeconds_;
      if (offensiveInputChallengeSettingsBuilder_ == null) {
        result.offensiveInputChallengeSettings_ = offensiveInputChallengeSettings_;
      } else {
        result.offensiveInputChallengeSettings_ = offensiveInputChallengeSettingsBuilder_.build();
      }
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        result.defensiveInputChallengeSettings_ = defensiveInputChallengeSettings_;
      } else {
        result.defensiveInputChallengeSettings_ = defensiveInputChallengeSettingsBuilder_.build();
      }
      result.chargeScoreBase_ = chargeScoreBase_;
      result.chargeScoreNice_ = chargeScoreNice_;
      result.chargeScoreGreat_ = chargeScoreGreat_;
      result.chargeScoreExcellent_ = chargeScoreExcellent_;
      result.swapAnimationDurationTurns_ = swapAnimationDurationTurns_;
      result.superEffectiveFlyoutDurationTurns_ = superEffectiveFlyoutDurationTurns_;
      result.notVeryEffectiveFlyoutDurationTurns_ = notVeryEffectiveFlyoutDurationTurns_;
      result.blockedFlyoutDurationTurns_ = blockedFlyoutDurationTurns_;
      result.normalEffectiveFlyoutDurationTurns_ = normalEffectiveFlyoutDurationTurns_;
      result.faintAnimationDurationTurns_ = faintAnimationDurationTurns_;
      result.npcSwapDelayTurns_ = npcSwapDelayTurns_;
      result.npcChargedAttackDelayTurns_ = npcChargedAttackDelayTurns_;
      result.shadowPokemonAttackBonusMultiplier_ = shadowPokemonAttackBonusMultiplier_;
      result.shadowPokemonDefenseBonusMultiplier_ = shadowPokemonDefenseBonusMultiplier_;
      result.purifiedPokemonAttackMultiplierVsShadow_ = purifiedPokemonAttackMultiplierVsShadow_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof POGOProtos.Settings.Master.CombatSettings) {
        return mergeFrom((POGOProtos.Settings.Master.CombatSettings)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(POGOProtos.Settings.Master.CombatSettings other) {
      if (other == POGOProtos.Settings.Master.CombatSettings.getDefaultInstance()) return this;
      if (other.getRoundDurationSeconds() != 0F) {
        setRoundDurationSeconds(other.getRoundDurationSeconds());
      }
      if (other.getTurnDurationSeconds() != 0F) {
        setTurnDurationSeconds(other.getTurnDurationSeconds());
      }
      if (other.getMinigameDurationSeconds() != 0F) {
        setMinigameDurationSeconds(other.getMinigameDurationSeconds());
      }
      if (other.getSameTypeAttackBonusMultiplier() != 0F) {
        setSameTypeAttackBonusMultiplier(other.getSameTypeAttackBonusMultiplier());
      }
      if (other.getFastAttackBonusMultiplier() != 0F) {
        setFastAttackBonusMultiplier(other.getFastAttackBonusMultiplier());
      }
      if (other.getChargeAttackBonusMultiplier() != 0F) {
        setChargeAttackBonusMultiplier(other.getChargeAttackBonusMultiplier());
      }
      if (other.getDefenseBonusMultiplier() != 0F) {
        setDefenseBonusMultiplier(other.getDefenseBonusMultiplier());
      }
      if (other.getMinigameBonusBaseMultiplier() != 0F) {
        setMinigameBonusBaseMultiplier(other.getMinigameBonusBaseMultiplier());
      }
      if (other.getMinigameBonusVariableMultiplier() != 0F) {
        setMinigameBonusVariableMultiplier(other.getMinigameBonusVariableMultiplier());
      }
      if (other.getMaxEnergy() != 0) {
        setMaxEnergy(other.getMaxEnergy());
      }
      if (other.getDefenderMinigameMultiplier() != 0F) {
        setDefenderMinigameMultiplier(other.getDefenderMinigameMultiplier());
      }
      if (other.getChangePokemonDurationSeconds() != 0F) {
        setChangePokemonDurationSeconds(other.getChangePokemonDurationSeconds());
      }
      if (other.getMinigameSubmitScoreDurationSeconds() != 0F) {
        setMinigameSubmitScoreDurationSeconds(other.getMinigameSubmitScoreDurationSeconds());
      }
      if (other.getQuickSwapCombatStartAvailableSeconds() != 0F) {
        setQuickSwapCombatStartAvailableSeconds(other.getQuickSwapCombatStartAvailableSeconds());
      }
      if (other.getQuickSwapCooldownDurationSeconds() != 0F) {
        setQuickSwapCooldownDurationSeconds(other.getQuickSwapCooldownDurationSeconds());
      }
      if (other.hasOffensiveInputChallengeSettings()) {
        mergeOffensiveInputChallengeSettings(other.getOffensiveInputChallengeSettings());
      }
      if (other.hasDefensiveInputChallengeSettings()) {
        mergeDefensiveInputChallengeSettings(other.getDefensiveInputChallengeSettings());
      }
      if (other.getChargeScoreBase() != 0F) {
        setChargeScoreBase(other.getChargeScoreBase());
      }
      if (other.getChargeScoreNice() != 0F) {
        setChargeScoreNice(other.getChargeScoreNice());
      }
      if (other.getChargeScoreGreat() != 0F) {
        setChargeScoreGreat(other.getChargeScoreGreat());
      }
      if (other.getChargeScoreExcellent() != 0F) {
        setChargeScoreExcellent(other.getChargeScoreExcellent());
      }
      if (other.getSwapAnimationDurationTurns() != 0) {
        setSwapAnimationDurationTurns(other.getSwapAnimationDurationTurns());
      }
      if (other.getSuperEffectiveFlyoutDurationTurns() != 0) {
        setSuperEffectiveFlyoutDurationTurns(other.getSuperEffectiveFlyoutDurationTurns());
      }
      if (other.getNotVeryEffectiveFlyoutDurationTurns() != 0) {
        setNotVeryEffectiveFlyoutDurationTurns(other.getNotVeryEffectiveFlyoutDurationTurns());
      }
      if (other.getBlockedFlyoutDurationTurns() != 0) {
        setBlockedFlyoutDurationTurns(other.getBlockedFlyoutDurationTurns());
      }
      if (other.getNormalEffectiveFlyoutDurationTurns() != 0) {
        setNormalEffectiveFlyoutDurationTurns(other.getNormalEffectiveFlyoutDurationTurns());
      }
      if (other.getFaintAnimationDurationTurns() != 0) {
        setFaintAnimationDurationTurns(other.getFaintAnimationDurationTurns());
      }
      if (other.getNpcSwapDelayTurns() != 0) {
        setNpcSwapDelayTurns(other.getNpcSwapDelayTurns());
      }
      if (other.getNpcChargedAttackDelayTurns() != 0) {
        setNpcChargedAttackDelayTurns(other.getNpcChargedAttackDelayTurns());
      }
      if (other.getShadowPokemonAttackBonusMultiplier() != 0F) {
        setShadowPokemonAttackBonusMultiplier(other.getShadowPokemonAttackBonusMultiplier());
      }
      if (other.getShadowPokemonDefenseBonusMultiplier() != 0F) {
        setShadowPokemonDefenseBonusMultiplier(other.getShadowPokemonDefenseBonusMultiplier());
      }
      if (other.getPurifiedPokemonAttackMultiplierVsShadow() != 0F) {
        setPurifiedPokemonAttackMultiplierVsShadow(other.getPurifiedPokemonAttackMultiplierVsShadow());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      POGOProtos.Settings.Master.CombatSettings parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (POGOProtos.Settings.Master.CombatSettings) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private float roundDurationSeconds_ ;
    /**
     * <code>float round_duration_seconds = 1;</code>
     * @return The roundDurationSeconds.
     */
    @java.lang.Override
    public float getRoundDurationSeconds() {
      return roundDurationSeconds_;
    }
    /**
     * <code>float round_duration_seconds = 1;</code>
     * @param value The roundDurationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setRoundDurationSeconds(float value) {
      
      roundDurationSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float round_duration_seconds = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearRoundDurationSeconds() {
      
      roundDurationSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float turnDurationSeconds_ ;
    /**
     * <code>float turn_duration_seconds = 2;</code>
     * @return The turnDurationSeconds.
     */
    @java.lang.Override
    public float getTurnDurationSeconds() {
      return turnDurationSeconds_;
    }
    /**
     * <code>float turn_duration_seconds = 2;</code>
     * @param value The turnDurationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setTurnDurationSeconds(float value) {
      
      turnDurationSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float turn_duration_seconds = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTurnDurationSeconds() {
      
      turnDurationSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float minigameDurationSeconds_ ;
    /**
     * <code>float minigame_duration_seconds = 3;</code>
     * @return The minigameDurationSeconds.
     */
    @java.lang.Override
    public float getMinigameDurationSeconds() {
      return minigameDurationSeconds_;
    }
    /**
     * <code>float minigame_duration_seconds = 3;</code>
     * @param value The minigameDurationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setMinigameDurationSeconds(float value) {
      
      minigameDurationSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float minigame_duration_seconds = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinigameDurationSeconds() {
      
      minigameDurationSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float sameTypeAttackBonusMultiplier_ ;
    /**
     * <code>float same_type_attack_bonus_multiplier = 4;</code>
     * @return The sameTypeAttackBonusMultiplier.
     */
    @java.lang.Override
    public float getSameTypeAttackBonusMultiplier() {
      return sameTypeAttackBonusMultiplier_;
    }
    /**
     * <code>float same_type_attack_bonus_multiplier = 4;</code>
     * @param value The sameTypeAttackBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setSameTypeAttackBonusMultiplier(float value) {
      
      sameTypeAttackBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float same_type_attack_bonus_multiplier = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearSameTypeAttackBonusMultiplier() {
      
      sameTypeAttackBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float fastAttackBonusMultiplier_ ;
    /**
     * <code>float fast_attack_bonus_multiplier = 5;</code>
     * @return The fastAttackBonusMultiplier.
     */
    @java.lang.Override
    public float getFastAttackBonusMultiplier() {
      return fastAttackBonusMultiplier_;
    }
    /**
     * <code>float fast_attack_bonus_multiplier = 5;</code>
     * @param value The fastAttackBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setFastAttackBonusMultiplier(float value) {
      
      fastAttackBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float fast_attack_bonus_multiplier = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFastAttackBonusMultiplier() {
      
      fastAttackBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float chargeAttackBonusMultiplier_ ;
    /**
     * <code>float charge_attack_bonus_multiplier = 6;</code>
     * @return The chargeAttackBonusMultiplier.
     */
    @java.lang.Override
    public float getChargeAttackBonusMultiplier() {
      return chargeAttackBonusMultiplier_;
    }
    /**
     * <code>float charge_attack_bonus_multiplier = 6;</code>
     * @param value The chargeAttackBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setChargeAttackBonusMultiplier(float value) {
      
      chargeAttackBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float charge_attack_bonus_multiplier = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearChargeAttackBonusMultiplier() {
      
      chargeAttackBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float defenseBonusMultiplier_ ;
    /**
     * <code>float defense_bonus_multiplier = 7;</code>
     * @return The defenseBonusMultiplier.
     */
    @java.lang.Override
    public float getDefenseBonusMultiplier() {
      return defenseBonusMultiplier_;
    }
    /**
     * <code>float defense_bonus_multiplier = 7;</code>
     * @param value The defenseBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setDefenseBonusMultiplier(float value) {
      
      defenseBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float defense_bonus_multiplier = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefenseBonusMultiplier() {
      
      defenseBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float minigameBonusBaseMultiplier_ ;
    /**
     * <code>float minigame_bonus_base_multiplier = 8;</code>
     * @return The minigameBonusBaseMultiplier.
     */
    @java.lang.Override
    public float getMinigameBonusBaseMultiplier() {
      return minigameBonusBaseMultiplier_;
    }
    /**
     * <code>float minigame_bonus_base_multiplier = 8;</code>
     * @param value The minigameBonusBaseMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setMinigameBonusBaseMultiplier(float value) {
      
      minigameBonusBaseMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float minigame_bonus_base_multiplier = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinigameBonusBaseMultiplier() {
      
      minigameBonusBaseMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float minigameBonusVariableMultiplier_ ;
    /**
     * <code>float minigame_bonus_variable_multiplier = 9;</code>
     * @return The minigameBonusVariableMultiplier.
     */
    @java.lang.Override
    public float getMinigameBonusVariableMultiplier() {
      return minigameBonusVariableMultiplier_;
    }
    /**
     * <code>float minigame_bonus_variable_multiplier = 9;</code>
     * @param value The minigameBonusVariableMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setMinigameBonusVariableMultiplier(float value) {
      
      minigameBonusVariableMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float minigame_bonus_variable_multiplier = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinigameBonusVariableMultiplier() {
      
      minigameBonusVariableMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private int maxEnergy_ ;
    /**
     * <code>int32 max_energy = 10;</code>
     * @return The maxEnergy.
     */
    @java.lang.Override
    public int getMaxEnergy() {
      return maxEnergy_;
    }
    /**
     * <code>int32 max_energy = 10;</code>
     * @param value The maxEnergy to set.
     * @return This builder for chaining.
     */
    public Builder setMaxEnergy(int value) {
      
      maxEnergy_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 max_energy = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxEnergy() {
      
      maxEnergy_ = 0;
      onChanged();
      return this;
    }

    private float defenderMinigameMultiplier_ ;
    /**
     * <code>float defender_minigame_multiplier = 11;</code>
     * @return The defenderMinigameMultiplier.
     */
    @java.lang.Override
    public float getDefenderMinigameMultiplier() {
      return defenderMinigameMultiplier_;
    }
    /**
     * <code>float defender_minigame_multiplier = 11;</code>
     * @param value The defenderMinigameMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setDefenderMinigameMultiplier(float value) {
      
      defenderMinigameMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float defender_minigame_multiplier = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearDefenderMinigameMultiplier() {
      
      defenderMinigameMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float changePokemonDurationSeconds_ ;
    /**
     * <code>float change_pokemon_duration_seconds = 12;</code>
     * @return The changePokemonDurationSeconds.
     */
    @java.lang.Override
    public float getChangePokemonDurationSeconds() {
      return changePokemonDurationSeconds_;
    }
    /**
     * <code>float change_pokemon_duration_seconds = 12;</code>
     * @param value The changePokemonDurationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setChangePokemonDurationSeconds(float value) {
      
      changePokemonDurationSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float change_pokemon_duration_seconds = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearChangePokemonDurationSeconds() {
      
      changePokemonDurationSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float minigameSubmitScoreDurationSeconds_ ;
    /**
     * <code>float minigame_submit_score_duration_seconds = 13;</code>
     * @return The minigameSubmitScoreDurationSeconds.
     */
    @java.lang.Override
    public float getMinigameSubmitScoreDurationSeconds() {
      return minigameSubmitScoreDurationSeconds_;
    }
    /**
     * <code>float minigame_submit_score_duration_seconds = 13;</code>
     * @param value The minigameSubmitScoreDurationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setMinigameSubmitScoreDurationSeconds(float value) {
      
      minigameSubmitScoreDurationSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float minigame_submit_score_duration_seconds = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinigameSubmitScoreDurationSeconds() {
      
      minigameSubmitScoreDurationSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float quickSwapCombatStartAvailableSeconds_ ;
    /**
     * <code>float quick_swap_combat_start_available_seconds = 14;</code>
     * @return The quickSwapCombatStartAvailableSeconds.
     */
    @java.lang.Override
    public float getQuickSwapCombatStartAvailableSeconds() {
      return quickSwapCombatStartAvailableSeconds_;
    }
    /**
     * <code>float quick_swap_combat_start_available_seconds = 14;</code>
     * @param value The quickSwapCombatStartAvailableSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setQuickSwapCombatStartAvailableSeconds(float value) {
      
      quickSwapCombatStartAvailableSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float quick_swap_combat_start_available_seconds = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuickSwapCombatStartAvailableSeconds() {
      
      quickSwapCombatStartAvailableSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float quickSwapCooldownDurationSeconds_ ;
    /**
     * <code>float quick_swap_cooldown_duration_seconds = 15;</code>
     * @return The quickSwapCooldownDurationSeconds.
     */
    @java.lang.Override
    public float getQuickSwapCooldownDurationSeconds() {
      return quickSwapCooldownDurationSeconds_;
    }
    /**
     * <code>float quick_swap_cooldown_duration_seconds = 15;</code>
     * @param value The quickSwapCooldownDurationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setQuickSwapCooldownDurationSeconds(float value) {
      
      quickSwapCooldownDurationSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float quick_swap_cooldown_duration_seconds = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearQuickSwapCooldownDurationSeconds() {
      
      quickSwapCooldownDurationSeconds_ = 0F;
      onChanged();
      return this;
    }

    private POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensiveInputChallengeSettings_;
    private com.google.protobuf.SingleFieldBuilderV3<
        POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettingsOrBuilder> offensiveInputChallengeSettingsBuilder_;
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     * @return Whether the offensiveInputChallengeSettings field is set.
     */
    public boolean hasOffensiveInputChallengeSettings() {
      return offensiveInputChallengeSettingsBuilder_ != null || offensiveInputChallengeSettings_ != null;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     * @return The offensiveInputChallengeSettings.
     */
    public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings getOffensiveInputChallengeSettings() {
      if (offensiveInputChallengeSettingsBuilder_ == null) {
        return offensiveInputChallengeSettings_ == null ? POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.getDefaultInstance() : offensiveInputChallengeSettings_;
      } else {
        return offensiveInputChallengeSettingsBuilder_.getMessage();
      }
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     */
    public Builder setOffensiveInputChallengeSettings(POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings value) {
      if (offensiveInputChallengeSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        offensiveInputChallengeSettings_ = value;
        onChanged();
      } else {
        offensiveInputChallengeSettingsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     */
    public Builder setOffensiveInputChallengeSettings(
        POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder builderForValue) {
      if (offensiveInputChallengeSettingsBuilder_ == null) {
        offensiveInputChallengeSettings_ = builderForValue.build();
        onChanged();
      } else {
        offensiveInputChallengeSettingsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     */
    public Builder mergeOffensiveInputChallengeSettings(POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings value) {
      if (offensiveInputChallengeSettingsBuilder_ == null) {
        if (offensiveInputChallengeSettings_ != null) {
          offensiveInputChallengeSettings_ =
            POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.newBuilder(offensiveInputChallengeSettings_).mergeFrom(value).buildPartial();
        } else {
          offensiveInputChallengeSettings_ = value;
        }
        onChanged();
      } else {
        offensiveInputChallengeSettingsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     */
    public Builder clearOffensiveInputChallengeSettings() {
      if (offensiveInputChallengeSettingsBuilder_ == null) {
        offensiveInputChallengeSettings_ = null;
        onChanged();
      } else {
        offensiveInputChallengeSettings_ = null;
        offensiveInputChallengeSettingsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     */
    public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder getOffensiveInputChallengeSettingsBuilder() {
      
      onChanged();
      return getOffensiveInputChallengeSettingsFieldBuilder().getBuilder();
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     */
    public POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettingsOrBuilder getOffensiveInputChallengeSettingsOrBuilder() {
      if (offensiveInputChallengeSettingsBuilder_ != null) {
        return offensiveInputChallengeSettingsBuilder_.getMessageOrBuilder();
      } else {
        return offensiveInputChallengeSettings_ == null ?
            POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.getDefaultInstance() : offensiveInputChallengeSettings_;
      }
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettingsOrBuilder> 
        getOffensiveInputChallengeSettingsFieldBuilder() {
      if (offensiveInputChallengeSettingsBuilder_ == null) {
        offensiveInputChallengeSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettings.Builder, POGOProtos.Settings.Master.CombatSettings.CombatOffensiveInputChallengeSettingsOrBuilder>(
                getOffensiveInputChallengeSettings(),
                getParentForChildren(),
                isClean());
        offensiveInputChallengeSettings_ = null;
      }
      return offensiveInputChallengeSettingsBuilder_;
    }

    private POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensiveInputChallengeSettings_;
    private com.google.protobuf.SingleFieldBuilderV3<
        POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettingsOrBuilder> defensiveInputChallengeSettingsBuilder_;
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     * @return Whether the defensiveInputChallengeSettings field is set.
     */
    public boolean hasDefensiveInputChallengeSettings() {
      return defensiveInputChallengeSettingsBuilder_ != null || defensiveInputChallengeSettings_ != null;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     * @return The defensiveInputChallengeSettings.
     */
    public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings getDefensiveInputChallengeSettings() {
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        return defensiveInputChallengeSettings_ == null ? POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.getDefaultInstance() : defensiveInputChallengeSettings_;
      } else {
        return defensiveInputChallengeSettingsBuilder_.getMessage();
      }
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     */
    public Builder setDefensiveInputChallengeSettings(POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings value) {
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        defensiveInputChallengeSettings_ = value;
        onChanged();
      } else {
        defensiveInputChallengeSettingsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     */
    public Builder setDefensiveInputChallengeSettings(
        POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder builderForValue) {
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        defensiveInputChallengeSettings_ = builderForValue.build();
        onChanged();
      } else {
        defensiveInputChallengeSettingsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     */
    public Builder mergeDefensiveInputChallengeSettings(POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings value) {
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        if (defensiveInputChallengeSettings_ != null) {
          defensiveInputChallengeSettings_ =
            POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.newBuilder(defensiveInputChallengeSettings_).mergeFrom(value).buildPartial();
        } else {
          defensiveInputChallengeSettings_ = value;
        }
        onChanged();
      } else {
        defensiveInputChallengeSettingsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     */
    public Builder clearDefensiveInputChallengeSettings() {
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        defensiveInputChallengeSettings_ = null;
        onChanged();
      } else {
        defensiveInputChallengeSettings_ = null;
        defensiveInputChallengeSettingsBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     */
    public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder getDefensiveInputChallengeSettingsBuilder() {
      
      onChanged();
      return getDefensiveInputChallengeSettingsFieldBuilder().getBuilder();
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     */
    public POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettingsOrBuilder getDefensiveInputChallengeSettingsOrBuilder() {
      if (defensiveInputChallengeSettingsBuilder_ != null) {
        return defensiveInputChallengeSettingsBuilder_.getMessageOrBuilder();
      } else {
        return defensiveInputChallengeSettings_ == null ?
            POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.getDefaultInstance() : defensiveInputChallengeSettings_;
      }
    }
    /**
     * <code>.POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettingsOrBuilder> 
        getDefensiveInputChallengeSettingsFieldBuilder() {
      if (defensiveInputChallengeSettingsBuilder_ == null) {
        defensiveInputChallengeSettingsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettings.Builder, POGOProtos.Settings.Master.CombatSettings.CombatDefensiveInputChallengeSettingsOrBuilder>(
                getDefensiveInputChallengeSettings(),
                getParentForChildren(),
                isClean());
        defensiveInputChallengeSettings_ = null;
      }
      return defensiveInputChallengeSettingsBuilder_;
    }

    private float chargeScoreBase_ ;
    /**
     * <code>float charge_score_base = 18;</code>
     * @return The chargeScoreBase.
     */
    @java.lang.Override
    public float getChargeScoreBase() {
      return chargeScoreBase_;
    }
    /**
     * <code>float charge_score_base = 18;</code>
     * @param value The chargeScoreBase to set.
     * @return This builder for chaining.
     */
    public Builder setChargeScoreBase(float value) {
      
      chargeScoreBase_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float charge_score_base = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearChargeScoreBase() {
      
      chargeScoreBase_ = 0F;
      onChanged();
      return this;
    }

    private float chargeScoreNice_ ;
    /**
     * <code>float charge_score_nice = 19;</code>
     * @return The chargeScoreNice.
     */
    @java.lang.Override
    public float getChargeScoreNice() {
      return chargeScoreNice_;
    }
    /**
     * <code>float charge_score_nice = 19;</code>
     * @param value The chargeScoreNice to set.
     * @return This builder for chaining.
     */
    public Builder setChargeScoreNice(float value) {
      
      chargeScoreNice_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float charge_score_nice = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearChargeScoreNice() {
      
      chargeScoreNice_ = 0F;
      onChanged();
      return this;
    }

    private float chargeScoreGreat_ ;
    /**
     * <code>float charge_score_great = 20;</code>
     * @return The chargeScoreGreat.
     */
    @java.lang.Override
    public float getChargeScoreGreat() {
      return chargeScoreGreat_;
    }
    /**
     * <code>float charge_score_great = 20;</code>
     * @param value The chargeScoreGreat to set.
     * @return This builder for chaining.
     */
    public Builder setChargeScoreGreat(float value) {
      
      chargeScoreGreat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float charge_score_great = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearChargeScoreGreat() {
      
      chargeScoreGreat_ = 0F;
      onChanged();
      return this;
    }

    private float chargeScoreExcellent_ ;
    /**
     * <code>float charge_score_excellent = 21;</code>
     * @return The chargeScoreExcellent.
     */
    @java.lang.Override
    public float getChargeScoreExcellent() {
      return chargeScoreExcellent_;
    }
    /**
     * <code>float charge_score_excellent = 21;</code>
     * @param value The chargeScoreExcellent to set.
     * @return This builder for chaining.
     */
    public Builder setChargeScoreExcellent(float value) {
      
      chargeScoreExcellent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float charge_score_excellent = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearChargeScoreExcellent() {
      
      chargeScoreExcellent_ = 0F;
      onChanged();
      return this;
    }

    private int swapAnimationDurationTurns_ ;
    /**
     * <code>int32 swap_animation_duration_turns = 22;</code>
     * @return The swapAnimationDurationTurns.
     */
    @java.lang.Override
    public int getSwapAnimationDurationTurns() {
      return swapAnimationDurationTurns_;
    }
    /**
     * <code>int32 swap_animation_duration_turns = 22;</code>
     * @param value The swapAnimationDurationTurns to set.
     * @return This builder for chaining.
     */
    public Builder setSwapAnimationDurationTurns(int value) {
      
      swapAnimationDurationTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 swap_animation_duration_turns = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearSwapAnimationDurationTurns() {
      
      swapAnimationDurationTurns_ = 0;
      onChanged();
      return this;
    }

    private int superEffectiveFlyoutDurationTurns_ ;
    /**
     * <code>int32 super_effective_flyout_duration_turns = 23;</code>
     * @return The superEffectiveFlyoutDurationTurns.
     */
    @java.lang.Override
    public int getSuperEffectiveFlyoutDurationTurns() {
      return superEffectiveFlyoutDurationTurns_;
    }
    /**
     * <code>int32 super_effective_flyout_duration_turns = 23;</code>
     * @param value The superEffectiveFlyoutDurationTurns to set.
     * @return This builder for chaining.
     */
    public Builder setSuperEffectiveFlyoutDurationTurns(int value) {
      
      superEffectiveFlyoutDurationTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 super_effective_flyout_duration_turns = 23;</code>
     * @return This builder for chaining.
     */
    public Builder clearSuperEffectiveFlyoutDurationTurns() {
      
      superEffectiveFlyoutDurationTurns_ = 0;
      onChanged();
      return this;
    }

    private int notVeryEffectiveFlyoutDurationTurns_ ;
    /**
     * <code>int32 not_very_effective_flyout_duration_turns = 24;</code>
     * @return The notVeryEffectiveFlyoutDurationTurns.
     */
    @java.lang.Override
    public int getNotVeryEffectiveFlyoutDurationTurns() {
      return notVeryEffectiveFlyoutDurationTurns_;
    }
    /**
     * <code>int32 not_very_effective_flyout_duration_turns = 24;</code>
     * @param value The notVeryEffectiveFlyoutDurationTurns to set.
     * @return This builder for chaining.
     */
    public Builder setNotVeryEffectiveFlyoutDurationTurns(int value) {
      
      notVeryEffectiveFlyoutDurationTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 not_very_effective_flyout_duration_turns = 24;</code>
     * @return This builder for chaining.
     */
    public Builder clearNotVeryEffectiveFlyoutDurationTurns() {
      
      notVeryEffectiveFlyoutDurationTurns_ = 0;
      onChanged();
      return this;
    }

    private int blockedFlyoutDurationTurns_ ;
    /**
     * <code>int32 blocked_flyout_duration_turns = 25;</code>
     * @return The blockedFlyoutDurationTurns.
     */
    @java.lang.Override
    public int getBlockedFlyoutDurationTurns() {
      return blockedFlyoutDurationTurns_;
    }
    /**
     * <code>int32 blocked_flyout_duration_turns = 25;</code>
     * @param value The blockedFlyoutDurationTurns to set.
     * @return This builder for chaining.
     */
    public Builder setBlockedFlyoutDurationTurns(int value) {
      
      blockedFlyoutDurationTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 blocked_flyout_duration_turns = 25;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlockedFlyoutDurationTurns() {
      
      blockedFlyoutDurationTurns_ = 0;
      onChanged();
      return this;
    }

    private int normalEffectiveFlyoutDurationTurns_ ;
    /**
     * <code>int32 normal_effective_flyout_duration_turns = 26;</code>
     * @return The normalEffectiveFlyoutDurationTurns.
     */
    @java.lang.Override
    public int getNormalEffectiveFlyoutDurationTurns() {
      return normalEffectiveFlyoutDurationTurns_;
    }
    /**
     * <code>int32 normal_effective_flyout_duration_turns = 26;</code>
     * @param value The normalEffectiveFlyoutDurationTurns to set.
     * @return This builder for chaining.
     */
    public Builder setNormalEffectiveFlyoutDurationTurns(int value) {
      
      normalEffectiveFlyoutDurationTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 normal_effective_flyout_duration_turns = 26;</code>
     * @return This builder for chaining.
     */
    public Builder clearNormalEffectiveFlyoutDurationTurns() {
      
      normalEffectiveFlyoutDurationTurns_ = 0;
      onChanged();
      return this;
    }

    private int faintAnimationDurationTurns_ ;
    /**
     * <code>int32 faint_animation_duration_turns = 27;</code>
     * @return The faintAnimationDurationTurns.
     */
    @java.lang.Override
    public int getFaintAnimationDurationTurns() {
      return faintAnimationDurationTurns_;
    }
    /**
     * <code>int32 faint_animation_duration_turns = 27;</code>
     * @param value The faintAnimationDurationTurns to set.
     * @return This builder for chaining.
     */
    public Builder setFaintAnimationDurationTurns(int value) {
      
      faintAnimationDurationTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 faint_animation_duration_turns = 27;</code>
     * @return This builder for chaining.
     */
    public Builder clearFaintAnimationDurationTurns() {
      
      faintAnimationDurationTurns_ = 0;
      onChanged();
      return this;
    }

    private int npcSwapDelayTurns_ ;
    /**
     * <code>int32 npc_swap_delay_turns = 28;</code>
     * @return The npcSwapDelayTurns.
     */
    @java.lang.Override
    public int getNpcSwapDelayTurns() {
      return npcSwapDelayTurns_;
    }
    /**
     * <code>int32 npc_swap_delay_turns = 28;</code>
     * @param value The npcSwapDelayTurns to set.
     * @return This builder for chaining.
     */
    public Builder setNpcSwapDelayTurns(int value) {
      
      npcSwapDelayTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 npc_swap_delay_turns = 28;</code>
     * @return This builder for chaining.
     */
    public Builder clearNpcSwapDelayTurns() {
      
      npcSwapDelayTurns_ = 0;
      onChanged();
      return this;
    }

    private int npcChargedAttackDelayTurns_ ;
    /**
     * <code>int32 npc_charged_attack_delay_turns = 29;</code>
     * @return The npcChargedAttackDelayTurns.
     */
    @java.lang.Override
    public int getNpcChargedAttackDelayTurns() {
      return npcChargedAttackDelayTurns_;
    }
    /**
     * <code>int32 npc_charged_attack_delay_turns = 29;</code>
     * @param value The npcChargedAttackDelayTurns to set.
     * @return This builder for chaining.
     */
    public Builder setNpcChargedAttackDelayTurns(int value) {
      
      npcChargedAttackDelayTurns_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 npc_charged_attack_delay_turns = 29;</code>
     * @return This builder for chaining.
     */
    public Builder clearNpcChargedAttackDelayTurns() {
      
      npcChargedAttackDelayTurns_ = 0;
      onChanged();
      return this;
    }

    private float shadowPokemonAttackBonusMultiplier_ ;
    /**
     * <code>float shadow_pokemon_attack_bonus_multiplier = 30;</code>
     * @return The shadowPokemonAttackBonusMultiplier.
     */
    @java.lang.Override
    public float getShadowPokemonAttackBonusMultiplier() {
      return shadowPokemonAttackBonusMultiplier_;
    }
    /**
     * <code>float shadow_pokemon_attack_bonus_multiplier = 30;</code>
     * @param value The shadowPokemonAttackBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setShadowPokemonAttackBonusMultiplier(float value) {
      
      shadowPokemonAttackBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float shadow_pokemon_attack_bonus_multiplier = 30;</code>
     * @return This builder for chaining.
     */
    public Builder clearShadowPokemonAttackBonusMultiplier() {
      
      shadowPokemonAttackBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float shadowPokemonDefenseBonusMultiplier_ ;
    /**
     * <code>float shadow_pokemon_defense_bonus_multiplier = 31;</code>
     * @return The shadowPokemonDefenseBonusMultiplier.
     */
    @java.lang.Override
    public float getShadowPokemonDefenseBonusMultiplier() {
      return shadowPokemonDefenseBonusMultiplier_;
    }
    /**
     * <code>float shadow_pokemon_defense_bonus_multiplier = 31;</code>
     * @param value The shadowPokemonDefenseBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setShadowPokemonDefenseBonusMultiplier(float value) {
      
      shadowPokemonDefenseBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float shadow_pokemon_defense_bonus_multiplier = 31;</code>
     * @return This builder for chaining.
     */
    public Builder clearShadowPokemonDefenseBonusMultiplier() {
      
      shadowPokemonDefenseBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float purifiedPokemonAttackMultiplierVsShadow_ ;
    /**
     * <code>float purified_pokemon_attack_multiplier_vs_shadow = 32;</code>
     * @return The purifiedPokemonAttackMultiplierVsShadow.
     */
    @java.lang.Override
    public float getPurifiedPokemonAttackMultiplierVsShadow() {
      return purifiedPokemonAttackMultiplierVsShadow_;
    }
    /**
     * <code>float purified_pokemon_attack_multiplier_vs_shadow = 32;</code>
     * @param value The purifiedPokemonAttackMultiplierVsShadow to set.
     * @return This builder for chaining.
     */
    public Builder setPurifiedPokemonAttackMultiplierVsShadow(float value) {
      
      purifiedPokemonAttackMultiplierVsShadow_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float purified_pokemon_attack_multiplier_vs_shadow = 32;</code>
     * @return This builder for chaining.
     */
    public Builder clearPurifiedPokemonAttackMultiplierVsShadow() {
      
      purifiedPokemonAttackMultiplierVsShadow_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:POGOProtos.Settings.Master.CombatSettings)
  }

  // @@protoc_insertion_point(class_scope:POGOProtos.Settings.Master.CombatSettings)
  private static final POGOProtos.Settings.Master.CombatSettings DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new POGOProtos.Settings.Master.CombatSettings();
  }

  public static POGOProtos.Settings.Master.CombatSettings getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CombatSettings>
      PARSER = new com.google.protobuf.AbstractParser<CombatSettings>() {
    @java.lang.Override
    public CombatSettings parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CombatSettings(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CombatSettings> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CombatSettings> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public POGOProtos.Settings.Master.CombatSettings getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

