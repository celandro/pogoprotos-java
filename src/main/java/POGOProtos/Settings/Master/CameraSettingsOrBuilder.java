// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/CameraSettings.proto

package POGOProtos.Settings.Master;

public interface CameraSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Settings.Master.CameraSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string next_camera = 1;</code>
   * @return The nextCamera.
   */
  java.lang.String getNextCamera();
  /**
   * <code>string next_camera = 1;</code>
   * @return The bytes for nextCamera.
   */
  com.google.protobuf.ByteString
      getNextCameraBytes();

  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @return A list containing the interpolation.
   */
  java.util.List<POGOProtos.Enums.CameraInterpolation> getInterpolationList();
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @return The count of interpolation.
   */
  int getInterpolationCount();
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @param index The index of the element to return.
   * @return The interpolation at the given index.
   */
  POGOProtos.Enums.CameraInterpolation getInterpolation(int index);
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @return A list containing the enum numeric values on the wire for interpolation.
   */
  java.util.List<java.lang.Integer>
  getInterpolationValueList();
  /**
   * <code>repeated .POGOProtos.Enums.CameraInterpolation interpolation = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of interpolation at the given index.
   */
  int getInterpolationValue(int index);

  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @return A list containing the targetType.
   */
  java.util.List<POGOProtos.Enums.CameraTarget> getTargetTypeList();
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @return The count of targetType.
   */
  int getTargetTypeCount();
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @param index The index of the element to return.
   * @return The targetType at the given index.
   */
  POGOProtos.Enums.CameraTarget getTargetType(int index);
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @return A list containing the enum numeric values on the wire for targetType.
   */
  java.util.List<java.lang.Integer>
  getTargetTypeValueList();
  /**
   * <code>repeated .POGOProtos.Enums.CameraTarget target_type = 3;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of targetType at the given index.
   */
  int getTargetTypeValue(int index);

  /**
   * <code>repeated float ease_in_speed = 4;</code>
   * @return A list containing the easeInSpeed.
   */
  java.util.List<java.lang.Float> getEaseInSpeedList();
  /**
   * <code>repeated float ease_in_speed = 4;</code>
   * @return The count of easeInSpeed.
   */
  int getEaseInSpeedCount();
  /**
   * <code>repeated float ease_in_speed = 4;</code>
   * @param index The index of the element to return.
   * @return The easeInSpeed at the given index.
   */
  float getEaseInSpeed(int index);

  /**
   * <code>repeated float ease_out_speed = 5;</code>
   * @return A list containing the easeOutSpeed.
   */
  java.util.List<java.lang.Float> getEaseOutSpeedList();
  /**
   * <code>repeated float ease_out_speed = 5;</code>
   * @return The count of easeOutSpeed.
   */
  int getEaseOutSpeedCount();
  /**
   * <code>repeated float ease_out_speed = 5;</code>
   * @param index The index of the element to return.
   * @return The easeOutSpeed at the given index.
   */
  float getEaseOutSpeed(int index);

  /**
   * <code>repeated float duration_seconds = 6;</code>
   * @return A list containing the durationSeconds.
   */
  java.util.List<java.lang.Float> getDurationSecondsList();
  /**
   * <code>repeated float duration_seconds = 6;</code>
   * @return The count of durationSeconds.
   */
  int getDurationSecondsCount();
  /**
   * <code>repeated float duration_seconds = 6;</code>
   * @param index The index of the element to return.
   * @return The durationSeconds at the given index.
   */
  float getDurationSeconds(int index);

  /**
   * <code>repeated float wait_seconds = 7;</code>
   * @return A list containing the waitSeconds.
   */
  java.util.List<java.lang.Float> getWaitSecondsList();
  /**
   * <code>repeated float wait_seconds = 7;</code>
   * @return The count of waitSeconds.
   */
  int getWaitSecondsCount();
  /**
   * <code>repeated float wait_seconds = 7;</code>
   * @param index The index of the element to return.
   * @return The waitSeconds at the given index.
   */
  float getWaitSeconds(int index);

  /**
   * <code>repeated float transition_seconds = 8;</code>
   * @return A list containing the transitionSeconds.
   */
  java.util.List<java.lang.Float> getTransitionSecondsList();
  /**
   * <code>repeated float transition_seconds = 8;</code>
   * @return The count of transitionSeconds.
   */
  int getTransitionSecondsCount();
  /**
   * <code>repeated float transition_seconds = 8;</code>
   * @param index The index of the element to return.
   * @return The transitionSeconds at the given index.
   */
  float getTransitionSeconds(int index);

  /**
   * <code>repeated float angle_degree = 9;</code>
   * @return A list containing the angleDegree.
   */
  java.util.List<java.lang.Float> getAngleDegreeList();
  /**
   * <code>repeated float angle_degree = 9;</code>
   * @return The count of angleDegree.
   */
  int getAngleDegreeCount();
  /**
   * <code>repeated float angle_degree = 9;</code>
   * @param index The index of the element to return.
   * @return The angleDegree at the given index.
   */
  float getAngleDegree(int index);

  /**
   * <code>repeated float angle_offset_degree = 10;</code>
   * @return A list containing the angleOffsetDegree.
   */
  java.util.List<java.lang.Float> getAngleOffsetDegreeList();
  /**
   * <code>repeated float angle_offset_degree = 10;</code>
   * @return The count of angleOffsetDegree.
   */
  int getAngleOffsetDegreeCount();
  /**
   * <code>repeated float angle_offset_degree = 10;</code>
   * @param index The index of the element to return.
   * @return The angleOffsetDegree at the given index.
   */
  float getAngleOffsetDegree(int index);

  /**
   * <code>repeated float pitch_degree = 11;</code>
   * @return A list containing the pitchDegree.
   */
  java.util.List<java.lang.Float> getPitchDegreeList();
  /**
   * <code>repeated float pitch_degree = 11;</code>
   * @return The count of pitchDegree.
   */
  int getPitchDegreeCount();
  /**
   * <code>repeated float pitch_degree = 11;</code>
   * @param index The index of the element to return.
   * @return The pitchDegree at the given index.
   */
  float getPitchDegree(int index);

  /**
   * <code>repeated float pitch_offset_degree = 12;</code>
   * @return A list containing the pitchOffsetDegree.
   */
  java.util.List<java.lang.Float> getPitchOffsetDegreeList();
  /**
   * <code>repeated float pitch_offset_degree = 12;</code>
   * @return The count of pitchOffsetDegree.
   */
  int getPitchOffsetDegreeCount();
  /**
   * <code>repeated float pitch_offset_degree = 12;</code>
   * @param index The index of the element to return.
   * @return The pitchOffsetDegree at the given index.
   */
  float getPitchOffsetDegree(int index);

  /**
   * <code>repeated float roll_degree = 13;</code>
   * @return A list containing the rollDegree.
   */
  java.util.List<java.lang.Float> getRollDegreeList();
  /**
   * <code>repeated float roll_degree = 13;</code>
   * @return The count of rollDegree.
   */
  int getRollDegreeCount();
  /**
   * <code>repeated float roll_degree = 13;</code>
   * @param index The index of the element to return.
   * @return The rollDegree at the given index.
   */
  float getRollDegree(int index);

  /**
   * <code>repeated float distance_meters = 14;</code>
   * @return A list containing the distanceMeters.
   */
  java.util.List<java.lang.Float> getDistanceMetersList();
  /**
   * <code>repeated float distance_meters = 14;</code>
   * @return The count of distanceMeters.
   */
  int getDistanceMetersCount();
  /**
   * <code>repeated float distance_meters = 14;</code>
   * @param index The index of the element to return.
   * @return The distanceMeters at the given index.
   */
  float getDistanceMeters(int index);

  /**
   * <code>repeated float height_percent = 15;</code>
   * @return A list containing the heightPercent.
   */
  java.util.List<java.lang.Float> getHeightPercentList();
  /**
   * <code>repeated float height_percent = 15;</code>
   * @return The count of heightPercent.
   */
  int getHeightPercentCount();
  /**
   * <code>repeated float height_percent = 15;</code>
   * @param index The index of the element to return.
   * @return The heightPercent at the given index.
   */
  float getHeightPercent(int index);

  /**
   * <code>repeated float vert_ctr_ratio = 16;</code>
   * @return A list containing the vertCtrRatio.
   */
  java.util.List<java.lang.Float> getVertCtrRatioList();
  /**
   * <code>repeated float vert_ctr_ratio = 16;</code>
   * @return The count of vertCtrRatio.
   */
  int getVertCtrRatioCount();
  /**
   * <code>repeated float vert_ctr_ratio = 16;</code>
   * @param index The index of the element to return.
   * @return The vertCtrRatio at the given index.
   */
  float getVertCtrRatio(int index);
}
