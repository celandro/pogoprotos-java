// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Settings/Master/BadgeSettings.proto

package POGOProtos.Settings.Master;

public interface BadgeSettingsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Settings.Master.BadgeSettings)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.POGOProtos.Enums.BadgeType badge_type = 1;</code>
   * @return The enum numeric value on the wire for badgeType.
   */
  int getBadgeTypeValue();
  /**
   * <code>.POGOProtos.Enums.BadgeType badge_type = 1;</code>
   * @return The badgeType.
   */
  POGOProtos.Enums.BadgeType getBadgeType();

  /**
   * <code>int32 badge_rank = 2;</code>
   * @return The badgeRank.
   */
  int getBadgeRank();

  /**
   * <code>repeated int32 targets = 3;</code>
   * @return A list containing the targets.
   */
  java.util.List<java.lang.Integer> getTargetsList();
  /**
   * <code>repeated int32 targets = 3;</code>
   * @return The count of targets.
   */
  int getTargetsCount();
  /**
   * <code>repeated int32 targets = 3;</code>
   * @param index The index of the element to return.
   * @return The targets at the given index.
   */
  int getTargets(int index);

  /**
   * <code>repeated .POGOProtos.Data.Badge.BadgeCaptureReward capture_reward = 4;</code>
   */
  java.util.List<POGOProtos.Data.Badge.BadgeCaptureReward> 
      getCaptureRewardList();
  /**
   * <code>repeated .POGOProtos.Data.Badge.BadgeCaptureReward capture_reward = 4;</code>
   */
  POGOProtos.Data.Badge.BadgeCaptureReward getCaptureReward(int index);
  /**
   * <code>repeated .POGOProtos.Data.Badge.BadgeCaptureReward capture_reward = 4;</code>
   */
  int getCaptureRewardCount();
  /**
   * <code>repeated .POGOProtos.Data.Badge.BadgeCaptureReward capture_reward = 4;</code>
   */
  java.util.List<? extends POGOProtos.Data.Badge.BadgeCaptureRewardOrBuilder> 
      getCaptureRewardOrBuilderList();
  /**
   * <code>repeated .POGOProtos.Data.Badge.BadgeCaptureReward capture_reward = 4;</code>
   */
  POGOProtos.Data.Badge.BadgeCaptureRewardOrBuilder getCaptureRewardOrBuilder(
      int index);

  /**
   * <code>bool event_badge = 5;</code>
   * @return The eventBadge.
   */
  boolean getEventBadge();

  /**
   * <code>.POGOProtos.Settings.Master.EventBadgeSettings event_badge_settings = 6;</code>
   * @return Whether the eventBadgeSettings field is set.
   */
  boolean hasEventBadgeSettings();
  /**
   * <code>.POGOProtos.Settings.Master.EventBadgeSettings event_badge_settings = 6;</code>
   * @return The eventBadgeSettings.
   */
  POGOProtos.Settings.Master.EventBadgeSettings getEventBadgeSettings();
  /**
   * <code>.POGOProtos.Settings.Master.EventBadgeSettings event_badge_settings = 6;</code>
   */
  POGOProtos.Settings.Master.EventBadgeSettingsOrBuilder getEventBadgeSettingsOrBuilder();

  /**
   * <code>string combat_league_template_id = 7;</code>
   * @return The combatLeagueTemplateId.
   */
  java.lang.String getCombatLeagueTemplateId();
  /**
   * <code>string combat_league_template_id = 7;</code>
   * @return The bytes for combatLeagueTemplateId.
   */
  com.google.protobuf.ByteString
      getCombatLeagueTemplateIdBytes();
}
