// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Capture/CaptureAward.proto

package POGOProtos.Data.Capture;

public interface CaptureAwardOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Data.Capture.CaptureAward)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>repeated .POGOProtos.Enums.ActivityType activity_type = 1 [packed = true];</code>
   * @return A list containing the activityType.
   */
  java.util.List<POGOProtos.Enums.ActivityType> getActivityTypeList();
  /**
   * <code>repeated .POGOProtos.Enums.ActivityType activity_type = 1 [packed = true];</code>
   * @return The count of activityType.
   */
  int getActivityTypeCount();
  /**
   * <code>repeated .POGOProtos.Enums.ActivityType activity_type = 1 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The activityType at the given index.
   */
  POGOProtos.Enums.ActivityType getActivityType(int index);
  /**
   * <code>repeated .POGOProtos.Enums.ActivityType activity_type = 1 [packed = true];</code>
   * @return A list containing the enum numeric values on the wire for activityType.
   */
  java.util.List<java.lang.Integer>
  getActivityTypeValueList();
  /**
   * <code>repeated .POGOProtos.Enums.ActivityType activity_type = 1 [packed = true];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of activityType at the given index.
   */
  int getActivityTypeValue(int index);

  /**
   * <code>repeated int32 xp = 2 [packed = true];</code>
   * @return A list containing the xp.
   */
  java.util.List<java.lang.Integer> getXpList();
  /**
   * <code>repeated int32 xp = 2 [packed = true];</code>
   * @return The count of xp.
   */
  int getXpCount();
  /**
   * <code>repeated int32 xp = 2 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The xp at the given index.
   */
  int getXp(int index);

  /**
   * <code>repeated int32 candy = 3 [packed = true];</code>
   * @return A list containing the candy.
   */
  java.util.List<java.lang.Integer> getCandyList();
  /**
   * <code>repeated int32 candy = 3 [packed = true];</code>
   * @return The count of candy.
   */
  int getCandyCount();
  /**
   * <code>repeated int32 candy = 3 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The candy at the given index.
   */
  int getCandy(int index);

  /**
   * <code>repeated int32 stardust = 4 [packed = true];</code>
   * @return A list containing the stardust.
   */
  java.util.List<java.lang.Integer> getStardustList();
  /**
   * <code>repeated int32 stardust = 4 [packed = true];</code>
   * @return The count of stardust.
   */
  int getStardustCount();
  /**
   * <code>repeated int32 stardust = 4 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The stardust at the given index.
   */
  int getStardust(int index);
}
