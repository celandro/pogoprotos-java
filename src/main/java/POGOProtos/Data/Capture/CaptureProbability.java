// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Data/Capture/CaptureProbability.proto

package POGOProtos.Data.Capture;

/**
 * Protobuf type {@code POGOProtos.Data.Capture.CaptureProbability}
 */
public final class CaptureProbability extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:POGOProtos.Data.Capture.CaptureProbability)
    CaptureProbabilityOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CaptureProbability.newBuilder() to construct.
  private CaptureProbability(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CaptureProbability() {
    pokeballType_ = java.util.Collections.emptyList();
    captureProbability_ = emptyFloatList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CaptureProbability();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CaptureProbability(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              pokeballType_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            pokeballType_.add(rawValue);
            break;
          }
          case 10: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                pokeballType_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              pokeballType_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 21: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              captureProbability_ = newFloatList();
              mutable_bitField0_ |= 0x00000002;
            }
            captureProbability_.addFloat(input.readFloat());
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
              captureProbability_ = newFloatList();
              mutable_bitField0_ |= 0x00000002;
            }
            while (input.getBytesUntilLimit() > 0) {
              captureProbability_.addFloat(input.readFloat());
            }
            input.popLimit(limit);
            break;
          }
          case 97: {

            reticleDifficultyScale_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        pokeballType_ = java.util.Collections.unmodifiableList(pokeballType_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        captureProbability_.makeImmutable(); // C
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return POGOProtos.Data.Capture.CaptureProbabilityOuterClass.internal_static_POGOProtos_Data_Capture_CaptureProbability_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return POGOProtos.Data.Capture.CaptureProbabilityOuterClass.internal_static_POGOProtos_Data_Capture_CaptureProbability_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            POGOProtos.Data.Capture.CaptureProbability.class, POGOProtos.Data.Capture.CaptureProbability.Builder.class);
  }

  public static final int POKEBALL_TYPE_FIELD_NUMBER = 1;
  private java.util.List<java.lang.Integer> pokeballType_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, POGOProtos.Inventory.Item.ItemId> pokeballType_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, POGOProtos.Inventory.Item.ItemId>() {
            public POGOProtos.Inventory.Item.ItemId convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              POGOProtos.Inventory.Item.ItemId result = POGOProtos.Inventory.Item.ItemId.valueOf(from);
              return result == null ? POGOProtos.Inventory.Item.ItemId.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
   * @return A list containing the pokeballType.
   */
  @java.lang.Override
  public java.util.List<POGOProtos.Inventory.Item.ItemId> getPokeballTypeList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, POGOProtos.Inventory.Item.ItemId>(pokeballType_, pokeballType_converter_);
  }
  /**
   * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
   * @return The count of pokeballType.
   */
  @java.lang.Override
  public int getPokeballTypeCount() {
    return pokeballType_.size();
  }
  /**
   * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The pokeballType at the given index.
   */
  @java.lang.Override
  public POGOProtos.Inventory.Item.ItemId getPokeballType(int index) {
    return pokeballType_converter_.convert(pokeballType_.get(index));
  }
  /**
   * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
   * @return A list containing the enum numeric values on the wire for pokeballType.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getPokeballTypeValueList() {
    return pokeballType_;
  }
  /**
   * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of pokeballType at the given index.
   */
  @java.lang.Override
  public int getPokeballTypeValue(int index) {
    return pokeballType_.get(index);
  }
  private int pokeballTypeMemoizedSerializedSize;

  public static final int CAPTURE_PROBABILITY_FIELD_NUMBER = 2;
  private com.google.protobuf.Internal.FloatList captureProbability_;
  /**
   * <code>repeated float capture_probability = 2 [packed = true];</code>
   * @return A list containing the captureProbability.
   */
  @java.lang.Override
  public java.util.List<java.lang.Float>
      getCaptureProbabilityList() {
    return captureProbability_;
  }
  /**
   * <code>repeated float capture_probability = 2 [packed = true];</code>
   * @return The count of captureProbability.
   */
  public int getCaptureProbabilityCount() {
    return captureProbability_.size();
  }
  /**
   * <code>repeated float capture_probability = 2 [packed = true];</code>
   * @param index The index of the element to return.
   * @return The captureProbability at the given index.
   */
  public float getCaptureProbability(int index) {
    return captureProbability_.getFloat(index);
  }
  private int captureProbabilityMemoizedSerializedSize = -1;

  public static final int RETICLE_DIFFICULTY_SCALE_FIELD_NUMBER = 12;
  private double reticleDifficultyScale_;
  /**
   * <code>double reticle_difficulty_scale = 12;</code>
   * @return The reticleDifficultyScale.
   */
  @java.lang.Override
  public double getReticleDifficultyScale() {
    return reticleDifficultyScale_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (getPokeballTypeList().size() > 0) {
      output.writeUInt32NoTag(10);
      output.writeUInt32NoTag(pokeballTypeMemoizedSerializedSize);
    }
    for (int i = 0; i < pokeballType_.size(); i++) {
      output.writeEnumNoTag(pokeballType_.get(i));
    }
    if (getCaptureProbabilityList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(captureProbabilityMemoizedSerializedSize);
    }
    for (int i = 0; i < captureProbability_.size(); i++) {
      output.writeFloatNoTag(captureProbability_.getFloat(i));
    }
    if (reticleDifficultyScale_ != 0D) {
      output.writeDouble(12, reticleDifficultyScale_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < pokeballType_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(pokeballType_.get(i));
      }
      size += dataSize;
      if (!getPokeballTypeList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }pokeballTypeMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      dataSize = 4 * getCaptureProbabilityList().size();
      size += dataSize;
      if (!getCaptureProbabilityList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      captureProbabilityMemoizedSerializedSize = dataSize;
    }
    if (reticleDifficultyScale_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, reticleDifficultyScale_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof POGOProtos.Data.Capture.CaptureProbability)) {
      return super.equals(obj);
    }
    POGOProtos.Data.Capture.CaptureProbability other = (POGOProtos.Data.Capture.CaptureProbability) obj;

    if (!pokeballType_.equals(other.pokeballType_)) return false;
    if (!getCaptureProbabilityList()
        .equals(other.getCaptureProbabilityList())) return false;
    if (java.lang.Double.doubleToLongBits(getReticleDifficultyScale())
        != java.lang.Double.doubleToLongBits(
            other.getReticleDifficultyScale())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getPokeballTypeCount() > 0) {
      hash = (37 * hash) + POKEBALL_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + pokeballType_.hashCode();
    }
    if (getCaptureProbabilityCount() > 0) {
      hash = (37 * hash) + CAPTURE_PROBABILITY_FIELD_NUMBER;
      hash = (53 * hash) + getCaptureProbabilityList().hashCode();
    }
    hash = (37 * hash) + RETICLE_DIFFICULTY_SCALE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getReticleDifficultyScale()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Data.Capture.CaptureProbability parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(POGOProtos.Data.Capture.CaptureProbability prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code POGOProtos.Data.Capture.CaptureProbability}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:POGOProtos.Data.Capture.CaptureProbability)
      POGOProtos.Data.Capture.CaptureProbabilityOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Data.Capture.CaptureProbabilityOuterClass.internal_static_POGOProtos_Data_Capture_CaptureProbability_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Data.Capture.CaptureProbabilityOuterClass.internal_static_POGOProtos_Data_Capture_CaptureProbability_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Data.Capture.CaptureProbability.class, POGOProtos.Data.Capture.CaptureProbability.Builder.class);
    }

    // Construct using POGOProtos.Data.Capture.CaptureProbability.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      pokeballType_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      captureProbability_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000002);
      reticleDifficultyScale_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return POGOProtos.Data.Capture.CaptureProbabilityOuterClass.internal_static_POGOProtos_Data_Capture_CaptureProbability_descriptor;
    }

    @java.lang.Override
    public POGOProtos.Data.Capture.CaptureProbability getDefaultInstanceForType() {
      return POGOProtos.Data.Capture.CaptureProbability.getDefaultInstance();
    }

    @java.lang.Override
    public POGOProtos.Data.Capture.CaptureProbability build() {
      POGOProtos.Data.Capture.CaptureProbability result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public POGOProtos.Data.Capture.CaptureProbability buildPartial() {
      POGOProtos.Data.Capture.CaptureProbability result = new POGOProtos.Data.Capture.CaptureProbability(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) != 0)) {
        pokeballType_ = java.util.Collections.unmodifiableList(pokeballType_);
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.pokeballType_ = pokeballType_;
      if (((bitField0_ & 0x00000002) != 0)) {
        captureProbability_.makeImmutable();
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.captureProbability_ = captureProbability_;
      result.reticleDifficultyScale_ = reticleDifficultyScale_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof POGOProtos.Data.Capture.CaptureProbability) {
        return mergeFrom((POGOProtos.Data.Capture.CaptureProbability)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(POGOProtos.Data.Capture.CaptureProbability other) {
      if (other == POGOProtos.Data.Capture.CaptureProbability.getDefaultInstance()) return this;
      if (!other.pokeballType_.isEmpty()) {
        if (pokeballType_.isEmpty()) {
          pokeballType_ = other.pokeballType_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensurePokeballTypeIsMutable();
          pokeballType_.addAll(other.pokeballType_);
        }
        onChanged();
      }
      if (!other.captureProbability_.isEmpty()) {
        if (captureProbability_.isEmpty()) {
          captureProbability_ = other.captureProbability_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureCaptureProbabilityIsMutable();
          captureProbability_.addAll(other.captureProbability_);
        }
        onChanged();
      }
      if (other.getReticleDifficultyScale() != 0D) {
        setReticleDifficultyScale(other.getReticleDifficultyScale());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      POGOProtos.Data.Capture.CaptureProbability parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (POGOProtos.Data.Capture.CaptureProbability) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<java.lang.Integer> pokeballType_ =
      java.util.Collections.emptyList();
    private void ensurePokeballTypeIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        pokeballType_ = new java.util.ArrayList<java.lang.Integer>(pokeballType_);
        bitField0_ |= 0x00000001;
      }
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @return A list containing the pokeballType.
     */
    public java.util.List<POGOProtos.Inventory.Item.ItemId> getPokeballTypeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, POGOProtos.Inventory.Item.ItemId>(pokeballType_, pokeballType_converter_);
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @return The count of pokeballType.
     */
    public int getPokeballTypeCount() {
      return pokeballType_.size();
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The pokeballType at the given index.
     */
    public POGOProtos.Inventory.Item.ItemId getPokeballType(int index) {
      return pokeballType_converter_.convert(pokeballType_.get(index));
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The pokeballType to set.
     * @return This builder for chaining.
     */
    public Builder setPokeballType(
        int index, POGOProtos.Inventory.Item.ItemId value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePokeballTypeIsMutable();
      pokeballType_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param value The pokeballType to add.
     * @return This builder for chaining.
     */
    public Builder addPokeballType(POGOProtos.Inventory.Item.ItemId value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePokeballTypeIsMutable();
      pokeballType_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param values The pokeballType to add.
     * @return This builder for chaining.
     */
    public Builder addAllPokeballType(
        java.lang.Iterable<? extends POGOProtos.Inventory.Item.ItemId> values) {
      ensurePokeballTypeIsMutable();
      for (POGOProtos.Inventory.Item.ItemId value : values) {
        pokeballType_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @return This builder for chaining.
     */
    public Builder clearPokeballType() {
      pokeballType_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @return A list containing the enum numeric values on the wire for pokeballType.
     */
    public java.util.List<java.lang.Integer>
    getPokeballTypeValueList() {
      return java.util.Collections.unmodifiableList(pokeballType_);
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of pokeballType at the given index.
     */
    public int getPokeballTypeValue(int index) {
      return pokeballType_.get(index);
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of pokeballType at the given index.
     * @return This builder for chaining.
     */
    public Builder setPokeballTypeValue(
        int index, int value) {
      ensurePokeballTypeIsMutable();
      pokeballType_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param value The enum numeric value on the wire for pokeballType to add.
     * @return This builder for chaining.
     */
    public Builder addPokeballTypeValue(int value) {
      ensurePokeballTypeIsMutable();
      pokeballType_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .POGOProtos.Inventory.Item.ItemId pokeball_type = 1 [packed = true];</code>
     * @param values The enum numeric values on the wire for pokeballType to add.
     * @return This builder for chaining.
     */
    public Builder addAllPokeballTypeValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensurePokeballTypeIsMutable();
      for (int value : values) {
        pokeballType_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.Internal.FloatList captureProbability_ = emptyFloatList();
    private void ensureCaptureProbabilityIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        captureProbability_ = mutableCopy(captureProbability_);
        bitField0_ |= 0x00000002;
       }
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     * @return A list containing the captureProbability.
     */
    public java.util.List<java.lang.Float>
        getCaptureProbabilityList() {
      return ((bitField0_ & 0x00000002) != 0) ?
               java.util.Collections.unmodifiableList(captureProbability_) : captureProbability_;
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     * @return The count of captureProbability.
     */
    public int getCaptureProbabilityCount() {
      return captureProbability_.size();
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The captureProbability at the given index.
     */
    public float getCaptureProbability(int index) {
      return captureProbability_.getFloat(index);
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The captureProbability to set.
     * @return This builder for chaining.
     */
    public Builder setCaptureProbability(
        int index, float value) {
      ensureCaptureProbabilityIsMutable();
      captureProbability_.setFloat(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     * @param value The captureProbability to add.
     * @return This builder for chaining.
     */
    public Builder addCaptureProbability(float value) {
      ensureCaptureProbabilityIsMutable();
      captureProbability_.addFloat(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     * @param values The captureProbability to add.
     * @return This builder for chaining.
     */
    public Builder addAllCaptureProbability(
        java.lang.Iterable<? extends java.lang.Float> values) {
      ensureCaptureProbabilityIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, captureProbability_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated float capture_probability = 2 [packed = true];</code>
     * @return This builder for chaining.
     */
    public Builder clearCaptureProbability() {
      captureProbability_ = emptyFloatList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }

    private double reticleDifficultyScale_ ;
    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     * @return The reticleDifficultyScale.
     */
    @java.lang.Override
    public double getReticleDifficultyScale() {
      return reticleDifficultyScale_;
    }
    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     * @param value The reticleDifficultyScale to set.
     * @return This builder for chaining.
     */
    public Builder setReticleDifficultyScale(double value) {
      
      reticleDifficultyScale_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double reticle_difficulty_scale = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearReticleDifficultyScale() {
      
      reticleDifficultyScale_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:POGOProtos.Data.Capture.CaptureProbability)
  }

  // @@protoc_insertion_point(class_scope:POGOProtos.Data.Capture.CaptureProbability)
  private static final POGOProtos.Data.Capture.CaptureProbability DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new POGOProtos.Data.Capture.CaptureProbability();
  }

  public static POGOProtos.Data.Capture.CaptureProbability getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CaptureProbability>
      PARSER = new com.google.protobuf.AbstractParser<CaptureProbability>() {
    @java.lang.Override
    public CaptureProbability parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CaptureProbability(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CaptureProbability> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CaptureProbability> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public POGOProtos.Data.Capture.CaptureProbability getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

