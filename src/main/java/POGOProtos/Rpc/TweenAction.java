// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Rpc.proto

package POGOProtos.Rpc;

/**
 * <pre>
 * ref: TweenAction
 * </pre>
 *
 * Protobuf enum {@code POGOProtos.Rpc.TweenAction}
 */
public enum TweenAction
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>TWEENACTION_MOVE_X = 0;</code>
   */
  TWEENACTION_MOVE_X(0),
  /**
   * <code>TWEENACTION_MOVE_Y = 1;</code>
   */
  TWEENACTION_MOVE_Y(1),
  /**
   * <code>TWEENACTION_MOVE_Z = 2;</code>
   */
  TWEENACTION_MOVE_Z(2),
  /**
   * <code>TWEENACTION_MOVE_LOCAL_X = 3;</code>
   */
  TWEENACTION_MOVE_LOCAL_X(3),
  /**
   * <code>TWEENACTION_MOVE_LOCAL_Y = 4;</code>
   */
  TWEENACTION_MOVE_LOCAL_Y(4),
  /**
   * <code>TWEENACTION_MOVE_LOCAL_Z = 5;</code>
   */
  TWEENACTION_MOVE_LOCAL_Z(5),
  /**
   * <code>TWEENACTION_MOVE_CURVED = 6;</code>
   */
  TWEENACTION_MOVE_CURVED(6),
  /**
   * <code>TWEENACTION_MOVE_CURVED_LOCAL = 7;</code>
   */
  TWEENACTION_MOVE_CURVED_LOCAL(7),
  /**
   * <code>TWEENACTION_MOVE_SPLINE = 8;</code>
   */
  TWEENACTION_MOVE_SPLINE(8),
  /**
   * <code>TWEENACTION_MOVE_SPLINE_LOCAL = 9;</code>
   */
  TWEENACTION_MOVE_SPLINE_LOCAL(9),
  /**
   * <code>TWEENACTION_SCALE_X = 10;</code>
   */
  TWEENACTION_SCALE_X(10),
  /**
   * <code>TWEENACTION_SCALE_Y = 11;</code>
   */
  TWEENACTION_SCALE_Y(11),
  /**
   * <code>TWEENACTION_SCALE_Z = 12;</code>
   */
  TWEENACTION_SCALE_Z(12),
  /**
   * <code>TWEENACTION_ROTATE_X = 13;</code>
   */
  TWEENACTION_ROTATE_X(13),
  /**
   * <code>TWEENACTION_ROTATE_Y = 14;</code>
   */
  TWEENACTION_ROTATE_Y(14),
  /**
   * <code>TWEENACTION_ROTATE_Z = 15;</code>
   */
  TWEENACTION_ROTATE_Z(15),
  /**
   * <code>TWEENACTION_ROTATE_AROUND = 16;</code>
   */
  TWEENACTION_ROTATE_AROUND(16),
  /**
   * <code>TWEENACTION_ROTATE_AROUND_LOCAL = 17;</code>
   */
  TWEENACTION_ROTATE_AROUND_LOCAL(17),
  /**
   * <code>TWEENACTION_CANVAS_ROTATEAROUND = 18;</code>
   */
  TWEENACTION_CANVAS_ROTATEAROUND(18),
  /**
   * <code>TWEENACTION_CANVAS_ROTATEAROUND_LOCAL = 19;</code>
   */
  TWEENACTION_CANVAS_ROTATEAROUND_LOCAL(19),
  /**
   * <code>TWEENACTION_CANVAS_PLAYSPRITE = 20;</code>
   */
  TWEENACTION_CANVAS_PLAYSPRITE(20),
  /**
   * <code>TWEENACTION_ALPHA = 21;</code>
   */
  TWEENACTION_ALPHA(21),
  /**
   * <code>TWEENACTION_TEXT_ALPHA = 22;</code>
   */
  TWEENACTION_TEXT_ALPHA(22),
  /**
   * <code>TWEENACTION_CANVAS_ALPHA = 23;</code>
   */
  TWEENACTION_CANVAS_ALPHA(23),
  /**
   * <code>TWEENACTION_ALPHA_VERTEX = 24;</code>
   */
  TWEENACTION_ALPHA_VERTEX(24),
  /**
   * <code>TWEENACTION_COLOR = 25;</code>
   */
  TWEENACTION_COLOR(25),
  /**
   * <code>TWEENACTION_CALLBACK_COLOR = 26;</code>
   */
  TWEENACTION_CALLBACK_COLOR(26),
  /**
   * <code>TWEENACTION_TEXT_COLOR = 27;</code>
   */
  TWEENACTION_TEXT_COLOR(27),
  /**
   * <code>TWEENACTION_CANVAS_COLOR = 28;</code>
   */
  TWEENACTION_CANVAS_COLOR(28),
  /**
   * <code>TWEENACTION_CALLBACK = 29;</code>
   */
  TWEENACTION_CALLBACK(29),
  /**
   * <code>TWEENACTION_MOVE = 30;</code>
   */
  TWEENACTION_MOVE(30),
  /**
   * <code>TWEENACTION_MOVE_LOCAL = 31;</code>
   */
  TWEENACTION_MOVE_LOCAL(31),
  /**
   * <code>TWEENACTION_ROTATE = 32;</code>
   */
  TWEENACTION_ROTATE(32),
  /**
   * <code>TWEENACTION_ROTATE_LOCAL = 33;</code>
   */
  TWEENACTION_ROTATE_LOCAL(33),
  /**
   * <code>TWEENACTION_SCALE = 34;</code>
   */
  TWEENACTION_SCALE(34),
  /**
   * <code>TWEENACTION_VALUE3 = 35;</code>
   */
  TWEENACTION_VALUE3(35),
  /**
   * <code>TWEENACTION_GUI_MOVE = 36;</code>
   */
  TWEENACTION_GUI_MOVE(36),
  /**
   * <code>TWEENACTION_GUI_MOVE_MARGIN = 37;</code>
   */
  TWEENACTION_GUI_MOVE_MARGIN(37),
  /**
   * <code>TWEENACTION_GUI_SCALE = 38;</code>
   */
  TWEENACTION_GUI_SCALE(38),
  /**
   * <code>TWEENACTION_GUI_ALPHA = 39;</code>
   */
  TWEENACTION_GUI_ALPHA(39),
  /**
   * <code>TWEENACTION_GUI_ROTATE = 40;</code>
   */
  TWEENACTION_GUI_ROTATE(40),
  /**
   * <code>TWEENACTION_DELAYED_SOUND = 41;</code>
   */
  TWEENACTION_DELAYED_SOUND(41),
  /**
   * <code>TWEENACTION_CANVAS_MOVE = 42;</code>
   */
  TWEENACTION_CANVAS_MOVE(42),
  /**
   * <code>TWEENACTION_CANVAS_SCALE = 43;</code>
   */
  TWEENACTION_CANVAS_SCALE(43),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>TWEENACTION_MOVE_X = 0;</code>
   */
  public static final int TWEENACTION_MOVE_X_VALUE = 0;
  /**
   * <code>TWEENACTION_MOVE_Y = 1;</code>
   */
  public static final int TWEENACTION_MOVE_Y_VALUE = 1;
  /**
   * <code>TWEENACTION_MOVE_Z = 2;</code>
   */
  public static final int TWEENACTION_MOVE_Z_VALUE = 2;
  /**
   * <code>TWEENACTION_MOVE_LOCAL_X = 3;</code>
   */
  public static final int TWEENACTION_MOVE_LOCAL_X_VALUE = 3;
  /**
   * <code>TWEENACTION_MOVE_LOCAL_Y = 4;</code>
   */
  public static final int TWEENACTION_MOVE_LOCAL_Y_VALUE = 4;
  /**
   * <code>TWEENACTION_MOVE_LOCAL_Z = 5;</code>
   */
  public static final int TWEENACTION_MOVE_LOCAL_Z_VALUE = 5;
  /**
   * <code>TWEENACTION_MOVE_CURVED = 6;</code>
   */
  public static final int TWEENACTION_MOVE_CURVED_VALUE = 6;
  /**
   * <code>TWEENACTION_MOVE_CURVED_LOCAL = 7;</code>
   */
  public static final int TWEENACTION_MOVE_CURVED_LOCAL_VALUE = 7;
  /**
   * <code>TWEENACTION_MOVE_SPLINE = 8;</code>
   */
  public static final int TWEENACTION_MOVE_SPLINE_VALUE = 8;
  /**
   * <code>TWEENACTION_MOVE_SPLINE_LOCAL = 9;</code>
   */
  public static final int TWEENACTION_MOVE_SPLINE_LOCAL_VALUE = 9;
  /**
   * <code>TWEENACTION_SCALE_X = 10;</code>
   */
  public static final int TWEENACTION_SCALE_X_VALUE = 10;
  /**
   * <code>TWEENACTION_SCALE_Y = 11;</code>
   */
  public static final int TWEENACTION_SCALE_Y_VALUE = 11;
  /**
   * <code>TWEENACTION_SCALE_Z = 12;</code>
   */
  public static final int TWEENACTION_SCALE_Z_VALUE = 12;
  /**
   * <code>TWEENACTION_ROTATE_X = 13;</code>
   */
  public static final int TWEENACTION_ROTATE_X_VALUE = 13;
  /**
   * <code>TWEENACTION_ROTATE_Y = 14;</code>
   */
  public static final int TWEENACTION_ROTATE_Y_VALUE = 14;
  /**
   * <code>TWEENACTION_ROTATE_Z = 15;</code>
   */
  public static final int TWEENACTION_ROTATE_Z_VALUE = 15;
  /**
   * <code>TWEENACTION_ROTATE_AROUND = 16;</code>
   */
  public static final int TWEENACTION_ROTATE_AROUND_VALUE = 16;
  /**
   * <code>TWEENACTION_ROTATE_AROUND_LOCAL = 17;</code>
   */
  public static final int TWEENACTION_ROTATE_AROUND_LOCAL_VALUE = 17;
  /**
   * <code>TWEENACTION_CANVAS_ROTATEAROUND = 18;</code>
   */
  public static final int TWEENACTION_CANVAS_ROTATEAROUND_VALUE = 18;
  /**
   * <code>TWEENACTION_CANVAS_ROTATEAROUND_LOCAL = 19;</code>
   */
  public static final int TWEENACTION_CANVAS_ROTATEAROUND_LOCAL_VALUE = 19;
  /**
   * <code>TWEENACTION_CANVAS_PLAYSPRITE = 20;</code>
   */
  public static final int TWEENACTION_CANVAS_PLAYSPRITE_VALUE = 20;
  /**
   * <code>TWEENACTION_ALPHA = 21;</code>
   */
  public static final int TWEENACTION_ALPHA_VALUE = 21;
  /**
   * <code>TWEENACTION_TEXT_ALPHA = 22;</code>
   */
  public static final int TWEENACTION_TEXT_ALPHA_VALUE = 22;
  /**
   * <code>TWEENACTION_CANVAS_ALPHA = 23;</code>
   */
  public static final int TWEENACTION_CANVAS_ALPHA_VALUE = 23;
  /**
   * <code>TWEENACTION_ALPHA_VERTEX = 24;</code>
   */
  public static final int TWEENACTION_ALPHA_VERTEX_VALUE = 24;
  /**
   * <code>TWEENACTION_COLOR = 25;</code>
   */
  public static final int TWEENACTION_COLOR_VALUE = 25;
  /**
   * <code>TWEENACTION_CALLBACK_COLOR = 26;</code>
   */
  public static final int TWEENACTION_CALLBACK_COLOR_VALUE = 26;
  /**
   * <code>TWEENACTION_TEXT_COLOR = 27;</code>
   */
  public static final int TWEENACTION_TEXT_COLOR_VALUE = 27;
  /**
   * <code>TWEENACTION_CANVAS_COLOR = 28;</code>
   */
  public static final int TWEENACTION_CANVAS_COLOR_VALUE = 28;
  /**
   * <code>TWEENACTION_CALLBACK = 29;</code>
   */
  public static final int TWEENACTION_CALLBACK_VALUE = 29;
  /**
   * <code>TWEENACTION_MOVE = 30;</code>
   */
  public static final int TWEENACTION_MOVE_VALUE = 30;
  /**
   * <code>TWEENACTION_MOVE_LOCAL = 31;</code>
   */
  public static final int TWEENACTION_MOVE_LOCAL_VALUE = 31;
  /**
   * <code>TWEENACTION_ROTATE = 32;</code>
   */
  public static final int TWEENACTION_ROTATE_VALUE = 32;
  /**
   * <code>TWEENACTION_ROTATE_LOCAL = 33;</code>
   */
  public static final int TWEENACTION_ROTATE_LOCAL_VALUE = 33;
  /**
   * <code>TWEENACTION_SCALE = 34;</code>
   */
  public static final int TWEENACTION_SCALE_VALUE = 34;
  /**
   * <code>TWEENACTION_VALUE3 = 35;</code>
   */
  public static final int TWEENACTION_VALUE3_VALUE = 35;
  /**
   * <code>TWEENACTION_GUI_MOVE = 36;</code>
   */
  public static final int TWEENACTION_GUI_MOVE_VALUE = 36;
  /**
   * <code>TWEENACTION_GUI_MOVE_MARGIN = 37;</code>
   */
  public static final int TWEENACTION_GUI_MOVE_MARGIN_VALUE = 37;
  /**
   * <code>TWEENACTION_GUI_SCALE = 38;</code>
   */
  public static final int TWEENACTION_GUI_SCALE_VALUE = 38;
  /**
   * <code>TWEENACTION_GUI_ALPHA = 39;</code>
   */
  public static final int TWEENACTION_GUI_ALPHA_VALUE = 39;
  /**
   * <code>TWEENACTION_GUI_ROTATE = 40;</code>
   */
  public static final int TWEENACTION_GUI_ROTATE_VALUE = 40;
  /**
   * <code>TWEENACTION_DELAYED_SOUND = 41;</code>
   */
  public static final int TWEENACTION_DELAYED_SOUND_VALUE = 41;
  /**
   * <code>TWEENACTION_CANVAS_MOVE = 42;</code>
   */
  public static final int TWEENACTION_CANVAS_MOVE_VALUE = 42;
  /**
   * <code>TWEENACTION_CANVAS_SCALE = 43;</code>
   */
  public static final int TWEENACTION_CANVAS_SCALE_VALUE = 43;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static TweenAction valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static TweenAction forNumber(int value) {
    switch (value) {
      case 0: return TWEENACTION_MOVE_X;
      case 1: return TWEENACTION_MOVE_Y;
      case 2: return TWEENACTION_MOVE_Z;
      case 3: return TWEENACTION_MOVE_LOCAL_X;
      case 4: return TWEENACTION_MOVE_LOCAL_Y;
      case 5: return TWEENACTION_MOVE_LOCAL_Z;
      case 6: return TWEENACTION_MOVE_CURVED;
      case 7: return TWEENACTION_MOVE_CURVED_LOCAL;
      case 8: return TWEENACTION_MOVE_SPLINE;
      case 9: return TWEENACTION_MOVE_SPLINE_LOCAL;
      case 10: return TWEENACTION_SCALE_X;
      case 11: return TWEENACTION_SCALE_Y;
      case 12: return TWEENACTION_SCALE_Z;
      case 13: return TWEENACTION_ROTATE_X;
      case 14: return TWEENACTION_ROTATE_Y;
      case 15: return TWEENACTION_ROTATE_Z;
      case 16: return TWEENACTION_ROTATE_AROUND;
      case 17: return TWEENACTION_ROTATE_AROUND_LOCAL;
      case 18: return TWEENACTION_CANVAS_ROTATEAROUND;
      case 19: return TWEENACTION_CANVAS_ROTATEAROUND_LOCAL;
      case 20: return TWEENACTION_CANVAS_PLAYSPRITE;
      case 21: return TWEENACTION_ALPHA;
      case 22: return TWEENACTION_TEXT_ALPHA;
      case 23: return TWEENACTION_CANVAS_ALPHA;
      case 24: return TWEENACTION_ALPHA_VERTEX;
      case 25: return TWEENACTION_COLOR;
      case 26: return TWEENACTION_CALLBACK_COLOR;
      case 27: return TWEENACTION_TEXT_COLOR;
      case 28: return TWEENACTION_CANVAS_COLOR;
      case 29: return TWEENACTION_CALLBACK;
      case 30: return TWEENACTION_MOVE;
      case 31: return TWEENACTION_MOVE_LOCAL;
      case 32: return TWEENACTION_ROTATE;
      case 33: return TWEENACTION_ROTATE_LOCAL;
      case 34: return TWEENACTION_SCALE;
      case 35: return TWEENACTION_VALUE3;
      case 36: return TWEENACTION_GUI_MOVE;
      case 37: return TWEENACTION_GUI_MOVE_MARGIN;
      case 38: return TWEENACTION_GUI_SCALE;
      case 39: return TWEENACTION_GUI_ALPHA;
      case 40: return TWEENACTION_GUI_ROTATE;
      case 41: return TWEENACTION_DELAYED_SOUND;
      case 42: return TWEENACTION_CANVAS_MOVE;
      case 43: return TWEENACTION_CANVAS_SCALE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<TweenAction>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      TweenAction> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<TweenAction>() {
          public TweenAction findValueByNumber(int number) {
            return TweenAction.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return POGOProtos.Rpc.POGOProtosRpc.getDescriptor().getEnumTypes().get(133);
  }

  private static final TweenAction[] VALUES = values();

  public static TweenAction valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private TweenAction(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:POGOProtos.Rpc.TweenAction)
}

