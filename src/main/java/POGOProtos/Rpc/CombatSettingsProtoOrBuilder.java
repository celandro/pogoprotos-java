// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Rpc.proto

package POGOProtos.Rpc;

public interface CombatSettingsProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Rpc.CombatSettingsProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>float round_duration_seconds = 1;</code>
   * @return The roundDurationSeconds.
   */
  float getRoundDurationSeconds();

  /**
   * <code>float turn_duration_seconds = 2;</code>
   * @return The turnDurationSeconds.
   */
  float getTurnDurationSeconds();

  /**
   * <code>float minigame_duration_seconds = 3;</code>
   * @return The minigameDurationSeconds.
   */
  float getMinigameDurationSeconds();

  /**
   * <code>float same_type_attack_bonus_multiplier = 4;</code>
   * @return The sameTypeAttackBonusMultiplier.
   */
  float getSameTypeAttackBonusMultiplier();

  /**
   * <code>float fast_attack_bonus_multiplier = 5;</code>
   * @return The fastAttackBonusMultiplier.
   */
  float getFastAttackBonusMultiplier();

  /**
   * <code>float charge_attack_bonus_multiplier = 6;</code>
   * @return The chargeAttackBonusMultiplier.
   */
  float getChargeAttackBonusMultiplier();

  /**
   * <code>float defense_bonus_multiplier = 7;</code>
   * @return The defenseBonusMultiplier.
   */
  float getDefenseBonusMultiplier();

  /**
   * <code>float minigame_bonus_base_multiplier = 8;</code>
   * @return The minigameBonusBaseMultiplier.
   */
  float getMinigameBonusBaseMultiplier();

  /**
   * <code>float minigame_bonus_variable_multiplier = 9;</code>
   * @return The minigameBonusVariableMultiplier.
   */
  float getMinigameBonusVariableMultiplier();

  /**
   * <code>int32 max_energy = 10;</code>
   * @return The maxEnergy.
   */
  int getMaxEnergy();

  /**
   * <code>float defender_minigame_multiplier = 11;</code>
   * @return The defenderMinigameMultiplier.
   */
  float getDefenderMinigameMultiplier();

  /**
   * <code>float change_pokemon_duration_seconds = 12;</code>
   * @return The changePokemonDurationSeconds.
   */
  float getChangePokemonDurationSeconds();

  /**
   * <code>float minigame_submit_score_duration_seconds = 13;</code>
   * @return The minigameSubmitScoreDurationSeconds.
   */
  float getMinigameSubmitScoreDurationSeconds();

  /**
   * <code>float quick_swap_combat_start_available_seconds = 14;</code>
   * @return The quickSwapCombatStartAvailableSeconds.
   */
  float getQuickSwapCombatStartAvailableSeconds();

  /**
   * <code>float quick_swap_cooldown_duration_seconds = 15;</code>
   * @return The quickSwapCooldownDurationSeconds.
   */
  float getQuickSwapCooldownDurationSeconds();

  /**
   * <code>.POGOProtos.Rpc.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
   * @return Whether the offensiveInputChallengeSettings field is set.
   */
  boolean hasOffensiveInputChallengeSettings();
  /**
   * <code>.POGOProtos.Rpc.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
   * @return The offensiveInputChallengeSettings.
   */
  POGOProtos.Rpc.CombatOffensiveInputChallengeSettings getOffensiveInputChallengeSettings();
  /**
   * <code>.POGOProtos.Rpc.CombatOffensiveInputChallengeSettings offensive_input_challenge_settings = 16;</code>
   */
  POGOProtos.Rpc.CombatOffensiveInputChallengeSettingsOrBuilder getOffensiveInputChallengeSettingsOrBuilder();

  /**
   * <code>.POGOProtos.Rpc.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
   * @return Whether the defensiveInputChallengeSettings field is set.
   */
  boolean hasDefensiveInputChallengeSettings();
  /**
   * <code>.POGOProtos.Rpc.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
   * @return The defensiveInputChallengeSettings.
   */
  POGOProtos.Rpc.CombatDefensiveInputChallengeSettings getDefensiveInputChallengeSettings();
  /**
   * <code>.POGOProtos.Rpc.CombatDefensiveInputChallengeSettings defensive_input_challenge_settings = 17;</code>
   */
  POGOProtos.Rpc.CombatDefensiveInputChallengeSettingsOrBuilder getDefensiveInputChallengeSettingsOrBuilder();

  /**
   * <code>float charge_score_base = 18;</code>
   * @return The chargeScoreBase.
   */
  float getChargeScoreBase();

  /**
   * <code>float charge_score_nice = 19;</code>
   * @return The chargeScoreNice.
   */
  float getChargeScoreNice();

  /**
   * <code>float charge_score_great = 20;</code>
   * @return The chargeScoreGreat.
   */
  float getChargeScoreGreat();

  /**
   * <code>float charge_score_excellent = 21;</code>
   * @return The chargeScoreExcellent.
   */
  float getChargeScoreExcellent();

  /**
   * <code>int32 swap_animation_duration_turns = 22;</code>
   * @return The swapAnimationDurationTurns.
   */
  int getSwapAnimationDurationTurns();

  /**
   * <code>int32 super_effective_flyout_duration_turns = 23;</code>
   * @return The superEffectiveFlyoutDurationTurns.
   */
  int getSuperEffectiveFlyoutDurationTurns();

  /**
   * <code>int32 not_very_effective_flyout_duration_turns = 24;</code>
   * @return The notVeryEffectiveFlyoutDurationTurns.
   */
  int getNotVeryEffectiveFlyoutDurationTurns();

  /**
   * <code>int32 blocked_flyout_duration_turns = 25;</code>
   * @return The blockedFlyoutDurationTurns.
   */
  int getBlockedFlyoutDurationTurns();

  /**
   * <code>int32 normal_effective_flyout_duration_turns = 26;</code>
   * @return The normalEffectiveFlyoutDurationTurns.
   */
  int getNormalEffectiveFlyoutDurationTurns();

  /**
   * <code>int32 faint_animation_duration_turns = 27;</code>
   * @return The faintAnimationDurationTurns.
   */
  int getFaintAnimationDurationTurns();

  /**
   * <code>int32 npc_swap_delay_turns = 28;</code>
   * @return The npcSwapDelayTurns.
   */
  int getNpcSwapDelayTurns();

  /**
   * <code>int32 npc_charged_attack_delay_turns = 29;</code>
   * @return The npcChargedAttackDelayTurns.
   */
  int getNpcChargedAttackDelayTurns();

  /**
   * <code>float shadow_pokemon_attack_bonus_multiplier = 30;</code>
   * @return The shadowPokemonAttackBonusMultiplier.
   */
  float getShadowPokemonAttackBonusMultiplier();

  /**
   * <code>float shadow_pokemon_defense_bonus_multiplier = 31;</code>
   * @return The shadowPokemonDefenseBonusMultiplier.
   */
  float getShadowPokemonDefenseBonusMultiplier();

  /**
   * <code>float purified_pokemon_attack_multiplier_vs_shadow = 32;</code>
   * @return The purifiedPokemonAttackMultiplierVsShadow.
   */
  float getPurifiedPokemonAttackMultiplierVsShadow();
}
