// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Rpc.proto

package POGOProtos.Rpc;

/**
 * <pre>
 * ref: IHNOOMLPAMJ
 * </pre>
 *
 * Protobuf type {@code POGOProtos.Rpc.CombatGlobalSettingsProto}
 */
public final class CombatGlobalSettingsProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:POGOProtos.Rpc.CombatGlobalSettingsProto)
    CombatGlobalSettingsProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CombatGlobalSettingsProto.newBuilder() to construct.
  private CombatGlobalSettingsProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CombatGlobalSettingsProto() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CombatGlobalSettingsProto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CombatGlobalSettingsProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            enableCombat_ = input.readBool();
            break;
          }
          case 16: {

            maximumDailyRewardedBattles_ = input.readInt32();
            break;
          }
          case 24: {

            enableCombatStatStages_ = input.readBool();
            break;
          }
          case 32: {

            minimumPlayerLevel_ = input.readUInt32();
            break;
          }
          case 40: {

            maximumDailyNpcRewardedBattles_ = input.readInt32();
            break;
          }
          case 48: {

            activeCombatUpdateIntervalMs_ = input.readInt32();
            break;
          }
          case 56: {

            waitingForPlayerUpdateIntervalMs_ = input.readInt32();
            break;
          }
          case 64: {

            readyForBattleUpdateIntervalMs_ = input.readInt32();
            break;
          }
          case 72: {

            preMoveSubmitWindowMs_ = input.readInt32();
            break;
          }
          case 80: {

            postMoveSubmitWindowMs_ = input.readInt32();
            break;
          }
          case 88: {

            enableSockets_ = input.readBool();
            break;
          }
          case 96: {

            enableSpinMinigame_ = input.readBool();
            break;
          }
          case 104: {

            enableQuickSwapV2_ = input.readBool();
            break;
          }
          case 112: {

            deprecatedVsSeekerSetting_ = input.readBool();
            break;
          }
          case 120: {

            vsSeekerWalkingDistPollDurationMs_ = input.readInt32();
            break;
          }
          case 128: {

            vsSeekerPlayerMinLevel_ = input.readInt32();
            break;
          }
          case 136: {

            matchmakingPollDurationMs_ = input.readInt32();
            break;
          }
          case 144: {

            enableParticleMinigame_ = input.readBool();
            break;
          }
          case 152: {

            enableVsSeekerUpgradeIap_ = input.readBool();
            break;
          }
          case 160: {

            enableFlyoutAnimations_ = input.readBool();
            break;
          }
          case 168: {

            enableBattleHub_ = input.readBool();
            break;
          }
          case 176: {

            matchmakingTimeoutDurationMs_ = input.readInt32();
            break;
          }
          case 184: {

            plannedDowntimeTimestampMs_ = input.readInt64();
            break;
          }
          case 192: {

            latencyCompensationThresholdMs_ = input.readInt32();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return POGOProtos.Rpc.POGOProtosRpc.internal_static_POGOProtos_Rpc_CombatGlobalSettingsProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return POGOProtos.Rpc.POGOProtosRpc.internal_static_POGOProtos_Rpc_CombatGlobalSettingsProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            POGOProtos.Rpc.CombatGlobalSettingsProto.class, POGOProtos.Rpc.CombatGlobalSettingsProto.Builder.class);
  }

  public static final int ENABLE_COMBAT_FIELD_NUMBER = 1;
  private boolean enableCombat_;
  /**
   * <code>bool enable_combat = 1;</code>
   * @return The enableCombat.
   */
  @java.lang.Override
  public boolean getEnableCombat() {
    return enableCombat_;
  }

  public static final int MAXIMUM_DAILY_REWARDED_BATTLES_FIELD_NUMBER = 2;
  private int maximumDailyRewardedBattles_;
  /**
   * <code>int32 maximum_daily_rewarded_battles = 2;</code>
   * @return The maximumDailyRewardedBattles.
   */
  @java.lang.Override
  public int getMaximumDailyRewardedBattles() {
    return maximumDailyRewardedBattles_;
  }

  public static final int ENABLE_COMBAT_STAT_STAGES_FIELD_NUMBER = 3;
  private boolean enableCombatStatStages_;
  /**
   * <code>bool enable_combat_stat_stages = 3;</code>
   * @return The enableCombatStatStages.
   */
  @java.lang.Override
  public boolean getEnableCombatStatStages() {
    return enableCombatStatStages_;
  }

  public static final int MINIMUM_PLAYER_LEVEL_FIELD_NUMBER = 4;
  private int minimumPlayerLevel_;
  /**
   * <code>uint32 minimum_player_level = 4;</code>
   * @return The minimumPlayerLevel.
   */
  @java.lang.Override
  public int getMinimumPlayerLevel() {
    return minimumPlayerLevel_;
  }

  public static final int MAXIMUM_DAILY_NPC_REWARDED_BATTLES_FIELD_NUMBER = 5;
  private int maximumDailyNpcRewardedBattles_;
  /**
   * <code>int32 maximum_daily_npc_rewarded_battles = 5;</code>
   * @return The maximumDailyNpcRewardedBattles.
   */
  @java.lang.Override
  public int getMaximumDailyNpcRewardedBattles() {
    return maximumDailyNpcRewardedBattles_;
  }

  public static final int ACTIVE_COMBAT_UPDATE_INTERVAL_MS_FIELD_NUMBER = 6;
  private int activeCombatUpdateIntervalMs_;
  /**
   * <code>int32 active_combat_update_interval_ms = 6;</code>
   * @return The activeCombatUpdateIntervalMs.
   */
  @java.lang.Override
  public int getActiveCombatUpdateIntervalMs() {
    return activeCombatUpdateIntervalMs_;
  }

  public static final int WAITING_FOR_PLAYER_UPDATE_INTERVAL_MS_FIELD_NUMBER = 7;
  private int waitingForPlayerUpdateIntervalMs_;
  /**
   * <code>int32 waiting_for_player_update_interval_ms = 7;</code>
   * @return The waitingForPlayerUpdateIntervalMs.
   */
  @java.lang.Override
  public int getWaitingForPlayerUpdateIntervalMs() {
    return waitingForPlayerUpdateIntervalMs_;
  }

  public static final int READY_FOR_BATTLE_UPDATE_INTERVAL_MS_FIELD_NUMBER = 8;
  private int readyForBattleUpdateIntervalMs_;
  /**
   * <code>int32 ready_for_battle_update_interval_ms = 8;</code>
   * @return The readyForBattleUpdateIntervalMs.
   */
  @java.lang.Override
  public int getReadyForBattleUpdateIntervalMs() {
    return readyForBattleUpdateIntervalMs_;
  }

  public static final int PRE_MOVE_SUBMIT_WINDOW_MS_FIELD_NUMBER = 9;
  private int preMoveSubmitWindowMs_;
  /**
   * <code>int32 pre_move_submit_window_ms = 9;</code>
   * @return The preMoveSubmitWindowMs.
   */
  @java.lang.Override
  public int getPreMoveSubmitWindowMs() {
    return preMoveSubmitWindowMs_;
  }

  public static final int POST_MOVE_SUBMIT_WINDOW_MS_FIELD_NUMBER = 10;
  private int postMoveSubmitWindowMs_;
  /**
   * <code>int32 post_move_submit_window_ms = 10;</code>
   * @return The postMoveSubmitWindowMs.
   */
  @java.lang.Override
  public int getPostMoveSubmitWindowMs() {
    return postMoveSubmitWindowMs_;
  }

  public static final int ENABLE_SOCKETS_FIELD_NUMBER = 11;
  private boolean enableSockets_;
  /**
   * <code>bool enable_sockets = 11;</code>
   * @return The enableSockets.
   */
  @java.lang.Override
  public boolean getEnableSockets() {
    return enableSockets_;
  }

  public static final int ENABLE_SPIN_MINIGAME_FIELD_NUMBER = 12;
  private boolean enableSpinMinigame_;
  /**
   * <code>bool enable_spin_minigame = 12;</code>
   * @return The enableSpinMinigame.
   */
  @java.lang.Override
  public boolean getEnableSpinMinigame() {
    return enableSpinMinigame_;
  }

  public static final int ENABLE_QUICK_SWAP_V2_FIELD_NUMBER = 13;
  private boolean enableQuickSwapV2_;
  /**
   * <code>bool enable_quick_swap_v2 = 13;</code>
   * @return The enableQuickSwapV2.
   */
  @java.lang.Override
  public boolean getEnableQuickSwapV2() {
    return enableQuickSwapV2_;
  }

  public static final int DEPRECATED_VS_SEEKER_SETTING_FIELD_NUMBER = 14;
  private boolean deprecatedVsSeekerSetting_;
  /**
   * <code>bool deprecated_vs_seeker_setting = 14;</code>
   * @return The deprecatedVsSeekerSetting.
   */
  @java.lang.Override
  public boolean getDeprecatedVsSeekerSetting() {
    return deprecatedVsSeekerSetting_;
  }

  public static final int VS_SEEKER_WALKING_DIST_POLL_DURATION_MS_FIELD_NUMBER = 15;
  private int vsSeekerWalkingDistPollDurationMs_;
  /**
   * <code>int32 vs_seeker_walking_dist_poll_duration_ms = 15;</code>
   * @return The vsSeekerWalkingDistPollDurationMs.
   */
  @java.lang.Override
  public int getVsSeekerWalkingDistPollDurationMs() {
    return vsSeekerWalkingDistPollDurationMs_;
  }

  public static final int VS_SEEKER_PLAYER_MIN_LEVEL_FIELD_NUMBER = 16;
  private int vsSeekerPlayerMinLevel_;
  /**
   * <code>int32 vs_seeker_player_min_level = 16;</code>
   * @return The vsSeekerPlayerMinLevel.
   */
  @java.lang.Override
  public int getVsSeekerPlayerMinLevel() {
    return vsSeekerPlayerMinLevel_;
  }

  public static final int MATCHMAKING_POLL_DURATION_MS_FIELD_NUMBER = 17;
  private int matchmakingPollDurationMs_;
  /**
   * <code>int32 matchmaking_poll_duration_ms = 17;</code>
   * @return The matchmakingPollDurationMs.
   */
  @java.lang.Override
  public int getMatchmakingPollDurationMs() {
    return matchmakingPollDurationMs_;
  }

  public static final int ENABLE_PARTICLE_MINIGAME_FIELD_NUMBER = 18;
  private boolean enableParticleMinigame_;
  /**
   * <code>bool enable_particle_minigame = 18;</code>
   * @return The enableParticleMinigame.
   */
  @java.lang.Override
  public boolean getEnableParticleMinigame() {
    return enableParticleMinigame_;
  }

  public static final int ENABLE_VS_SEEKER_UPGRADE_IAP_FIELD_NUMBER = 19;
  private boolean enableVsSeekerUpgradeIap_;
  /**
   * <code>bool enable_vs_seeker_upgrade_iap = 19;</code>
   * @return The enableVsSeekerUpgradeIap.
   */
  @java.lang.Override
  public boolean getEnableVsSeekerUpgradeIap() {
    return enableVsSeekerUpgradeIap_;
  }

  public static final int ENABLE_FLYOUT_ANIMATIONS_FIELD_NUMBER = 20;
  private boolean enableFlyoutAnimations_;
  /**
   * <code>bool enable_flyout_animations = 20;</code>
   * @return The enableFlyoutAnimations.
   */
  @java.lang.Override
  public boolean getEnableFlyoutAnimations() {
    return enableFlyoutAnimations_;
  }

  public static final int ENABLE_BATTLE_HUB_FIELD_NUMBER = 21;
  private boolean enableBattleHub_;
  /**
   * <code>bool enable_battle_hub = 21;</code>
   * @return The enableBattleHub.
   */
  @java.lang.Override
  public boolean getEnableBattleHub() {
    return enableBattleHub_;
  }

  public static final int MATCHMAKING_TIMEOUT_DURATION_MS_FIELD_NUMBER = 22;
  private int matchmakingTimeoutDurationMs_;
  /**
   * <code>int32 matchmaking_timeout_duration_ms = 22;</code>
   * @return The matchmakingTimeoutDurationMs.
   */
  @java.lang.Override
  public int getMatchmakingTimeoutDurationMs() {
    return matchmakingTimeoutDurationMs_;
  }

  public static final int PLANNED_DOWNTIME_TIMESTAMP_MS_FIELD_NUMBER = 23;
  private long plannedDowntimeTimestampMs_;
  /**
   * <code>int64 planned_downtime_timestamp_ms = 23;</code>
   * @return The plannedDowntimeTimestampMs.
   */
  @java.lang.Override
  public long getPlannedDowntimeTimestampMs() {
    return plannedDowntimeTimestampMs_;
  }

  public static final int LATENCY_COMPENSATION_THRESHOLD_MS_FIELD_NUMBER = 24;
  private int latencyCompensationThresholdMs_;
  /**
   * <code>int32 latency_compensation_threshold_ms = 24;</code>
   * @return The latencyCompensationThresholdMs.
   */
  @java.lang.Override
  public int getLatencyCompensationThresholdMs() {
    return latencyCompensationThresholdMs_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (enableCombat_ != false) {
      output.writeBool(1, enableCombat_);
    }
    if (maximumDailyRewardedBattles_ != 0) {
      output.writeInt32(2, maximumDailyRewardedBattles_);
    }
    if (enableCombatStatStages_ != false) {
      output.writeBool(3, enableCombatStatStages_);
    }
    if (minimumPlayerLevel_ != 0) {
      output.writeUInt32(4, minimumPlayerLevel_);
    }
    if (maximumDailyNpcRewardedBattles_ != 0) {
      output.writeInt32(5, maximumDailyNpcRewardedBattles_);
    }
    if (activeCombatUpdateIntervalMs_ != 0) {
      output.writeInt32(6, activeCombatUpdateIntervalMs_);
    }
    if (waitingForPlayerUpdateIntervalMs_ != 0) {
      output.writeInt32(7, waitingForPlayerUpdateIntervalMs_);
    }
    if (readyForBattleUpdateIntervalMs_ != 0) {
      output.writeInt32(8, readyForBattleUpdateIntervalMs_);
    }
    if (preMoveSubmitWindowMs_ != 0) {
      output.writeInt32(9, preMoveSubmitWindowMs_);
    }
    if (postMoveSubmitWindowMs_ != 0) {
      output.writeInt32(10, postMoveSubmitWindowMs_);
    }
    if (enableSockets_ != false) {
      output.writeBool(11, enableSockets_);
    }
    if (enableSpinMinigame_ != false) {
      output.writeBool(12, enableSpinMinigame_);
    }
    if (enableQuickSwapV2_ != false) {
      output.writeBool(13, enableQuickSwapV2_);
    }
    if (deprecatedVsSeekerSetting_ != false) {
      output.writeBool(14, deprecatedVsSeekerSetting_);
    }
    if (vsSeekerWalkingDistPollDurationMs_ != 0) {
      output.writeInt32(15, vsSeekerWalkingDistPollDurationMs_);
    }
    if (vsSeekerPlayerMinLevel_ != 0) {
      output.writeInt32(16, vsSeekerPlayerMinLevel_);
    }
    if (matchmakingPollDurationMs_ != 0) {
      output.writeInt32(17, matchmakingPollDurationMs_);
    }
    if (enableParticleMinigame_ != false) {
      output.writeBool(18, enableParticleMinigame_);
    }
    if (enableVsSeekerUpgradeIap_ != false) {
      output.writeBool(19, enableVsSeekerUpgradeIap_);
    }
    if (enableFlyoutAnimations_ != false) {
      output.writeBool(20, enableFlyoutAnimations_);
    }
    if (enableBattleHub_ != false) {
      output.writeBool(21, enableBattleHub_);
    }
    if (matchmakingTimeoutDurationMs_ != 0) {
      output.writeInt32(22, matchmakingTimeoutDurationMs_);
    }
    if (plannedDowntimeTimestampMs_ != 0L) {
      output.writeInt64(23, plannedDowntimeTimestampMs_);
    }
    if (latencyCompensationThresholdMs_ != 0) {
      output.writeInt32(24, latencyCompensationThresholdMs_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (enableCombat_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, enableCombat_);
    }
    if (maximumDailyRewardedBattles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, maximumDailyRewardedBattles_);
    }
    if (enableCombatStatStages_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, enableCombatStatStages_);
    }
    if (minimumPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(4, minimumPlayerLevel_);
    }
    if (maximumDailyNpcRewardedBattles_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, maximumDailyNpcRewardedBattles_);
    }
    if (activeCombatUpdateIntervalMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, activeCombatUpdateIntervalMs_);
    }
    if (waitingForPlayerUpdateIntervalMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(7, waitingForPlayerUpdateIntervalMs_);
    }
    if (readyForBattleUpdateIntervalMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, readyForBattleUpdateIntervalMs_);
    }
    if (preMoveSubmitWindowMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(9, preMoveSubmitWindowMs_);
    }
    if (postMoveSubmitWindowMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, postMoveSubmitWindowMs_);
    }
    if (enableSockets_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(11, enableSockets_);
    }
    if (enableSpinMinigame_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(12, enableSpinMinigame_);
    }
    if (enableQuickSwapV2_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(13, enableQuickSwapV2_);
    }
    if (deprecatedVsSeekerSetting_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(14, deprecatedVsSeekerSetting_);
    }
    if (vsSeekerWalkingDistPollDurationMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, vsSeekerWalkingDistPollDurationMs_);
    }
    if (vsSeekerPlayerMinLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, vsSeekerPlayerMinLevel_);
    }
    if (matchmakingPollDurationMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(17, matchmakingPollDurationMs_);
    }
    if (enableParticleMinigame_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(18, enableParticleMinigame_);
    }
    if (enableVsSeekerUpgradeIap_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(19, enableVsSeekerUpgradeIap_);
    }
    if (enableFlyoutAnimations_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(20, enableFlyoutAnimations_);
    }
    if (enableBattleHub_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(21, enableBattleHub_);
    }
    if (matchmakingTimeoutDurationMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(22, matchmakingTimeoutDurationMs_);
    }
    if (plannedDowntimeTimestampMs_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(23, plannedDowntimeTimestampMs_);
    }
    if (latencyCompensationThresholdMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(24, latencyCompensationThresholdMs_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof POGOProtos.Rpc.CombatGlobalSettingsProto)) {
      return super.equals(obj);
    }
    POGOProtos.Rpc.CombatGlobalSettingsProto other = (POGOProtos.Rpc.CombatGlobalSettingsProto) obj;

    if (getEnableCombat()
        != other.getEnableCombat()) return false;
    if (getMaximumDailyRewardedBattles()
        != other.getMaximumDailyRewardedBattles()) return false;
    if (getEnableCombatStatStages()
        != other.getEnableCombatStatStages()) return false;
    if (getMinimumPlayerLevel()
        != other.getMinimumPlayerLevel()) return false;
    if (getMaximumDailyNpcRewardedBattles()
        != other.getMaximumDailyNpcRewardedBattles()) return false;
    if (getActiveCombatUpdateIntervalMs()
        != other.getActiveCombatUpdateIntervalMs()) return false;
    if (getWaitingForPlayerUpdateIntervalMs()
        != other.getWaitingForPlayerUpdateIntervalMs()) return false;
    if (getReadyForBattleUpdateIntervalMs()
        != other.getReadyForBattleUpdateIntervalMs()) return false;
    if (getPreMoveSubmitWindowMs()
        != other.getPreMoveSubmitWindowMs()) return false;
    if (getPostMoveSubmitWindowMs()
        != other.getPostMoveSubmitWindowMs()) return false;
    if (getEnableSockets()
        != other.getEnableSockets()) return false;
    if (getEnableSpinMinigame()
        != other.getEnableSpinMinigame()) return false;
    if (getEnableQuickSwapV2()
        != other.getEnableQuickSwapV2()) return false;
    if (getDeprecatedVsSeekerSetting()
        != other.getDeprecatedVsSeekerSetting()) return false;
    if (getVsSeekerWalkingDistPollDurationMs()
        != other.getVsSeekerWalkingDistPollDurationMs()) return false;
    if (getVsSeekerPlayerMinLevel()
        != other.getVsSeekerPlayerMinLevel()) return false;
    if (getMatchmakingPollDurationMs()
        != other.getMatchmakingPollDurationMs()) return false;
    if (getEnableParticleMinigame()
        != other.getEnableParticleMinigame()) return false;
    if (getEnableVsSeekerUpgradeIap()
        != other.getEnableVsSeekerUpgradeIap()) return false;
    if (getEnableFlyoutAnimations()
        != other.getEnableFlyoutAnimations()) return false;
    if (getEnableBattleHub()
        != other.getEnableBattleHub()) return false;
    if (getMatchmakingTimeoutDurationMs()
        != other.getMatchmakingTimeoutDurationMs()) return false;
    if (getPlannedDowntimeTimestampMs()
        != other.getPlannedDowntimeTimestampMs()) return false;
    if (getLatencyCompensationThresholdMs()
        != other.getLatencyCompensationThresholdMs()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENABLE_COMBAT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableCombat());
    hash = (37 * hash) + MAXIMUM_DAILY_REWARDED_BATTLES_FIELD_NUMBER;
    hash = (53 * hash) + getMaximumDailyRewardedBattles();
    hash = (37 * hash) + ENABLE_COMBAT_STAT_STAGES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableCombatStatStages());
    hash = (37 * hash) + MINIMUM_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMinimumPlayerLevel();
    hash = (37 * hash) + MAXIMUM_DAILY_NPC_REWARDED_BATTLES_FIELD_NUMBER;
    hash = (53 * hash) + getMaximumDailyNpcRewardedBattles();
    hash = (37 * hash) + ACTIVE_COMBAT_UPDATE_INTERVAL_MS_FIELD_NUMBER;
    hash = (53 * hash) + getActiveCombatUpdateIntervalMs();
    hash = (37 * hash) + WAITING_FOR_PLAYER_UPDATE_INTERVAL_MS_FIELD_NUMBER;
    hash = (53 * hash) + getWaitingForPlayerUpdateIntervalMs();
    hash = (37 * hash) + READY_FOR_BATTLE_UPDATE_INTERVAL_MS_FIELD_NUMBER;
    hash = (53 * hash) + getReadyForBattleUpdateIntervalMs();
    hash = (37 * hash) + PRE_MOVE_SUBMIT_WINDOW_MS_FIELD_NUMBER;
    hash = (53 * hash) + getPreMoveSubmitWindowMs();
    hash = (37 * hash) + POST_MOVE_SUBMIT_WINDOW_MS_FIELD_NUMBER;
    hash = (53 * hash) + getPostMoveSubmitWindowMs();
    hash = (37 * hash) + ENABLE_SOCKETS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableSockets());
    hash = (37 * hash) + ENABLE_SPIN_MINIGAME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableSpinMinigame());
    hash = (37 * hash) + ENABLE_QUICK_SWAP_V2_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableQuickSwapV2());
    hash = (37 * hash) + DEPRECATED_VS_SEEKER_SETTING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDeprecatedVsSeekerSetting());
    hash = (37 * hash) + VS_SEEKER_WALKING_DIST_POLL_DURATION_MS_FIELD_NUMBER;
    hash = (53 * hash) + getVsSeekerWalkingDistPollDurationMs();
    hash = (37 * hash) + VS_SEEKER_PLAYER_MIN_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getVsSeekerPlayerMinLevel();
    hash = (37 * hash) + MATCHMAKING_POLL_DURATION_MS_FIELD_NUMBER;
    hash = (53 * hash) + getMatchmakingPollDurationMs();
    hash = (37 * hash) + ENABLE_PARTICLE_MINIGAME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableParticleMinigame());
    hash = (37 * hash) + ENABLE_VS_SEEKER_UPGRADE_IAP_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableVsSeekerUpgradeIap());
    hash = (37 * hash) + ENABLE_FLYOUT_ANIMATIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableFlyoutAnimations());
    hash = (37 * hash) + ENABLE_BATTLE_HUB_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getEnableBattleHub());
    hash = (37 * hash) + MATCHMAKING_TIMEOUT_DURATION_MS_FIELD_NUMBER;
    hash = (53 * hash) + getMatchmakingTimeoutDurationMs();
    hash = (37 * hash) + PLANNED_DOWNTIME_TIMESTAMP_MS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPlannedDowntimeTimestampMs());
    hash = (37 * hash) + LATENCY_COMPENSATION_THRESHOLD_MS_FIELD_NUMBER;
    hash = (53 * hash) + getLatencyCompensationThresholdMs();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Rpc.CombatGlobalSettingsProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(POGOProtos.Rpc.CombatGlobalSettingsProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * ref: IHNOOMLPAMJ
   * </pre>
   *
   * Protobuf type {@code POGOProtos.Rpc.CombatGlobalSettingsProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:POGOProtos.Rpc.CombatGlobalSettingsProto)
      POGOProtos.Rpc.CombatGlobalSettingsProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Rpc.POGOProtosRpc.internal_static_POGOProtos_Rpc_CombatGlobalSettingsProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Rpc.POGOProtosRpc.internal_static_POGOProtos_Rpc_CombatGlobalSettingsProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Rpc.CombatGlobalSettingsProto.class, POGOProtos.Rpc.CombatGlobalSettingsProto.Builder.class);
    }

    // Construct using POGOProtos.Rpc.CombatGlobalSettingsProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      enableCombat_ = false;

      maximumDailyRewardedBattles_ = 0;

      enableCombatStatStages_ = false;

      minimumPlayerLevel_ = 0;

      maximumDailyNpcRewardedBattles_ = 0;

      activeCombatUpdateIntervalMs_ = 0;

      waitingForPlayerUpdateIntervalMs_ = 0;

      readyForBattleUpdateIntervalMs_ = 0;

      preMoveSubmitWindowMs_ = 0;

      postMoveSubmitWindowMs_ = 0;

      enableSockets_ = false;

      enableSpinMinigame_ = false;

      enableQuickSwapV2_ = false;

      deprecatedVsSeekerSetting_ = false;

      vsSeekerWalkingDistPollDurationMs_ = 0;

      vsSeekerPlayerMinLevel_ = 0;

      matchmakingPollDurationMs_ = 0;

      enableParticleMinigame_ = false;

      enableVsSeekerUpgradeIap_ = false;

      enableFlyoutAnimations_ = false;

      enableBattleHub_ = false;

      matchmakingTimeoutDurationMs_ = 0;

      plannedDowntimeTimestampMs_ = 0L;

      latencyCompensationThresholdMs_ = 0;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return POGOProtos.Rpc.POGOProtosRpc.internal_static_POGOProtos_Rpc_CombatGlobalSettingsProto_descriptor;
    }

    @java.lang.Override
    public POGOProtos.Rpc.CombatGlobalSettingsProto getDefaultInstanceForType() {
      return POGOProtos.Rpc.CombatGlobalSettingsProto.getDefaultInstance();
    }

    @java.lang.Override
    public POGOProtos.Rpc.CombatGlobalSettingsProto build() {
      POGOProtos.Rpc.CombatGlobalSettingsProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public POGOProtos.Rpc.CombatGlobalSettingsProto buildPartial() {
      POGOProtos.Rpc.CombatGlobalSettingsProto result = new POGOProtos.Rpc.CombatGlobalSettingsProto(this);
      result.enableCombat_ = enableCombat_;
      result.maximumDailyRewardedBattles_ = maximumDailyRewardedBattles_;
      result.enableCombatStatStages_ = enableCombatStatStages_;
      result.minimumPlayerLevel_ = minimumPlayerLevel_;
      result.maximumDailyNpcRewardedBattles_ = maximumDailyNpcRewardedBattles_;
      result.activeCombatUpdateIntervalMs_ = activeCombatUpdateIntervalMs_;
      result.waitingForPlayerUpdateIntervalMs_ = waitingForPlayerUpdateIntervalMs_;
      result.readyForBattleUpdateIntervalMs_ = readyForBattleUpdateIntervalMs_;
      result.preMoveSubmitWindowMs_ = preMoveSubmitWindowMs_;
      result.postMoveSubmitWindowMs_ = postMoveSubmitWindowMs_;
      result.enableSockets_ = enableSockets_;
      result.enableSpinMinigame_ = enableSpinMinigame_;
      result.enableQuickSwapV2_ = enableQuickSwapV2_;
      result.deprecatedVsSeekerSetting_ = deprecatedVsSeekerSetting_;
      result.vsSeekerWalkingDistPollDurationMs_ = vsSeekerWalkingDistPollDurationMs_;
      result.vsSeekerPlayerMinLevel_ = vsSeekerPlayerMinLevel_;
      result.matchmakingPollDurationMs_ = matchmakingPollDurationMs_;
      result.enableParticleMinigame_ = enableParticleMinigame_;
      result.enableVsSeekerUpgradeIap_ = enableVsSeekerUpgradeIap_;
      result.enableFlyoutAnimations_ = enableFlyoutAnimations_;
      result.enableBattleHub_ = enableBattleHub_;
      result.matchmakingTimeoutDurationMs_ = matchmakingTimeoutDurationMs_;
      result.plannedDowntimeTimestampMs_ = plannedDowntimeTimestampMs_;
      result.latencyCompensationThresholdMs_ = latencyCompensationThresholdMs_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof POGOProtos.Rpc.CombatGlobalSettingsProto) {
        return mergeFrom((POGOProtos.Rpc.CombatGlobalSettingsProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(POGOProtos.Rpc.CombatGlobalSettingsProto other) {
      if (other == POGOProtos.Rpc.CombatGlobalSettingsProto.getDefaultInstance()) return this;
      if (other.getEnableCombat() != false) {
        setEnableCombat(other.getEnableCombat());
      }
      if (other.getMaximumDailyRewardedBattles() != 0) {
        setMaximumDailyRewardedBattles(other.getMaximumDailyRewardedBattles());
      }
      if (other.getEnableCombatStatStages() != false) {
        setEnableCombatStatStages(other.getEnableCombatStatStages());
      }
      if (other.getMinimumPlayerLevel() != 0) {
        setMinimumPlayerLevel(other.getMinimumPlayerLevel());
      }
      if (other.getMaximumDailyNpcRewardedBattles() != 0) {
        setMaximumDailyNpcRewardedBattles(other.getMaximumDailyNpcRewardedBattles());
      }
      if (other.getActiveCombatUpdateIntervalMs() != 0) {
        setActiveCombatUpdateIntervalMs(other.getActiveCombatUpdateIntervalMs());
      }
      if (other.getWaitingForPlayerUpdateIntervalMs() != 0) {
        setWaitingForPlayerUpdateIntervalMs(other.getWaitingForPlayerUpdateIntervalMs());
      }
      if (other.getReadyForBattleUpdateIntervalMs() != 0) {
        setReadyForBattleUpdateIntervalMs(other.getReadyForBattleUpdateIntervalMs());
      }
      if (other.getPreMoveSubmitWindowMs() != 0) {
        setPreMoveSubmitWindowMs(other.getPreMoveSubmitWindowMs());
      }
      if (other.getPostMoveSubmitWindowMs() != 0) {
        setPostMoveSubmitWindowMs(other.getPostMoveSubmitWindowMs());
      }
      if (other.getEnableSockets() != false) {
        setEnableSockets(other.getEnableSockets());
      }
      if (other.getEnableSpinMinigame() != false) {
        setEnableSpinMinigame(other.getEnableSpinMinigame());
      }
      if (other.getEnableQuickSwapV2() != false) {
        setEnableQuickSwapV2(other.getEnableQuickSwapV2());
      }
      if (other.getDeprecatedVsSeekerSetting() != false) {
        setDeprecatedVsSeekerSetting(other.getDeprecatedVsSeekerSetting());
      }
      if (other.getVsSeekerWalkingDistPollDurationMs() != 0) {
        setVsSeekerWalkingDistPollDurationMs(other.getVsSeekerWalkingDistPollDurationMs());
      }
      if (other.getVsSeekerPlayerMinLevel() != 0) {
        setVsSeekerPlayerMinLevel(other.getVsSeekerPlayerMinLevel());
      }
      if (other.getMatchmakingPollDurationMs() != 0) {
        setMatchmakingPollDurationMs(other.getMatchmakingPollDurationMs());
      }
      if (other.getEnableParticleMinigame() != false) {
        setEnableParticleMinigame(other.getEnableParticleMinigame());
      }
      if (other.getEnableVsSeekerUpgradeIap() != false) {
        setEnableVsSeekerUpgradeIap(other.getEnableVsSeekerUpgradeIap());
      }
      if (other.getEnableFlyoutAnimations() != false) {
        setEnableFlyoutAnimations(other.getEnableFlyoutAnimations());
      }
      if (other.getEnableBattleHub() != false) {
        setEnableBattleHub(other.getEnableBattleHub());
      }
      if (other.getMatchmakingTimeoutDurationMs() != 0) {
        setMatchmakingTimeoutDurationMs(other.getMatchmakingTimeoutDurationMs());
      }
      if (other.getPlannedDowntimeTimestampMs() != 0L) {
        setPlannedDowntimeTimestampMs(other.getPlannedDowntimeTimestampMs());
      }
      if (other.getLatencyCompensationThresholdMs() != 0) {
        setLatencyCompensationThresholdMs(other.getLatencyCompensationThresholdMs());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      POGOProtos.Rpc.CombatGlobalSettingsProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (POGOProtos.Rpc.CombatGlobalSettingsProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private boolean enableCombat_ ;
    /**
     * <code>bool enable_combat = 1;</code>
     * @return The enableCombat.
     */
    @java.lang.Override
    public boolean getEnableCombat() {
      return enableCombat_;
    }
    /**
     * <code>bool enable_combat = 1;</code>
     * @param value The enableCombat to set.
     * @return This builder for chaining.
     */
    public Builder setEnableCombat(boolean value) {
      
      enableCombat_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_combat = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableCombat() {
      
      enableCombat_ = false;
      onChanged();
      return this;
    }

    private int maximumDailyRewardedBattles_ ;
    /**
     * <code>int32 maximum_daily_rewarded_battles = 2;</code>
     * @return The maximumDailyRewardedBattles.
     */
    @java.lang.Override
    public int getMaximumDailyRewardedBattles() {
      return maximumDailyRewardedBattles_;
    }
    /**
     * <code>int32 maximum_daily_rewarded_battles = 2;</code>
     * @param value The maximumDailyRewardedBattles to set.
     * @return This builder for chaining.
     */
    public Builder setMaximumDailyRewardedBattles(int value) {
      
      maximumDailyRewardedBattles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maximum_daily_rewarded_battles = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaximumDailyRewardedBattles() {
      
      maximumDailyRewardedBattles_ = 0;
      onChanged();
      return this;
    }

    private boolean enableCombatStatStages_ ;
    /**
     * <code>bool enable_combat_stat_stages = 3;</code>
     * @return The enableCombatStatStages.
     */
    @java.lang.Override
    public boolean getEnableCombatStatStages() {
      return enableCombatStatStages_;
    }
    /**
     * <code>bool enable_combat_stat_stages = 3;</code>
     * @param value The enableCombatStatStages to set.
     * @return This builder for chaining.
     */
    public Builder setEnableCombatStatStages(boolean value) {
      
      enableCombatStatStages_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_combat_stat_stages = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableCombatStatStages() {
      
      enableCombatStatStages_ = false;
      onChanged();
      return this;
    }

    private int minimumPlayerLevel_ ;
    /**
     * <code>uint32 minimum_player_level = 4;</code>
     * @return The minimumPlayerLevel.
     */
    @java.lang.Override
    public int getMinimumPlayerLevel() {
      return minimumPlayerLevel_;
    }
    /**
     * <code>uint32 minimum_player_level = 4;</code>
     * @param value The minimumPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumPlayerLevel(int value) {
      
      minimumPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 minimum_player_level = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumPlayerLevel() {
      
      minimumPlayerLevel_ = 0;
      onChanged();
      return this;
    }

    private int maximumDailyNpcRewardedBattles_ ;
    /**
     * <code>int32 maximum_daily_npc_rewarded_battles = 5;</code>
     * @return The maximumDailyNpcRewardedBattles.
     */
    @java.lang.Override
    public int getMaximumDailyNpcRewardedBattles() {
      return maximumDailyNpcRewardedBattles_;
    }
    /**
     * <code>int32 maximum_daily_npc_rewarded_battles = 5;</code>
     * @param value The maximumDailyNpcRewardedBattles to set.
     * @return This builder for chaining.
     */
    public Builder setMaximumDailyNpcRewardedBattles(int value) {
      
      maximumDailyNpcRewardedBattles_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maximum_daily_npc_rewarded_battles = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaximumDailyNpcRewardedBattles() {
      
      maximumDailyNpcRewardedBattles_ = 0;
      onChanged();
      return this;
    }

    private int activeCombatUpdateIntervalMs_ ;
    /**
     * <code>int32 active_combat_update_interval_ms = 6;</code>
     * @return The activeCombatUpdateIntervalMs.
     */
    @java.lang.Override
    public int getActiveCombatUpdateIntervalMs() {
      return activeCombatUpdateIntervalMs_;
    }
    /**
     * <code>int32 active_combat_update_interval_ms = 6;</code>
     * @param value The activeCombatUpdateIntervalMs to set.
     * @return This builder for chaining.
     */
    public Builder setActiveCombatUpdateIntervalMs(int value) {
      
      activeCombatUpdateIntervalMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 active_combat_update_interval_ms = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearActiveCombatUpdateIntervalMs() {
      
      activeCombatUpdateIntervalMs_ = 0;
      onChanged();
      return this;
    }

    private int waitingForPlayerUpdateIntervalMs_ ;
    /**
     * <code>int32 waiting_for_player_update_interval_ms = 7;</code>
     * @return The waitingForPlayerUpdateIntervalMs.
     */
    @java.lang.Override
    public int getWaitingForPlayerUpdateIntervalMs() {
      return waitingForPlayerUpdateIntervalMs_;
    }
    /**
     * <code>int32 waiting_for_player_update_interval_ms = 7;</code>
     * @param value The waitingForPlayerUpdateIntervalMs to set.
     * @return This builder for chaining.
     */
    public Builder setWaitingForPlayerUpdateIntervalMs(int value) {
      
      waitingForPlayerUpdateIntervalMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 waiting_for_player_update_interval_ms = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearWaitingForPlayerUpdateIntervalMs() {
      
      waitingForPlayerUpdateIntervalMs_ = 0;
      onChanged();
      return this;
    }

    private int readyForBattleUpdateIntervalMs_ ;
    /**
     * <code>int32 ready_for_battle_update_interval_ms = 8;</code>
     * @return The readyForBattleUpdateIntervalMs.
     */
    @java.lang.Override
    public int getReadyForBattleUpdateIntervalMs() {
      return readyForBattleUpdateIntervalMs_;
    }
    /**
     * <code>int32 ready_for_battle_update_interval_ms = 8;</code>
     * @param value The readyForBattleUpdateIntervalMs to set.
     * @return This builder for chaining.
     */
    public Builder setReadyForBattleUpdateIntervalMs(int value) {
      
      readyForBattleUpdateIntervalMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 ready_for_battle_update_interval_ms = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearReadyForBattleUpdateIntervalMs() {
      
      readyForBattleUpdateIntervalMs_ = 0;
      onChanged();
      return this;
    }

    private int preMoveSubmitWindowMs_ ;
    /**
     * <code>int32 pre_move_submit_window_ms = 9;</code>
     * @return The preMoveSubmitWindowMs.
     */
    @java.lang.Override
    public int getPreMoveSubmitWindowMs() {
      return preMoveSubmitWindowMs_;
    }
    /**
     * <code>int32 pre_move_submit_window_ms = 9;</code>
     * @param value The preMoveSubmitWindowMs to set.
     * @return This builder for chaining.
     */
    public Builder setPreMoveSubmitWindowMs(int value) {
      
      preMoveSubmitWindowMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 pre_move_submit_window_ms = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearPreMoveSubmitWindowMs() {
      
      preMoveSubmitWindowMs_ = 0;
      onChanged();
      return this;
    }

    private int postMoveSubmitWindowMs_ ;
    /**
     * <code>int32 post_move_submit_window_ms = 10;</code>
     * @return The postMoveSubmitWindowMs.
     */
    @java.lang.Override
    public int getPostMoveSubmitWindowMs() {
      return postMoveSubmitWindowMs_;
    }
    /**
     * <code>int32 post_move_submit_window_ms = 10;</code>
     * @param value The postMoveSubmitWindowMs to set.
     * @return This builder for chaining.
     */
    public Builder setPostMoveSubmitWindowMs(int value) {
      
      postMoveSubmitWindowMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 post_move_submit_window_ms = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearPostMoveSubmitWindowMs() {
      
      postMoveSubmitWindowMs_ = 0;
      onChanged();
      return this;
    }

    private boolean enableSockets_ ;
    /**
     * <code>bool enable_sockets = 11;</code>
     * @return The enableSockets.
     */
    @java.lang.Override
    public boolean getEnableSockets() {
      return enableSockets_;
    }
    /**
     * <code>bool enable_sockets = 11;</code>
     * @param value The enableSockets to set.
     * @return This builder for chaining.
     */
    public Builder setEnableSockets(boolean value) {
      
      enableSockets_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_sockets = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableSockets() {
      
      enableSockets_ = false;
      onChanged();
      return this;
    }

    private boolean enableSpinMinigame_ ;
    /**
     * <code>bool enable_spin_minigame = 12;</code>
     * @return The enableSpinMinigame.
     */
    @java.lang.Override
    public boolean getEnableSpinMinigame() {
      return enableSpinMinigame_;
    }
    /**
     * <code>bool enable_spin_minigame = 12;</code>
     * @param value The enableSpinMinigame to set.
     * @return This builder for chaining.
     */
    public Builder setEnableSpinMinigame(boolean value) {
      
      enableSpinMinigame_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_spin_minigame = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableSpinMinigame() {
      
      enableSpinMinigame_ = false;
      onChanged();
      return this;
    }

    private boolean enableQuickSwapV2_ ;
    /**
     * <code>bool enable_quick_swap_v2 = 13;</code>
     * @return The enableQuickSwapV2.
     */
    @java.lang.Override
    public boolean getEnableQuickSwapV2() {
      return enableQuickSwapV2_;
    }
    /**
     * <code>bool enable_quick_swap_v2 = 13;</code>
     * @param value The enableQuickSwapV2 to set.
     * @return This builder for chaining.
     */
    public Builder setEnableQuickSwapV2(boolean value) {
      
      enableQuickSwapV2_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_quick_swap_v2 = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableQuickSwapV2() {
      
      enableQuickSwapV2_ = false;
      onChanged();
      return this;
    }

    private boolean deprecatedVsSeekerSetting_ ;
    /**
     * <code>bool deprecated_vs_seeker_setting = 14;</code>
     * @return The deprecatedVsSeekerSetting.
     */
    @java.lang.Override
    public boolean getDeprecatedVsSeekerSetting() {
      return deprecatedVsSeekerSetting_;
    }
    /**
     * <code>bool deprecated_vs_seeker_setting = 14;</code>
     * @param value The deprecatedVsSeekerSetting to set.
     * @return This builder for chaining.
     */
    public Builder setDeprecatedVsSeekerSetting(boolean value) {
      
      deprecatedVsSeekerSetting_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool deprecated_vs_seeker_setting = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeprecatedVsSeekerSetting() {
      
      deprecatedVsSeekerSetting_ = false;
      onChanged();
      return this;
    }

    private int vsSeekerWalkingDistPollDurationMs_ ;
    /**
     * <code>int32 vs_seeker_walking_dist_poll_duration_ms = 15;</code>
     * @return The vsSeekerWalkingDistPollDurationMs.
     */
    @java.lang.Override
    public int getVsSeekerWalkingDistPollDurationMs() {
      return vsSeekerWalkingDistPollDurationMs_;
    }
    /**
     * <code>int32 vs_seeker_walking_dist_poll_duration_ms = 15;</code>
     * @param value The vsSeekerWalkingDistPollDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setVsSeekerWalkingDistPollDurationMs(int value) {
      
      vsSeekerWalkingDistPollDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 vs_seeker_walking_dist_poll_duration_ms = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearVsSeekerWalkingDistPollDurationMs() {
      
      vsSeekerWalkingDistPollDurationMs_ = 0;
      onChanged();
      return this;
    }

    private int vsSeekerPlayerMinLevel_ ;
    /**
     * <code>int32 vs_seeker_player_min_level = 16;</code>
     * @return The vsSeekerPlayerMinLevel.
     */
    @java.lang.Override
    public int getVsSeekerPlayerMinLevel() {
      return vsSeekerPlayerMinLevel_;
    }
    /**
     * <code>int32 vs_seeker_player_min_level = 16;</code>
     * @param value The vsSeekerPlayerMinLevel to set.
     * @return This builder for chaining.
     */
    public Builder setVsSeekerPlayerMinLevel(int value) {
      
      vsSeekerPlayerMinLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 vs_seeker_player_min_level = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearVsSeekerPlayerMinLevel() {
      
      vsSeekerPlayerMinLevel_ = 0;
      onChanged();
      return this;
    }

    private int matchmakingPollDurationMs_ ;
    /**
     * <code>int32 matchmaking_poll_duration_ms = 17;</code>
     * @return The matchmakingPollDurationMs.
     */
    @java.lang.Override
    public int getMatchmakingPollDurationMs() {
      return matchmakingPollDurationMs_;
    }
    /**
     * <code>int32 matchmaking_poll_duration_ms = 17;</code>
     * @param value The matchmakingPollDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setMatchmakingPollDurationMs(int value) {
      
      matchmakingPollDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 matchmaking_poll_duration_ms = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearMatchmakingPollDurationMs() {
      
      matchmakingPollDurationMs_ = 0;
      onChanged();
      return this;
    }

    private boolean enableParticleMinigame_ ;
    /**
     * <code>bool enable_particle_minigame = 18;</code>
     * @return The enableParticleMinigame.
     */
    @java.lang.Override
    public boolean getEnableParticleMinigame() {
      return enableParticleMinigame_;
    }
    /**
     * <code>bool enable_particle_minigame = 18;</code>
     * @param value The enableParticleMinigame to set.
     * @return This builder for chaining.
     */
    public Builder setEnableParticleMinigame(boolean value) {
      
      enableParticleMinigame_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_particle_minigame = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableParticleMinigame() {
      
      enableParticleMinigame_ = false;
      onChanged();
      return this;
    }

    private boolean enableVsSeekerUpgradeIap_ ;
    /**
     * <code>bool enable_vs_seeker_upgrade_iap = 19;</code>
     * @return The enableVsSeekerUpgradeIap.
     */
    @java.lang.Override
    public boolean getEnableVsSeekerUpgradeIap() {
      return enableVsSeekerUpgradeIap_;
    }
    /**
     * <code>bool enable_vs_seeker_upgrade_iap = 19;</code>
     * @param value The enableVsSeekerUpgradeIap to set.
     * @return This builder for chaining.
     */
    public Builder setEnableVsSeekerUpgradeIap(boolean value) {
      
      enableVsSeekerUpgradeIap_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_vs_seeker_upgrade_iap = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableVsSeekerUpgradeIap() {
      
      enableVsSeekerUpgradeIap_ = false;
      onChanged();
      return this;
    }

    private boolean enableFlyoutAnimations_ ;
    /**
     * <code>bool enable_flyout_animations = 20;</code>
     * @return The enableFlyoutAnimations.
     */
    @java.lang.Override
    public boolean getEnableFlyoutAnimations() {
      return enableFlyoutAnimations_;
    }
    /**
     * <code>bool enable_flyout_animations = 20;</code>
     * @param value The enableFlyoutAnimations to set.
     * @return This builder for chaining.
     */
    public Builder setEnableFlyoutAnimations(boolean value) {
      
      enableFlyoutAnimations_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_flyout_animations = 20;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableFlyoutAnimations() {
      
      enableFlyoutAnimations_ = false;
      onChanged();
      return this;
    }

    private boolean enableBattleHub_ ;
    /**
     * <code>bool enable_battle_hub = 21;</code>
     * @return The enableBattleHub.
     */
    @java.lang.Override
    public boolean getEnableBattleHub() {
      return enableBattleHub_;
    }
    /**
     * <code>bool enable_battle_hub = 21;</code>
     * @param value The enableBattleHub to set.
     * @return This builder for chaining.
     */
    public Builder setEnableBattleHub(boolean value) {
      
      enableBattleHub_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool enable_battle_hub = 21;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnableBattleHub() {
      
      enableBattleHub_ = false;
      onChanged();
      return this;
    }

    private int matchmakingTimeoutDurationMs_ ;
    /**
     * <code>int32 matchmaking_timeout_duration_ms = 22;</code>
     * @return The matchmakingTimeoutDurationMs.
     */
    @java.lang.Override
    public int getMatchmakingTimeoutDurationMs() {
      return matchmakingTimeoutDurationMs_;
    }
    /**
     * <code>int32 matchmaking_timeout_duration_ms = 22;</code>
     * @param value The matchmakingTimeoutDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setMatchmakingTimeoutDurationMs(int value) {
      
      matchmakingTimeoutDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 matchmaking_timeout_duration_ms = 22;</code>
     * @return This builder for chaining.
     */
    public Builder clearMatchmakingTimeoutDurationMs() {
      
      matchmakingTimeoutDurationMs_ = 0;
      onChanged();
      return this;
    }

    private long plannedDowntimeTimestampMs_ ;
    /**
     * <code>int64 planned_downtime_timestamp_ms = 23;</code>
     * @return The plannedDowntimeTimestampMs.
     */
    @java.lang.Override
    public long getPlannedDowntimeTimestampMs() {
      return plannedDowntimeTimestampMs_;
    }
    /**
     * <code>int64 planned_downtime_timestamp_ms = 23;</code>
     * @param value The plannedDowntimeTimestampMs to set.
     * @return This builder for chaining.
     */
    public Builder setPlannedDowntimeTimestampMs(long value) {
      
      plannedDowntimeTimestampMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 planned_downtime_timestamp_ms = 23;</code>
     * @return This builder for chaining.
     */
    public Builder clearPlannedDowntimeTimestampMs() {
      
      plannedDowntimeTimestampMs_ = 0L;
      onChanged();
      return this;
    }

    private int latencyCompensationThresholdMs_ ;
    /**
     * <code>int32 latency_compensation_threshold_ms = 24;</code>
     * @return The latencyCompensationThresholdMs.
     */
    @java.lang.Override
    public int getLatencyCompensationThresholdMs() {
      return latencyCompensationThresholdMs_;
    }
    /**
     * <code>int32 latency_compensation_threshold_ms = 24;</code>
     * @param value The latencyCompensationThresholdMs to set.
     * @return This builder for chaining.
     */
    public Builder setLatencyCompensationThresholdMs(int value) {
      
      latencyCompensationThresholdMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 latency_compensation_threshold_ms = 24;</code>
     * @return This builder for chaining.
     */
    public Builder clearLatencyCompensationThresholdMs() {
      
      latencyCompensationThresholdMs_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:POGOProtos.Rpc.CombatGlobalSettingsProto)
  }

  // @@protoc_insertion_point(class_scope:POGOProtos.Rpc.CombatGlobalSettingsProto)
  private static final POGOProtos.Rpc.CombatGlobalSettingsProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new POGOProtos.Rpc.CombatGlobalSettingsProto();
  }

  public static POGOProtos.Rpc.CombatGlobalSettingsProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CombatGlobalSettingsProto>
      PARSER = new com.google.protobuf.AbstractParser<CombatGlobalSettingsProto>() {
    @java.lang.Override
    public CombatGlobalSettingsProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CombatGlobalSettingsProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CombatGlobalSettingsProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CombatGlobalSettingsProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public POGOProtos.Rpc.CombatGlobalSettingsProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

