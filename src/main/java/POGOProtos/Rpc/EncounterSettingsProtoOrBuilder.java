// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Rpc.proto

package POGOProtos.Rpc;

public interface EncounterSettingsProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Rpc.EncounterSettingsProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>float spin_bonus_threshold = 1;</code>
   * @return The spinBonusThreshold.
   */
  float getSpinBonusThreshold();

  /**
   * <code>float excellent_throw_threshold = 2;</code>
   * @return The excellentThrowThreshold.
   */
  float getExcellentThrowThreshold();

  /**
   * <code>float great_throw_threshold = 3;</code>
   * @return The greatThrowThreshold.
   */
  float getGreatThrowThreshold();

  /**
   * <code>float nice_throw_threshold = 4;</code>
   * @return The niceThrowThreshold.
   */
  float getNiceThrowThreshold();

  /**
   * <code>int32 milestone_threshold = 5;</code>
   * @return The milestoneThreshold.
   */
  int getMilestoneThreshold();

  /**
   * <code>bool ar_plus_mode_enabled = 6;</code>
   * @return The arPlusModeEnabled.
   */
  boolean getArPlusModeEnabled();

  /**
   * <code>float ar_close_proximity_threshold = 7;</code>
   * @return The arCloseProximityThreshold.
   */
  float getArCloseProximityThreshold();

  /**
   * <code>float ar_low_awareness_threshold = 8;</code>
   * @return The arLowAwarenessThreshold.
   */
  float getArLowAwarenessThreshold();

  /**
   * <code>float ar_close_proximity_multiplier = 9;</code>
   * @return The arCloseProximityMultiplier.
   */
  float getArCloseProximityMultiplier();

  /**
   * <code>float ar_awareness_penalty_threshold = 10;</code>
   * @return The arAwarenessPenaltyThreshold.
   */
  float getArAwarenessPenaltyThreshold();

  /**
   * <code>float ar_low_awareness_max_multiplier = 11;</code>
   * @return The arLowAwarenessMaxMultiplier.
   */
  float getArLowAwarenessMaxMultiplier();

  /**
   * <code>float ar_high_awareness_min_penalty_multiplier = 12;</code>
   * @return The arHighAwarenessMinPenaltyMultiplier.
   */
  float getArHighAwarenessMinPenaltyMultiplier();

  /**
   * <code>int32 ar_plus_attempts_until_flee_max = 13;</code>
   * @return The arPlusAttemptsUntilFleeMax.
   */
  int getArPlusAttemptsUntilFleeMax();

  /**
   * <code>int32 ar_plus_attempts_until_flee_infinite = 14;</code>
   * @return The arPlusAttemptsUntilFleeInfinite.
   */
  int getArPlusAttemptsUntilFleeInfinite();

  /**
   * <code>float escaped_bonus_multiplier_max = 15;</code>
   * @return The escapedBonusMultiplierMax.
   */
  float getEscapedBonusMultiplierMax();

  /**
   * <code>float escaped_bonus_multiplier_by_excellent_throw = 16;</code>
   * @return The escapedBonusMultiplierByExcellentThrow.
   */
  float getEscapedBonusMultiplierByExcellentThrow();

  /**
   * <code>float escaped_bonus_multiplier_by_great_throw = 17;</code>
   * @return The escapedBonusMultiplierByGreatThrow.
   */
  float getEscapedBonusMultiplierByGreatThrow();

  /**
   * <code>float escaped_bonus_multiplier_by_nice_throw = 18;</code>
   * @return The escapedBonusMultiplierByNiceThrow.
   */
  float getEscapedBonusMultiplierByNiceThrow();
}
