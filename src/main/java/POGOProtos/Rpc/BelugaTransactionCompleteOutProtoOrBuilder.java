// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Rpc.proto

package POGOProtos.Rpc;

public interface BelugaTransactionCompleteOutProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Rpc.BelugaTransactionCompleteOutProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.POGOProtos.Rpc.BelugaTransactionCompleteOutProto.Status status = 1;</code>
   * @return The enum numeric value on the wire for status.
   */
  int getStatusValue();
  /**
   * <code>.POGOProtos.Rpc.BelugaTransactionCompleteOutProto.Status status = 1;</code>
   * @return The status.
   */
  POGOProtos.Rpc.BelugaTransactionCompleteOutProto.Status getStatus();

  /**
   * <code>int32 candy_awarded = 2;</code>
   * @return The candyAwarded.
   */
  int getCandyAwarded();

  /**
   * <code>.POGOProtos.Rpc.LootProto loot_awarded = 3;</code>
   * @return Whether the lootAwarded field is set.
   */
  boolean hasLootAwarded();
  /**
   * <code>.POGOProtos.Rpc.LootProto loot_awarded = 3;</code>
   * @return The lootAwarded.
   */
  POGOProtos.Rpc.LootProto getLootAwarded();
  /**
   * <code>.POGOProtos.Rpc.LootProto loot_awarded = 3;</code>
   */
  POGOProtos.Rpc.LootProtoOrBuilder getLootAwardedOrBuilder();

  /**
   * <code>.POGOProtos.Rpc.BelugaBleFinalizeTransfer beluga_finalize_response = 4;</code>
   * @return Whether the belugaFinalizeResponse field is set.
   */
  boolean hasBelugaFinalizeResponse();
  /**
   * <code>.POGOProtos.Rpc.BelugaBleFinalizeTransfer beluga_finalize_response = 4;</code>
   * @return The belugaFinalizeResponse.
   */
  POGOProtos.Rpc.BelugaBleFinalizeTransfer getBelugaFinalizeResponse();
  /**
   * <code>.POGOProtos.Rpc.BelugaBleFinalizeTransfer beluga_finalize_response = 4;</code>
   */
  POGOProtos.Rpc.BelugaBleFinalizeTransferOrBuilder getBelugaFinalizeResponseOrBuilder();

  /**
   * <code>int32 buckets_until_weekly_award = 5;</code>
   * @return The bucketsUntilWeeklyAward.
   */
  int getBucketsUntilWeeklyAward();

  /**
   * <code>map&lt;int32, int32&gt; xl_candy_awarded_per_id = 6;</code>
   */
  int getXlCandyAwardedPerIdCount();
  /**
   * <code>map&lt;int32, int32&gt; xl_candy_awarded_per_id = 6;</code>
   */
  boolean containsXlCandyAwardedPerId(
      int key);
  /**
   * Use {@link #getXlCandyAwardedPerIdMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getXlCandyAwardedPerId();
  /**
   * <code>map&lt;int32, int32&gt; xl_candy_awarded_per_id = 6;</code>
   */
  java.util.Map<java.lang.Integer, java.lang.Integer>
  getXlCandyAwardedPerIdMap();
  /**
   * <code>map&lt;int32, int32&gt; xl_candy_awarded_per_id = 6;</code>
   */

  int getXlCandyAwardedPerIdOrDefault(
      int key,
      int defaultValue);
  /**
   * <code>map&lt;int32, int32&gt; xl_candy_awarded_per_id = 6;</code>
   */

  int getXlCandyAwardedPerIdOrThrow(
      int key);
}
