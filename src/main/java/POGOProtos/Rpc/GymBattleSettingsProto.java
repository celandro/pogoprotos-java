// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Rpc/Rpc.proto

package POGOProtos.Rpc;

/**
 * Protobuf type {@code POGOProtos.Rpc.GymBattleSettingsProto}
 */
public final class GymBattleSettingsProto extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:POGOProtos.Rpc.GymBattleSettingsProto)
    GymBattleSettingsProtoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GymBattleSettingsProto.newBuilder() to construct.
  private GymBattleSettingsProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GymBattleSettingsProto() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GymBattleSettingsProto();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GymBattleSettingsProto(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 13: {

            energyPerSec_ = input.readFloat();
            break;
          }
          case 21: {

            dodgeEnergyCost_ = input.readFloat();
            break;
          }
          case 29: {

            retargetSeconds_ = input.readFloat();
            break;
          }
          case 37: {

            enemyAttackInterval_ = input.readFloat();
            break;
          }
          case 45: {

            attackServerInterval_ = input.readFloat();
            break;
          }
          case 53: {

            roundDurationSeconds_ = input.readFloat();
            break;
          }
          case 61: {

            bonusTimePerAllySeconds_ = input.readFloat();
            break;
          }
          case 64: {

            maximumAttackersPerBattle_ = input.readInt32();
            break;
          }
          case 77: {

            sameTypeAttackBonusMultiplier_ = input.readFloat();
            break;
          }
          case 80: {

            maximumEnergy_ = input.readInt32();
            break;
          }
          case 93: {

            energyDeltaPerHealthLost_ = input.readFloat();
            break;
          }
          case 96: {

            dodgeDurationMs_ = input.readInt32();
            break;
          }
          case 104: {

            minimumPlayerLevel_ = input.readInt32();
            break;
          }
          case 112: {

            swapDurationMs_ = input.readInt32();
            break;
          }
          case 125: {

            dodgeDamageReductionPercent_ = input.readFloat();
            break;
          }
          case 128: {

            minimumRaidPlayerLevel_ = input.readInt32();
            break;
          }
          case 141: {

            shadowPokemonAttackBonusMultiplier_ = input.readFloat();
            break;
          }
          case 149: {

            shadowPokemonDefenseBonusMultiplier_ = input.readFloat();
            break;
          }
          case 157: {

            purifiedPokemonAttackMultiplierVsShadow_ = input.readFloat();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return POGOProtos.Rpc.Rpc.internal_static_POGOProtos_Rpc_GymBattleSettingsProto_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return POGOProtos.Rpc.Rpc.internal_static_POGOProtos_Rpc_GymBattleSettingsProto_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            POGOProtos.Rpc.GymBattleSettingsProto.class, POGOProtos.Rpc.GymBattleSettingsProto.Builder.class);
  }

  public static final int ENERGY_PER_SEC_FIELD_NUMBER = 1;
  private float energyPerSec_;
  /**
   * <code>float energy_per_sec = 1;</code>
   * @return The energyPerSec.
   */
  @java.lang.Override
  public float getEnergyPerSec() {
    return energyPerSec_;
  }

  public static final int DODGE_ENERGY_COST_FIELD_NUMBER = 2;
  private float dodgeEnergyCost_;
  /**
   * <code>float dodge_energy_cost = 2;</code>
   * @return The dodgeEnergyCost.
   */
  @java.lang.Override
  public float getDodgeEnergyCost() {
    return dodgeEnergyCost_;
  }

  public static final int RETARGET_SECONDS_FIELD_NUMBER = 3;
  private float retargetSeconds_;
  /**
   * <code>float retarget_seconds = 3;</code>
   * @return The retargetSeconds.
   */
  @java.lang.Override
  public float getRetargetSeconds() {
    return retargetSeconds_;
  }

  public static final int ENEMY_ATTACK_INTERVAL_FIELD_NUMBER = 4;
  private float enemyAttackInterval_;
  /**
   * <code>float enemy_attack_interval = 4;</code>
   * @return The enemyAttackInterval.
   */
  @java.lang.Override
  public float getEnemyAttackInterval() {
    return enemyAttackInterval_;
  }

  public static final int ATTACK_SERVER_INTERVAL_FIELD_NUMBER = 5;
  private float attackServerInterval_;
  /**
   * <code>float attack_server_interval = 5;</code>
   * @return The attackServerInterval.
   */
  @java.lang.Override
  public float getAttackServerInterval() {
    return attackServerInterval_;
  }

  public static final int ROUND_DURATION_SECONDS_FIELD_NUMBER = 6;
  private float roundDurationSeconds_;
  /**
   * <code>float round_duration_seconds = 6;</code>
   * @return The roundDurationSeconds.
   */
  @java.lang.Override
  public float getRoundDurationSeconds() {
    return roundDurationSeconds_;
  }

  public static final int BONUS_TIME_PER_ALLY_SECONDS_FIELD_NUMBER = 7;
  private float bonusTimePerAllySeconds_;
  /**
   * <code>float bonus_time_per_ally_seconds = 7;</code>
   * @return The bonusTimePerAllySeconds.
   */
  @java.lang.Override
  public float getBonusTimePerAllySeconds() {
    return bonusTimePerAllySeconds_;
  }

  public static final int MAXIMUM_ATTACKERS_PER_BATTLE_FIELD_NUMBER = 8;
  private int maximumAttackersPerBattle_;
  /**
   * <code>int32 maximum_attackers_per_battle = 8;</code>
   * @return The maximumAttackersPerBattle.
   */
  @java.lang.Override
  public int getMaximumAttackersPerBattle() {
    return maximumAttackersPerBattle_;
  }

  public static final int SAME_TYPE_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER = 9;
  private float sameTypeAttackBonusMultiplier_;
  /**
   * <code>float same_type_attack_bonus_multiplier = 9;</code>
   * @return The sameTypeAttackBonusMultiplier.
   */
  @java.lang.Override
  public float getSameTypeAttackBonusMultiplier() {
    return sameTypeAttackBonusMultiplier_;
  }

  public static final int MAXIMUM_ENERGY_FIELD_NUMBER = 10;
  private int maximumEnergy_;
  /**
   * <code>int32 maximum_energy = 10;</code>
   * @return The maximumEnergy.
   */
  @java.lang.Override
  public int getMaximumEnergy() {
    return maximumEnergy_;
  }

  public static final int ENERGY_DELTA_PER_HEALTH_LOST_FIELD_NUMBER = 11;
  private float energyDeltaPerHealthLost_;
  /**
   * <code>float energy_delta_per_health_lost = 11;</code>
   * @return The energyDeltaPerHealthLost.
   */
  @java.lang.Override
  public float getEnergyDeltaPerHealthLost() {
    return energyDeltaPerHealthLost_;
  }

  public static final int DODGE_DURATION_MS_FIELD_NUMBER = 12;
  private int dodgeDurationMs_;
  /**
   * <code>int32 dodge_duration_ms = 12;</code>
   * @return The dodgeDurationMs.
   */
  @java.lang.Override
  public int getDodgeDurationMs() {
    return dodgeDurationMs_;
  }

  public static final int MINIMUM_PLAYER_LEVEL_FIELD_NUMBER = 13;
  private int minimumPlayerLevel_;
  /**
   * <code>int32 minimum_player_level = 13;</code>
   * @return The minimumPlayerLevel.
   */
  @java.lang.Override
  public int getMinimumPlayerLevel() {
    return minimumPlayerLevel_;
  }

  public static final int SWAP_DURATION_MS_FIELD_NUMBER = 14;
  private int swapDurationMs_;
  /**
   * <code>int32 swap_duration_ms = 14;</code>
   * @return The swapDurationMs.
   */
  @java.lang.Override
  public int getSwapDurationMs() {
    return swapDurationMs_;
  }

  public static final int DODGE_DAMAGE_REDUCTION_PERCENT_FIELD_NUMBER = 15;
  private float dodgeDamageReductionPercent_;
  /**
   * <code>float dodge_damage_reduction_percent = 15;</code>
   * @return The dodgeDamageReductionPercent.
   */
  @java.lang.Override
  public float getDodgeDamageReductionPercent() {
    return dodgeDamageReductionPercent_;
  }

  public static final int MINIMUM_RAID_PLAYER_LEVEL_FIELD_NUMBER = 16;
  private int minimumRaidPlayerLevel_;
  /**
   * <code>int32 minimum_raid_player_level = 16;</code>
   * @return The minimumRaidPlayerLevel.
   */
  @java.lang.Override
  public int getMinimumRaidPlayerLevel() {
    return minimumRaidPlayerLevel_;
  }

  public static final int SHADOW_POKEMON_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER = 17;
  private float shadowPokemonAttackBonusMultiplier_;
  /**
   * <code>float shadow_pokemon_attack_bonus_multiplier = 17;</code>
   * @return The shadowPokemonAttackBonusMultiplier.
   */
  @java.lang.Override
  public float getShadowPokemonAttackBonusMultiplier() {
    return shadowPokemonAttackBonusMultiplier_;
  }

  public static final int SHADOW_POKEMON_DEFENSE_BONUS_MULTIPLIER_FIELD_NUMBER = 18;
  private float shadowPokemonDefenseBonusMultiplier_;
  /**
   * <code>float shadow_pokemon_defense_bonus_multiplier = 18;</code>
   * @return The shadowPokemonDefenseBonusMultiplier.
   */
  @java.lang.Override
  public float getShadowPokemonDefenseBonusMultiplier() {
    return shadowPokemonDefenseBonusMultiplier_;
  }

  public static final int PURIFIED_POKEMON_ATTACK_MULTIPLIER_VS_SHADOW_FIELD_NUMBER = 19;
  private float purifiedPokemonAttackMultiplierVsShadow_;
  /**
   * <code>float purified_pokemon_attack_multiplier_vs_shadow = 19;</code>
   * @return The purifiedPokemonAttackMultiplierVsShadow.
   */
  @java.lang.Override
  public float getPurifiedPokemonAttackMultiplierVsShadow() {
    return purifiedPokemonAttackMultiplierVsShadow_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (energyPerSec_ != 0F) {
      output.writeFloat(1, energyPerSec_);
    }
    if (dodgeEnergyCost_ != 0F) {
      output.writeFloat(2, dodgeEnergyCost_);
    }
    if (retargetSeconds_ != 0F) {
      output.writeFloat(3, retargetSeconds_);
    }
    if (enemyAttackInterval_ != 0F) {
      output.writeFloat(4, enemyAttackInterval_);
    }
    if (attackServerInterval_ != 0F) {
      output.writeFloat(5, attackServerInterval_);
    }
    if (roundDurationSeconds_ != 0F) {
      output.writeFloat(6, roundDurationSeconds_);
    }
    if (bonusTimePerAllySeconds_ != 0F) {
      output.writeFloat(7, bonusTimePerAllySeconds_);
    }
    if (maximumAttackersPerBattle_ != 0) {
      output.writeInt32(8, maximumAttackersPerBattle_);
    }
    if (sameTypeAttackBonusMultiplier_ != 0F) {
      output.writeFloat(9, sameTypeAttackBonusMultiplier_);
    }
    if (maximumEnergy_ != 0) {
      output.writeInt32(10, maximumEnergy_);
    }
    if (energyDeltaPerHealthLost_ != 0F) {
      output.writeFloat(11, energyDeltaPerHealthLost_);
    }
    if (dodgeDurationMs_ != 0) {
      output.writeInt32(12, dodgeDurationMs_);
    }
    if (minimumPlayerLevel_ != 0) {
      output.writeInt32(13, minimumPlayerLevel_);
    }
    if (swapDurationMs_ != 0) {
      output.writeInt32(14, swapDurationMs_);
    }
    if (dodgeDamageReductionPercent_ != 0F) {
      output.writeFloat(15, dodgeDamageReductionPercent_);
    }
    if (minimumRaidPlayerLevel_ != 0) {
      output.writeInt32(16, minimumRaidPlayerLevel_);
    }
    if (shadowPokemonAttackBonusMultiplier_ != 0F) {
      output.writeFloat(17, shadowPokemonAttackBonusMultiplier_);
    }
    if (shadowPokemonDefenseBonusMultiplier_ != 0F) {
      output.writeFloat(18, shadowPokemonDefenseBonusMultiplier_);
    }
    if (purifiedPokemonAttackMultiplierVsShadow_ != 0F) {
      output.writeFloat(19, purifiedPokemonAttackMultiplierVsShadow_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (energyPerSec_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(1, energyPerSec_);
    }
    if (dodgeEnergyCost_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, dodgeEnergyCost_);
    }
    if (retargetSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, retargetSeconds_);
    }
    if (enemyAttackInterval_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, enemyAttackInterval_);
    }
    if (attackServerInterval_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, attackServerInterval_);
    }
    if (roundDurationSeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, roundDurationSeconds_);
    }
    if (bonusTimePerAllySeconds_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, bonusTimePerAllySeconds_);
    }
    if (maximumAttackersPerBattle_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, maximumAttackersPerBattle_);
    }
    if (sameTypeAttackBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(9, sameTypeAttackBonusMultiplier_);
    }
    if (maximumEnergy_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, maximumEnergy_);
    }
    if (energyDeltaPerHealthLost_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(11, energyDeltaPerHealthLost_);
    }
    if (dodgeDurationMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, dodgeDurationMs_);
    }
    if (minimumPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(13, minimumPlayerLevel_);
    }
    if (swapDurationMs_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, swapDurationMs_);
    }
    if (dodgeDamageReductionPercent_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(15, dodgeDamageReductionPercent_);
    }
    if (minimumRaidPlayerLevel_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(16, minimumRaidPlayerLevel_);
    }
    if (shadowPokemonAttackBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(17, shadowPokemonAttackBonusMultiplier_);
    }
    if (shadowPokemonDefenseBonusMultiplier_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(18, shadowPokemonDefenseBonusMultiplier_);
    }
    if (purifiedPokemonAttackMultiplierVsShadow_ != 0F) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(19, purifiedPokemonAttackMultiplierVsShadow_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof POGOProtos.Rpc.GymBattleSettingsProto)) {
      return super.equals(obj);
    }
    POGOProtos.Rpc.GymBattleSettingsProto other = (POGOProtos.Rpc.GymBattleSettingsProto) obj;

    if (java.lang.Float.floatToIntBits(getEnergyPerSec())
        != java.lang.Float.floatToIntBits(
            other.getEnergyPerSec())) return false;
    if (java.lang.Float.floatToIntBits(getDodgeEnergyCost())
        != java.lang.Float.floatToIntBits(
            other.getDodgeEnergyCost())) return false;
    if (java.lang.Float.floatToIntBits(getRetargetSeconds())
        != java.lang.Float.floatToIntBits(
            other.getRetargetSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getEnemyAttackInterval())
        != java.lang.Float.floatToIntBits(
            other.getEnemyAttackInterval())) return false;
    if (java.lang.Float.floatToIntBits(getAttackServerInterval())
        != java.lang.Float.floatToIntBits(
            other.getAttackServerInterval())) return false;
    if (java.lang.Float.floatToIntBits(getRoundDurationSeconds())
        != java.lang.Float.floatToIntBits(
            other.getRoundDurationSeconds())) return false;
    if (java.lang.Float.floatToIntBits(getBonusTimePerAllySeconds())
        != java.lang.Float.floatToIntBits(
            other.getBonusTimePerAllySeconds())) return false;
    if (getMaximumAttackersPerBattle()
        != other.getMaximumAttackersPerBattle()) return false;
    if (java.lang.Float.floatToIntBits(getSameTypeAttackBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getSameTypeAttackBonusMultiplier())) return false;
    if (getMaximumEnergy()
        != other.getMaximumEnergy()) return false;
    if (java.lang.Float.floatToIntBits(getEnergyDeltaPerHealthLost())
        != java.lang.Float.floatToIntBits(
            other.getEnergyDeltaPerHealthLost())) return false;
    if (getDodgeDurationMs()
        != other.getDodgeDurationMs()) return false;
    if (getMinimumPlayerLevel()
        != other.getMinimumPlayerLevel()) return false;
    if (getSwapDurationMs()
        != other.getSwapDurationMs()) return false;
    if (java.lang.Float.floatToIntBits(getDodgeDamageReductionPercent())
        != java.lang.Float.floatToIntBits(
            other.getDodgeDamageReductionPercent())) return false;
    if (getMinimumRaidPlayerLevel()
        != other.getMinimumRaidPlayerLevel()) return false;
    if (java.lang.Float.floatToIntBits(getShadowPokemonAttackBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getShadowPokemonAttackBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getShadowPokemonDefenseBonusMultiplier())
        != java.lang.Float.floatToIntBits(
            other.getShadowPokemonDefenseBonusMultiplier())) return false;
    if (java.lang.Float.floatToIntBits(getPurifiedPokemonAttackMultiplierVsShadow())
        != java.lang.Float.floatToIntBits(
            other.getPurifiedPokemonAttackMultiplierVsShadow())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ENERGY_PER_SEC_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getEnergyPerSec());
    hash = (37 * hash) + DODGE_ENERGY_COST_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDodgeEnergyCost());
    hash = (37 * hash) + RETARGET_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getRetargetSeconds());
    hash = (37 * hash) + ENEMY_ATTACK_INTERVAL_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getEnemyAttackInterval());
    hash = (37 * hash) + ATTACK_SERVER_INTERVAL_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getAttackServerInterval());
    hash = (37 * hash) + ROUND_DURATION_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getRoundDurationSeconds());
    hash = (37 * hash) + BONUS_TIME_PER_ALLY_SECONDS_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getBonusTimePerAllySeconds());
    hash = (37 * hash) + MAXIMUM_ATTACKERS_PER_BATTLE_FIELD_NUMBER;
    hash = (53 * hash) + getMaximumAttackersPerBattle();
    hash = (37 * hash) + SAME_TYPE_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getSameTypeAttackBonusMultiplier());
    hash = (37 * hash) + MAXIMUM_ENERGY_FIELD_NUMBER;
    hash = (53 * hash) + getMaximumEnergy();
    hash = (37 * hash) + ENERGY_DELTA_PER_HEALTH_LOST_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getEnergyDeltaPerHealthLost());
    hash = (37 * hash) + DODGE_DURATION_MS_FIELD_NUMBER;
    hash = (53 * hash) + getDodgeDurationMs();
    hash = (37 * hash) + MINIMUM_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMinimumPlayerLevel();
    hash = (37 * hash) + SWAP_DURATION_MS_FIELD_NUMBER;
    hash = (53 * hash) + getSwapDurationMs();
    hash = (37 * hash) + DODGE_DAMAGE_REDUCTION_PERCENT_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getDodgeDamageReductionPercent());
    hash = (37 * hash) + MINIMUM_RAID_PLAYER_LEVEL_FIELD_NUMBER;
    hash = (53 * hash) + getMinimumRaidPlayerLevel();
    hash = (37 * hash) + SHADOW_POKEMON_ATTACK_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getShadowPokemonAttackBonusMultiplier());
    hash = (37 * hash) + SHADOW_POKEMON_DEFENSE_BONUS_MULTIPLIER_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getShadowPokemonDefenseBonusMultiplier());
    hash = (37 * hash) + PURIFIED_POKEMON_ATTACK_MULTIPLIER_VS_SHADOW_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getPurifiedPokemonAttackMultiplierVsShadow());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static POGOProtos.Rpc.GymBattleSettingsProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(POGOProtos.Rpc.GymBattleSettingsProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code POGOProtos.Rpc.GymBattleSettingsProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:POGOProtos.Rpc.GymBattleSettingsProto)
      POGOProtos.Rpc.GymBattleSettingsProtoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return POGOProtos.Rpc.Rpc.internal_static_POGOProtos_Rpc_GymBattleSettingsProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return POGOProtos.Rpc.Rpc.internal_static_POGOProtos_Rpc_GymBattleSettingsProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              POGOProtos.Rpc.GymBattleSettingsProto.class, POGOProtos.Rpc.GymBattleSettingsProto.Builder.class);
    }

    // Construct using POGOProtos.Rpc.GymBattleSettingsProto.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      energyPerSec_ = 0F;

      dodgeEnergyCost_ = 0F;

      retargetSeconds_ = 0F;

      enemyAttackInterval_ = 0F;

      attackServerInterval_ = 0F;

      roundDurationSeconds_ = 0F;

      bonusTimePerAllySeconds_ = 0F;

      maximumAttackersPerBattle_ = 0;

      sameTypeAttackBonusMultiplier_ = 0F;

      maximumEnergy_ = 0;

      energyDeltaPerHealthLost_ = 0F;

      dodgeDurationMs_ = 0;

      minimumPlayerLevel_ = 0;

      swapDurationMs_ = 0;

      dodgeDamageReductionPercent_ = 0F;

      minimumRaidPlayerLevel_ = 0;

      shadowPokemonAttackBonusMultiplier_ = 0F;

      shadowPokemonDefenseBonusMultiplier_ = 0F;

      purifiedPokemonAttackMultiplierVsShadow_ = 0F;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return POGOProtos.Rpc.Rpc.internal_static_POGOProtos_Rpc_GymBattleSettingsProto_descriptor;
    }

    @java.lang.Override
    public POGOProtos.Rpc.GymBattleSettingsProto getDefaultInstanceForType() {
      return POGOProtos.Rpc.GymBattleSettingsProto.getDefaultInstance();
    }

    @java.lang.Override
    public POGOProtos.Rpc.GymBattleSettingsProto build() {
      POGOProtos.Rpc.GymBattleSettingsProto result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public POGOProtos.Rpc.GymBattleSettingsProto buildPartial() {
      POGOProtos.Rpc.GymBattleSettingsProto result = new POGOProtos.Rpc.GymBattleSettingsProto(this);
      result.energyPerSec_ = energyPerSec_;
      result.dodgeEnergyCost_ = dodgeEnergyCost_;
      result.retargetSeconds_ = retargetSeconds_;
      result.enemyAttackInterval_ = enemyAttackInterval_;
      result.attackServerInterval_ = attackServerInterval_;
      result.roundDurationSeconds_ = roundDurationSeconds_;
      result.bonusTimePerAllySeconds_ = bonusTimePerAllySeconds_;
      result.maximumAttackersPerBattle_ = maximumAttackersPerBattle_;
      result.sameTypeAttackBonusMultiplier_ = sameTypeAttackBonusMultiplier_;
      result.maximumEnergy_ = maximumEnergy_;
      result.energyDeltaPerHealthLost_ = energyDeltaPerHealthLost_;
      result.dodgeDurationMs_ = dodgeDurationMs_;
      result.minimumPlayerLevel_ = minimumPlayerLevel_;
      result.swapDurationMs_ = swapDurationMs_;
      result.dodgeDamageReductionPercent_ = dodgeDamageReductionPercent_;
      result.minimumRaidPlayerLevel_ = minimumRaidPlayerLevel_;
      result.shadowPokemonAttackBonusMultiplier_ = shadowPokemonAttackBonusMultiplier_;
      result.shadowPokemonDefenseBonusMultiplier_ = shadowPokemonDefenseBonusMultiplier_;
      result.purifiedPokemonAttackMultiplierVsShadow_ = purifiedPokemonAttackMultiplierVsShadow_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof POGOProtos.Rpc.GymBattleSettingsProto) {
        return mergeFrom((POGOProtos.Rpc.GymBattleSettingsProto)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(POGOProtos.Rpc.GymBattleSettingsProto other) {
      if (other == POGOProtos.Rpc.GymBattleSettingsProto.getDefaultInstance()) return this;
      if (other.getEnergyPerSec() != 0F) {
        setEnergyPerSec(other.getEnergyPerSec());
      }
      if (other.getDodgeEnergyCost() != 0F) {
        setDodgeEnergyCost(other.getDodgeEnergyCost());
      }
      if (other.getRetargetSeconds() != 0F) {
        setRetargetSeconds(other.getRetargetSeconds());
      }
      if (other.getEnemyAttackInterval() != 0F) {
        setEnemyAttackInterval(other.getEnemyAttackInterval());
      }
      if (other.getAttackServerInterval() != 0F) {
        setAttackServerInterval(other.getAttackServerInterval());
      }
      if (other.getRoundDurationSeconds() != 0F) {
        setRoundDurationSeconds(other.getRoundDurationSeconds());
      }
      if (other.getBonusTimePerAllySeconds() != 0F) {
        setBonusTimePerAllySeconds(other.getBonusTimePerAllySeconds());
      }
      if (other.getMaximumAttackersPerBattle() != 0) {
        setMaximumAttackersPerBattle(other.getMaximumAttackersPerBattle());
      }
      if (other.getSameTypeAttackBonusMultiplier() != 0F) {
        setSameTypeAttackBonusMultiplier(other.getSameTypeAttackBonusMultiplier());
      }
      if (other.getMaximumEnergy() != 0) {
        setMaximumEnergy(other.getMaximumEnergy());
      }
      if (other.getEnergyDeltaPerHealthLost() != 0F) {
        setEnergyDeltaPerHealthLost(other.getEnergyDeltaPerHealthLost());
      }
      if (other.getDodgeDurationMs() != 0) {
        setDodgeDurationMs(other.getDodgeDurationMs());
      }
      if (other.getMinimumPlayerLevel() != 0) {
        setMinimumPlayerLevel(other.getMinimumPlayerLevel());
      }
      if (other.getSwapDurationMs() != 0) {
        setSwapDurationMs(other.getSwapDurationMs());
      }
      if (other.getDodgeDamageReductionPercent() != 0F) {
        setDodgeDamageReductionPercent(other.getDodgeDamageReductionPercent());
      }
      if (other.getMinimumRaidPlayerLevel() != 0) {
        setMinimumRaidPlayerLevel(other.getMinimumRaidPlayerLevel());
      }
      if (other.getShadowPokemonAttackBonusMultiplier() != 0F) {
        setShadowPokemonAttackBonusMultiplier(other.getShadowPokemonAttackBonusMultiplier());
      }
      if (other.getShadowPokemonDefenseBonusMultiplier() != 0F) {
        setShadowPokemonDefenseBonusMultiplier(other.getShadowPokemonDefenseBonusMultiplier());
      }
      if (other.getPurifiedPokemonAttackMultiplierVsShadow() != 0F) {
        setPurifiedPokemonAttackMultiplierVsShadow(other.getPurifiedPokemonAttackMultiplierVsShadow());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      POGOProtos.Rpc.GymBattleSettingsProto parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (POGOProtos.Rpc.GymBattleSettingsProto) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private float energyPerSec_ ;
    /**
     * <code>float energy_per_sec = 1;</code>
     * @return The energyPerSec.
     */
    @java.lang.Override
    public float getEnergyPerSec() {
      return energyPerSec_;
    }
    /**
     * <code>float energy_per_sec = 1;</code>
     * @param value The energyPerSec to set.
     * @return This builder for chaining.
     */
    public Builder setEnergyPerSec(float value) {
      
      energyPerSec_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float energy_per_sec = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnergyPerSec() {
      
      energyPerSec_ = 0F;
      onChanged();
      return this;
    }

    private float dodgeEnergyCost_ ;
    /**
     * <code>float dodge_energy_cost = 2;</code>
     * @return The dodgeEnergyCost.
     */
    @java.lang.Override
    public float getDodgeEnergyCost() {
      return dodgeEnergyCost_;
    }
    /**
     * <code>float dodge_energy_cost = 2;</code>
     * @param value The dodgeEnergyCost to set.
     * @return This builder for chaining.
     */
    public Builder setDodgeEnergyCost(float value) {
      
      dodgeEnergyCost_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float dodge_energy_cost = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDodgeEnergyCost() {
      
      dodgeEnergyCost_ = 0F;
      onChanged();
      return this;
    }

    private float retargetSeconds_ ;
    /**
     * <code>float retarget_seconds = 3;</code>
     * @return The retargetSeconds.
     */
    @java.lang.Override
    public float getRetargetSeconds() {
      return retargetSeconds_;
    }
    /**
     * <code>float retarget_seconds = 3;</code>
     * @param value The retargetSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setRetargetSeconds(float value) {
      
      retargetSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float retarget_seconds = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRetargetSeconds() {
      
      retargetSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float enemyAttackInterval_ ;
    /**
     * <code>float enemy_attack_interval = 4;</code>
     * @return The enemyAttackInterval.
     */
    @java.lang.Override
    public float getEnemyAttackInterval() {
      return enemyAttackInterval_;
    }
    /**
     * <code>float enemy_attack_interval = 4;</code>
     * @param value The enemyAttackInterval to set.
     * @return This builder for chaining.
     */
    public Builder setEnemyAttackInterval(float value) {
      
      enemyAttackInterval_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float enemy_attack_interval = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnemyAttackInterval() {
      
      enemyAttackInterval_ = 0F;
      onChanged();
      return this;
    }

    private float attackServerInterval_ ;
    /**
     * <code>float attack_server_interval = 5;</code>
     * @return The attackServerInterval.
     */
    @java.lang.Override
    public float getAttackServerInterval() {
      return attackServerInterval_;
    }
    /**
     * <code>float attack_server_interval = 5;</code>
     * @param value The attackServerInterval to set.
     * @return This builder for chaining.
     */
    public Builder setAttackServerInterval(float value) {
      
      attackServerInterval_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float attack_server_interval = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearAttackServerInterval() {
      
      attackServerInterval_ = 0F;
      onChanged();
      return this;
    }

    private float roundDurationSeconds_ ;
    /**
     * <code>float round_duration_seconds = 6;</code>
     * @return The roundDurationSeconds.
     */
    @java.lang.Override
    public float getRoundDurationSeconds() {
      return roundDurationSeconds_;
    }
    /**
     * <code>float round_duration_seconds = 6;</code>
     * @param value The roundDurationSeconds to set.
     * @return This builder for chaining.
     */
    public Builder setRoundDurationSeconds(float value) {
      
      roundDurationSeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float round_duration_seconds = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearRoundDurationSeconds() {
      
      roundDurationSeconds_ = 0F;
      onChanged();
      return this;
    }

    private float bonusTimePerAllySeconds_ ;
    /**
     * <code>float bonus_time_per_ally_seconds = 7;</code>
     * @return The bonusTimePerAllySeconds.
     */
    @java.lang.Override
    public float getBonusTimePerAllySeconds() {
      return bonusTimePerAllySeconds_;
    }
    /**
     * <code>float bonus_time_per_ally_seconds = 7;</code>
     * @param value The bonusTimePerAllySeconds to set.
     * @return This builder for chaining.
     */
    public Builder setBonusTimePerAllySeconds(float value) {
      
      bonusTimePerAllySeconds_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float bonus_time_per_ally_seconds = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearBonusTimePerAllySeconds() {
      
      bonusTimePerAllySeconds_ = 0F;
      onChanged();
      return this;
    }

    private int maximumAttackersPerBattle_ ;
    /**
     * <code>int32 maximum_attackers_per_battle = 8;</code>
     * @return The maximumAttackersPerBattle.
     */
    @java.lang.Override
    public int getMaximumAttackersPerBattle() {
      return maximumAttackersPerBattle_;
    }
    /**
     * <code>int32 maximum_attackers_per_battle = 8;</code>
     * @param value The maximumAttackersPerBattle to set.
     * @return This builder for chaining.
     */
    public Builder setMaximumAttackersPerBattle(int value) {
      
      maximumAttackersPerBattle_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maximum_attackers_per_battle = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaximumAttackersPerBattle() {
      
      maximumAttackersPerBattle_ = 0;
      onChanged();
      return this;
    }

    private float sameTypeAttackBonusMultiplier_ ;
    /**
     * <code>float same_type_attack_bonus_multiplier = 9;</code>
     * @return The sameTypeAttackBonusMultiplier.
     */
    @java.lang.Override
    public float getSameTypeAttackBonusMultiplier() {
      return sameTypeAttackBonusMultiplier_;
    }
    /**
     * <code>float same_type_attack_bonus_multiplier = 9;</code>
     * @param value The sameTypeAttackBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setSameTypeAttackBonusMultiplier(float value) {
      
      sameTypeAttackBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float same_type_attack_bonus_multiplier = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearSameTypeAttackBonusMultiplier() {
      
      sameTypeAttackBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private int maximumEnergy_ ;
    /**
     * <code>int32 maximum_energy = 10;</code>
     * @return The maximumEnergy.
     */
    @java.lang.Override
    public int getMaximumEnergy() {
      return maximumEnergy_;
    }
    /**
     * <code>int32 maximum_energy = 10;</code>
     * @param value The maximumEnergy to set.
     * @return This builder for chaining.
     */
    public Builder setMaximumEnergy(int value) {
      
      maximumEnergy_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maximum_energy = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaximumEnergy() {
      
      maximumEnergy_ = 0;
      onChanged();
      return this;
    }

    private float energyDeltaPerHealthLost_ ;
    /**
     * <code>float energy_delta_per_health_lost = 11;</code>
     * @return The energyDeltaPerHealthLost.
     */
    @java.lang.Override
    public float getEnergyDeltaPerHealthLost() {
      return energyDeltaPerHealthLost_;
    }
    /**
     * <code>float energy_delta_per_health_lost = 11;</code>
     * @param value The energyDeltaPerHealthLost to set.
     * @return This builder for chaining.
     */
    public Builder setEnergyDeltaPerHealthLost(float value) {
      
      energyDeltaPerHealthLost_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float energy_delta_per_health_lost = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearEnergyDeltaPerHealthLost() {
      
      energyDeltaPerHealthLost_ = 0F;
      onChanged();
      return this;
    }

    private int dodgeDurationMs_ ;
    /**
     * <code>int32 dodge_duration_ms = 12;</code>
     * @return The dodgeDurationMs.
     */
    @java.lang.Override
    public int getDodgeDurationMs() {
      return dodgeDurationMs_;
    }
    /**
     * <code>int32 dodge_duration_ms = 12;</code>
     * @param value The dodgeDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setDodgeDurationMs(int value) {
      
      dodgeDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 dodge_duration_ms = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearDodgeDurationMs() {
      
      dodgeDurationMs_ = 0;
      onChanged();
      return this;
    }

    private int minimumPlayerLevel_ ;
    /**
     * <code>int32 minimum_player_level = 13;</code>
     * @return The minimumPlayerLevel.
     */
    @java.lang.Override
    public int getMinimumPlayerLevel() {
      return minimumPlayerLevel_;
    }
    /**
     * <code>int32 minimum_player_level = 13;</code>
     * @param value The minimumPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumPlayerLevel(int value) {
      
      minimumPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 minimum_player_level = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumPlayerLevel() {
      
      minimumPlayerLevel_ = 0;
      onChanged();
      return this;
    }

    private int swapDurationMs_ ;
    /**
     * <code>int32 swap_duration_ms = 14;</code>
     * @return The swapDurationMs.
     */
    @java.lang.Override
    public int getSwapDurationMs() {
      return swapDurationMs_;
    }
    /**
     * <code>int32 swap_duration_ms = 14;</code>
     * @param value The swapDurationMs to set.
     * @return This builder for chaining.
     */
    public Builder setSwapDurationMs(int value) {
      
      swapDurationMs_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 swap_duration_ms = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearSwapDurationMs() {
      
      swapDurationMs_ = 0;
      onChanged();
      return this;
    }

    private float dodgeDamageReductionPercent_ ;
    /**
     * <code>float dodge_damage_reduction_percent = 15;</code>
     * @return The dodgeDamageReductionPercent.
     */
    @java.lang.Override
    public float getDodgeDamageReductionPercent() {
      return dodgeDamageReductionPercent_;
    }
    /**
     * <code>float dodge_damage_reduction_percent = 15;</code>
     * @param value The dodgeDamageReductionPercent to set.
     * @return This builder for chaining.
     */
    public Builder setDodgeDamageReductionPercent(float value) {
      
      dodgeDamageReductionPercent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float dodge_damage_reduction_percent = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearDodgeDamageReductionPercent() {
      
      dodgeDamageReductionPercent_ = 0F;
      onChanged();
      return this;
    }

    private int minimumRaidPlayerLevel_ ;
    /**
     * <code>int32 minimum_raid_player_level = 16;</code>
     * @return The minimumRaidPlayerLevel.
     */
    @java.lang.Override
    public int getMinimumRaidPlayerLevel() {
      return minimumRaidPlayerLevel_;
    }
    /**
     * <code>int32 minimum_raid_player_level = 16;</code>
     * @param value The minimumRaidPlayerLevel to set.
     * @return This builder for chaining.
     */
    public Builder setMinimumRaidPlayerLevel(int value) {
      
      minimumRaidPlayerLevel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 minimum_raid_player_level = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearMinimumRaidPlayerLevel() {
      
      minimumRaidPlayerLevel_ = 0;
      onChanged();
      return this;
    }

    private float shadowPokemonAttackBonusMultiplier_ ;
    /**
     * <code>float shadow_pokemon_attack_bonus_multiplier = 17;</code>
     * @return The shadowPokemonAttackBonusMultiplier.
     */
    @java.lang.Override
    public float getShadowPokemonAttackBonusMultiplier() {
      return shadowPokemonAttackBonusMultiplier_;
    }
    /**
     * <code>float shadow_pokemon_attack_bonus_multiplier = 17;</code>
     * @param value The shadowPokemonAttackBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setShadowPokemonAttackBonusMultiplier(float value) {
      
      shadowPokemonAttackBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float shadow_pokemon_attack_bonus_multiplier = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearShadowPokemonAttackBonusMultiplier() {
      
      shadowPokemonAttackBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float shadowPokemonDefenseBonusMultiplier_ ;
    /**
     * <code>float shadow_pokemon_defense_bonus_multiplier = 18;</code>
     * @return The shadowPokemonDefenseBonusMultiplier.
     */
    @java.lang.Override
    public float getShadowPokemonDefenseBonusMultiplier() {
      return shadowPokemonDefenseBonusMultiplier_;
    }
    /**
     * <code>float shadow_pokemon_defense_bonus_multiplier = 18;</code>
     * @param value The shadowPokemonDefenseBonusMultiplier to set.
     * @return This builder for chaining.
     */
    public Builder setShadowPokemonDefenseBonusMultiplier(float value) {
      
      shadowPokemonDefenseBonusMultiplier_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float shadow_pokemon_defense_bonus_multiplier = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearShadowPokemonDefenseBonusMultiplier() {
      
      shadowPokemonDefenseBonusMultiplier_ = 0F;
      onChanged();
      return this;
    }

    private float purifiedPokemonAttackMultiplierVsShadow_ ;
    /**
     * <code>float purified_pokemon_attack_multiplier_vs_shadow = 19;</code>
     * @return The purifiedPokemonAttackMultiplierVsShadow.
     */
    @java.lang.Override
    public float getPurifiedPokemonAttackMultiplierVsShadow() {
      return purifiedPokemonAttackMultiplierVsShadow_;
    }
    /**
     * <code>float purified_pokemon_attack_multiplier_vs_shadow = 19;</code>
     * @param value The purifiedPokemonAttackMultiplierVsShadow to set.
     * @return This builder for chaining.
     */
    public Builder setPurifiedPokemonAttackMultiplierVsShadow(float value) {
      
      purifiedPokemonAttackMultiplierVsShadow_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>float purified_pokemon_attack_multiplier_vs_shadow = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearPurifiedPokemonAttackMultiplierVsShadow() {
      
      purifiedPokemonAttackMultiplierVsShadow_ = 0F;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:POGOProtos.Rpc.GymBattleSettingsProto)
  }

  // @@protoc_insertion_point(class_scope:POGOProtos.Rpc.GymBattleSettingsProto)
  private static final POGOProtos.Rpc.GymBattleSettingsProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new POGOProtos.Rpc.GymBattleSettingsProto();
  }

  public static POGOProtos.Rpc.GymBattleSettingsProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GymBattleSettingsProto>
      PARSER = new com.google.protobuf.AbstractParser<GymBattleSettingsProto>() {
    @java.lang.Override
    public GymBattleSettingsProto parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GymBattleSettingsProto(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GymBattleSettingsProto> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GymBattleSettingsProto> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public POGOProtos.Rpc.GymBattleSettingsProto getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

