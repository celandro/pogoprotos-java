// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Rpc.proto

package POGOProtos.Rpc;

public interface CatchPokemonTelemetryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Rpc.CatchPokemonTelemetry)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string status = 1;</code>
   * @return The status.
   */
  java.lang.String getStatus();
  /**
   * <code>string status = 1;</code>
   * @return The bytes for status.
   */
  com.google.protobuf.ByteString
      getStatusBytes();

  /**
   * <code>.POGOProtos.Rpc.EncounterPokemonTelemetry encounter_pokemon_telemetry = 2;</code>
   * @return Whether the encounterPokemonTelemetry field is set.
   */
  boolean hasEncounterPokemonTelemetry();
  /**
   * <code>.POGOProtos.Rpc.EncounterPokemonTelemetry encounter_pokemon_telemetry = 2;</code>
   * @return The encounterPokemonTelemetry.
   */
  POGOProtos.Rpc.EncounterPokemonTelemetry getEncounterPokemonTelemetry();
  /**
   * <code>.POGOProtos.Rpc.EncounterPokemonTelemetry encounter_pokemon_telemetry = 2;</code>
   */
  POGOProtos.Rpc.EncounterPokemonTelemetryOrBuilder getEncounterPokemonTelemetryOrBuilder();

  /**
   * <code>int32 balltype = 3;</code>
   * @return The balltype.
   */
  int getBalltype();

  /**
   * <code>int32 hit_grade = 4;</code>
   * @return The hitGrade.
   */
  int getHitGrade();

  /**
   * <code>bool curve_ball = 5;</code>
   * @return The curveBall.
   */
  boolean getCurveBall();

  /**
   * <code>double miss_percent = 6;</code>
   * @return The missPercent.
   */
  double getMissPercent();
}
