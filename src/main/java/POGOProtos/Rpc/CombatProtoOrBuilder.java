// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Rpc.proto

package POGOProtos.Rpc;

public interface CombatProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Rpc.CombatProto)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatState combat_state = 1;</code>
   * @return The enum numeric value on the wire for combatState.
   */
  int getCombatStateValue();
  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatState combat_state = 1;</code>
   * @return The combatState.
   */
  POGOProtos.Rpc.CombatProto.CombatState getCombatState();

  /**
   * <code>string combat_id = 2;</code>
   * @return The combatId.
   */
  java.lang.String getCombatId();
  /**
   * <code>string combat_id = 2;</code>
   * @return The bytes for combatId.
   */
  com.google.protobuf.ByteString
      getCombatIdBytes();

  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatPlayerProto player = 3;</code>
   * @return Whether the player field is set.
   */
  boolean hasPlayer();
  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatPlayerProto player = 3;</code>
   * @return The player.
   */
  POGOProtos.Rpc.CombatProto.CombatPlayerProto getPlayer();
  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatPlayerProto player = 3;</code>
   */
  POGOProtos.Rpc.CombatProto.CombatPlayerProtoOrBuilder getPlayerOrBuilder();

  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatPlayerProto opponent = 4;</code>
   * @return Whether the opponent field is set.
   */
  boolean hasOpponent();
  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatPlayerProto opponent = 4;</code>
   * @return The opponent.
   */
  POGOProtos.Rpc.CombatProto.CombatPlayerProto getOpponent();
  /**
   * <code>.POGOProtos.Rpc.CombatProto.CombatPlayerProto opponent = 4;</code>
   */
  POGOProtos.Rpc.CombatProto.CombatPlayerProtoOrBuilder getOpponentOrBuilder();

  /**
   * <code>int64 combat_start_ms = 5;</code>
   * @return The combatStartMs.
   */
  long getCombatStartMs();

  /**
   * <code>int64 combat_end_ms = 6;</code>
   * @return The combatEndMs.
   */
  long getCombatEndMs();

  /**
   * <code>int64 server_ms = 7;</code>
   * @return The serverMs.
   */
  long getServerMs();

  /**
   * <code>int32 current_turn = 8;</code>
   * @return The currentTurn.
   */
  int getCurrentTurn();

  /**
   * <code>int64 turn_start_ms = 9;</code>
   * @return The turnStartMs.
   */
  long getTurnStartMs();

  /**
   * <code>int64 minigame_end_ms = 10;</code>
   * @return The minigameEndMs.
   */
  long getMinigameEndMs();

  /**
   * <code>int64 minigame_submit_score_end_ms = 11;</code>
   * @return The minigameSubmitScoreEndMs.
   */
  long getMinigameSubmitScoreEndMs();

  /**
   * <code>int64 change_pokemon_end_ms = 12;</code>
   * @return The changePokemonEndMs.
   */
  long getChangePokemonEndMs();

  /**
   * <code>int64 quick_swap_cooldown_duration_ms = 13;</code>
   * @return The quickSwapCooldownDurationMs.
   */
  long getQuickSwapCooldownDurationMs();

  /**
   * <code>int64 state_change_delay_until_turn = 14;</code>
   * @return The stateChangeDelayUntilTurn.
   */
  long getStateChangeDelayUntilTurn();
}
