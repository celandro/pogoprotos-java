// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/AcceptCombatChallengeResponse.proto

package POGOProtos.Networking.Responses;

public final class AcceptCombatChallengeResponseOuterClass {
  private AcceptCombatChallengeResponseOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_POGOProtos_Networking_Responses_AcceptCombatChallengeResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_POGOProtos_Networking_Responses_AcceptCombatChallengeResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nCPOGOProtos/Networking/Responses/Accept" +
      "CombatChallengeResponse.proto\022\037POGOProto" +
      "s.Networking.Responses\032,POGOProtos/Data/" +
      "Combat/CombatChallenge.proto\"\363\003\n\035AcceptC" +
      "ombatChallengeResponse\022U\n\006result\030\001 \001(\0162E" +
      ".POGOProtos.Networking.Responses.AcceptC" +
      "ombatChallengeResponse.Result\022:\n\tchallen" +
      "ge\030\002 \001(\0132\'.POGOProtos.Data.Combat.Combat" +
      "Challenge\"\276\002\n\006Result\022\t\n\005UNSET\020\000\022\013\n\007SUCCE" +
      "SS\020\001\022!\n\035ERROR_INVALID_CHALLENGE_STATE\020\002\022" +
      "\035\n\031ERROR_CHALLENGE_NOT_FOUND\020\003\022\"\n\036ERROR_" +
      "POKEMON_NOT_IN_INVENTORY\020\004\022\035\n\031ERROR_NOT_" +
      "ELIGIBLE_LEAGUE\020\005\022$\n ERROR_PLAYER_BELOW_" +
      "MINIMUM_LEVEL\020\006\022\037\n\033ERROR_OPPONENT_NOT_IN" +
      "_RANGE\020\007\022\032\n\026ERROR_ALREADY_TIMEDOUT\020\010\022\033\n\027" +
      "ERROR_ALREADY_CANCELLED\020\t\022\027\n\023ERROR_ACCES" +
      "S_DENIED\020\nB\002P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          POGOProtos.Data.Combat.CombatChallengeOuterClass.getDescriptor(),
        });
    internal_static_POGOProtos_Networking_Responses_AcceptCombatChallengeResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_POGOProtos_Networking_Responses_AcceptCombatChallengeResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_POGOProtos_Networking_Responses_AcceptCombatChallengeResponse_descriptor,
        new java.lang.String[] { "Result", "Challenge", });
    POGOProtos.Data.Combat.CombatChallengeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
