// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/GetPlayerResponse.proto

package POGOProtos.Networking.Responses;

public interface GetPlayerResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:POGOProtos.Networking.Responses.GetPlayerResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>bool success = 1;</code>
   * @return The success.
   */
  boolean getSuccess();

  /**
   * <code>.POGOProtos.Data.PlayerData player_data = 2;</code>
   * @return Whether the playerData field is set.
   */
  boolean hasPlayerData();
  /**
   * <code>.POGOProtos.Data.PlayerData player_data = 2;</code>
   * @return The playerData.
   */
  POGOProtos.Data.PlayerData getPlayerData();
  /**
   * <code>.POGOProtos.Data.PlayerData player_data = 2;</code>
   */
  POGOProtos.Data.PlayerDataOrBuilder getPlayerDataOrBuilder();

  /**
   * <code>bool banned = 3;</code>
   * @return The banned.
   */
  boolean getBanned();

  /**
   * <code>bool warn = 4;</code>
   * @return The warn.
   */
  boolean getWarn();

  /**
   * <code>bool was_created = 5;</code>
   * @return The wasCreated.
   */
  boolean getWasCreated();

  /**
   * <code>bool warn_message_acknowledged = 6;</code>
   * @return The warnMessageAcknowledged.
   */
  boolean getWarnMessageAcknowledged();

  /**
   * <code>bool was_suspended = 7;</code>
   * @return The wasSuspended.
   */
  boolean getWasSuspended();

  /**
   * <code>bool suspended_message_acknowledged = 8;</code>
   * @return The suspendedMessageAcknowledged.
   */
  boolean getSuspendedMessageAcknowledged();

  /**
   * <code>int64 warn_expire_ms = 9;</code>
   * @return The warnExpireMs.
   */
  long getWarnExpireMs();

  /**
   * <code>repeated int32 user_permission = 10;</code>
   * @return A list containing the userPermission.
   */
  java.util.List<java.lang.Integer> getUserPermissionList();
  /**
   * <code>repeated int32 user_permission = 10;</code>
   * @return The count of userPermission.
   */
  int getUserPermissionCount();
  /**
   * <code>repeated int32 user_permission = 10;</code>
   * @param index The index of the element to return.
   * @return The userPermission at the given index.
   */
  int getUserPermission(int index);
}
