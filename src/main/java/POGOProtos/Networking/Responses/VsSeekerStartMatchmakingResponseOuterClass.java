// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/VsSeekerStartMatchmakingResponse.proto

package POGOProtos.Networking.Responses;

public final class VsSeekerStartMatchmakingResponseOuterClass {
  private VsSeekerStartMatchmakingResponseOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_POGOProtos_Networking_Responses_VsSeekerStartMatchmakingResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_POGOProtos_Networking_Responses_VsSeekerStartMatchmakingResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nFPOGOProtos/Networking/Responses/VsSeek" +
      "erStartMatchmakingResponse.proto\022\037POGOPr" +
      "otos.Networking.Responses\032,POGOProtos/Da" +
      "ta/Combat/CombatChallenge.proto\"\305\004\n VsSe" +
      "ekerStartMatchmakingResponse\022X\n\006result\030\001" +
      " \001(\0162H.POGOProtos.Networking.Responses.V" +
      "sSeekerStartMatchmakingResponse.Result\022:" +
      "\n\tchallenge\030\002 \001(\0132\'.POGOProtos.Data.Comb" +
      "at.CombatChallenge\022\020\n\010queue_id\030\003 \001(\t\"\370\002\n" +
      "\006Result\022\t\n\005UNSET\020\000\022\032\n\026SUCCESS_OPPONENT_F" +
      "OUND\020\001\022\022\n\016SUCCESS_QUEUED\020\002\022\037\n\033ERROR_NO_B" +
      "ATTLE_PASSES_LEFT\020\003\022\032\n\026ERROR_ALREADY_IN_" +
      "QUEUE\020\004\022*\n&ERROR_VS_SEEKER_PLAYER_IN_WRO" +
      "NG_SEASON\020\005\022!\n\035ERROR_PLAYER_HAS_NO_VS_SE" +
      "EKER\020\006\022\027\n\023ERROR_ACCESS_DENIED\020\007\022.\n*ERROR" +
      "_POKEMON_LINEUP_INELIGIBLE_FOR_LEAGUE\020\010\022" +
      "!\n\035ERROR_VS_SEEKER_NOT_ACTIVATED\020\t\022!\n\035ER" +
      "ROR_TEMPORARILY_UNAVAILABLE\020\n\022\030\n\024ERROR_E" +
      "XCEEDED_LIMIT\020\013B\002P\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          POGOProtos.Data.Combat.CombatChallengeOuterClass.getDescriptor(),
        });
    internal_static_POGOProtos_Networking_Responses_VsSeekerStartMatchmakingResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_POGOProtos_Networking_Responses_VsSeekerStartMatchmakingResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_POGOProtos_Networking_Responses_VsSeekerStartMatchmakingResponse_descriptor,
        new java.lang.String[] { "Result", "Challenge", "QueueId", });
    POGOProtos.Data.Combat.CombatChallengeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
