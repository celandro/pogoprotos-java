// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos/Networking/Responses/DiskEncounterResponse.proto

package POGOProtos.Networking.Responses;

public final class DiskEncounterResponseOuterClass {
  private DiskEncounterResponseOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_POGOProtos_Networking_Responses_DiskEncounterResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_POGOProtos_Networking_Responses_DiskEncounterResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;POGOProtos/Networking/Responses/DiskEn" +
      "counterResponse.proto\022\037POGOProtos.Networ" +
      "king.Responses\032!POGOProtos/Data/PokemonD" +
      "ata.proto\0320POGOProtos/Data/Capture/Captu" +
      "reProbability.proto\032&POGOProtos/Inventor" +
      "y/Item/ItemId.proto\"\306\003\n\025DiskEncounterRes" +
      "ponse\022M\n\006result\030\001 \001(\0162=.POGOProtos.Netwo" +
      "rking.Responses.DiskEncounterResponse.Re" +
      "sult\0222\n\014pokemon_data\030\002 \001(\0132\034.POGOProtos." +
      "Data.PokemonData\022H\n\023capture_probability\030" +
      "\003 \001(\0132+.POGOProtos.Data.Capture.CaptureP" +
      "robability\0226\n\013active_item\030\004 \001(\0162!.POGOPr" +
      "otos.Inventory.Item.ItemId\022\"\n\032arplus_att" +
      "empts_until_flee\030\005 \001(\005\"\203\001\n\006Result\022\013\n\007UNK" +
      "NOWN\020\000\022\013\n\007SUCCESS\020\001\022\021\n\rNOT_AVAILABLE\020\002\022\020" +
      "\n\014NOT_IN_RANGE\020\003\022\036\n\032ENCOUNTER_ALREADY_FI" +
      "NISHED\020\004\022\032\n\026POKEMON_INVENTORY_FULL\020\005B\002P\001" +
      "b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          POGOProtos.Data.PokemonDataOuterClass.getDescriptor(),
          POGOProtos.Data.Capture.CaptureProbabilityOuterClass.getDescriptor(),
          POGOProtos.Inventory.Item.ItemIdOuterClass.getDescriptor(),
        });
    internal_static_POGOProtos_Networking_Responses_DiskEncounterResponse_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_POGOProtos_Networking_Responses_DiskEncounterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_POGOProtos_Networking_Responses_DiskEncounterResponse_descriptor,
        new java.lang.String[] { "Result", "PokemonData", "CaptureProbability", "ActiveItem", "ArplusAttemptsUntilFlee", });
    POGOProtos.Data.PokemonDataOuterClass.getDescriptor();
    POGOProtos.Data.Capture.CaptureProbabilityOuterClass.getDescriptor();
    POGOProtos.Inventory.Item.ItemIdOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
